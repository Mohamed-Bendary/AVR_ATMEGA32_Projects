
LCD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000029ea  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000044  00800060  000029ea  00002a5e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00001944  00000000  00000000  00002aa4  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000c34  00000000  00000000  000043e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000140  00000000  00000000  0000501c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000170  00000000  00000000  0000515c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c49  00000000  00000000  000052cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  00006f15  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dad  00000000  00000000  00007e00  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  00008bb0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000028d  00000000  00000000  00008d10  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  00008f9d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000976b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ea ee       	ldi	r30, 0xEA	; 234
      68:	f9 e2       	ldi	r31, 0x29	; 41
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a4 3a       	cpi	r26, 0xA4	; 164
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 82 0b 	call	0x1704	; 0x1704 <main>
      7a:	0c 94 f3 14 	jmp	0x29e6	; 0x29e6 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 bc 14 	jmp	0x2978	; 0x2978 <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a3 e8       	ldi	r26, 0x83	; 131
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 d8 14 	jmp	0x29b0	; 0x29b0 <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 c8 14 	jmp	0x2990	; 0x2990 <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 e4 14 	jmp	0x29c8	; 0x29c8 <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 c8 14 	jmp	0x2990	; 0x2990 <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 e4 14 	jmp	0x29c8	; 0x29c8 <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 bc 14 	jmp	0x2978	; 0x2978 <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	83 e8       	ldi	r24, 0x83	; 131
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 d8 14 	jmp	0x29b0	; 0x29b0 <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 c8 14 	jmp	0x2990	; 0x2990 <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 e4 14 	jmp	0x29c8	; 0x29c8 <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 c8 14 	jmp	0x2990	; 0x2990 <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 e4 14 	jmp	0x29c8	; 0x29c8 <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 c8 14 	jmp	0x2990	; 0x2990 <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 e4 14 	jmp	0x29c8	; 0x29c8 <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 cc 14 	jmp	0x2998	; 0x2998 <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 e8 14 	jmp	0x29d0	; 0x29d0 <__epilogue_restores__+0x20>

000007ea <__pack_f>:
     7ea:	df 92       	push	r13
     7ec:	ef 92       	push	r14
     7ee:	ff 92       	push	r15
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	fc 01       	movw	r30, r24
     7f6:	e4 80       	ldd	r14, Z+4	; 0x04
     7f8:	f5 80       	ldd	r15, Z+5	; 0x05
     7fa:	06 81       	ldd	r16, Z+6	; 0x06
     7fc:	17 81       	ldd	r17, Z+7	; 0x07
     7fe:	d1 80       	ldd	r13, Z+1	; 0x01
     800:	80 81       	ld	r24, Z
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	48 f4       	brcc	.+18     	; 0x818 <__pack_f+0x2e>
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	a0 e1       	ldi	r26, 0x10	; 16
     80c:	b0 e0       	ldi	r27, 0x00	; 0
     80e:	e8 2a       	or	r14, r24
     810:	f9 2a       	or	r15, r25
     812:	0a 2b       	or	r16, r26
     814:	1b 2b       	or	r17, r27
     816:	a5 c0       	rjmp	.+330    	; 0x962 <__stack+0x103>
     818:	84 30       	cpi	r24, 0x04	; 4
     81a:	09 f4       	brne	.+2      	; 0x81e <__pack_f+0x34>
     81c:	9f c0       	rjmp	.+318    	; 0x95c <__stack+0xfd>
     81e:	82 30       	cpi	r24, 0x02	; 2
     820:	21 f4       	brne	.+8      	; 0x82a <__pack_f+0x40>
     822:	ee 24       	eor	r14, r14
     824:	ff 24       	eor	r15, r15
     826:	87 01       	movw	r16, r14
     828:	05 c0       	rjmp	.+10     	; 0x834 <__pack_f+0x4a>
     82a:	e1 14       	cp	r14, r1
     82c:	f1 04       	cpc	r15, r1
     82e:	01 05       	cpc	r16, r1
     830:	11 05       	cpc	r17, r1
     832:	19 f4       	brne	.+6      	; 0x83a <__pack_f+0x50>
     834:	e0 e0       	ldi	r30, 0x00	; 0
     836:	f0 e0       	ldi	r31, 0x00	; 0
     838:	96 c0       	rjmp	.+300    	; 0x966 <__stack+0x107>
     83a:	62 81       	ldd	r22, Z+2	; 0x02
     83c:	73 81       	ldd	r23, Z+3	; 0x03
     83e:	9f ef       	ldi	r25, 0xFF	; 255
     840:	62 38       	cpi	r22, 0x82	; 130
     842:	79 07       	cpc	r23, r25
     844:	0c f0       	brlt	.+2      	; 0x848 <__pack_f+0x5e>
     846:	5b c0       	rjmp	.+182    	; 0x8fe <__stack+0x9f>
     848:	22 e8       	ldi	r18, 0x82	; 130
     84a:	3f ef       	ldi	r19, 0xFF	; 255
     84c:	26 1b       	sub	r18, r22
     84e:	37 0b       	sbc	r19, r23
     850:	2a 31       	cpi	r18, 0x1A	; 26
     852:	31 05       	cpc	r19, r1
     854:	2c f0       	brlt	.+10     	; 0x860 <__stack+0x1>
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	50 e0       	ldi	r21, 0x00	; 0
     85e:	2a c0       	rjmp	.+84     	; 0x8b4 <__stack+0x55>
     860:	b8 01       	movw	r22, r16
     862:	a7 01       	movw	r20, r14
     864:	02 2e       	mov	r0, r18
     866:	04 c0       	rjmp	.+8      	; 0x870 <__stack+0x11>
     868:	76 95       	lsr	r23
     86a:	67 95       	ror	r22
     86c:	57 95       	ror	r21
     86e:	47 95       	ror	r20
     870:	0a 94       	dec	r0
     872:	d2 f7       	brpl	.-12     	; 0x868 <__stack+0x9>
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	a0 e0       	ldi	r26, 0x00	; 0
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__stack+0x27>
     87e:	88 0f       	add	r24, r24
     880:	99 1f       	adc	r25, r25
     882:	aa 1f       	adc	r26, r26
     884:	bb 1f       	adc	r27, r27
     886:	2a 95       	dec	r18
     888:	d2 f7       	brpl	.-12     	; 0x87e <__stack+0x1f>
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	a1 09       	sbc	r26, r1
     88e:	b1 09       	sbc	r27, r1
     890:	8e 21       	and	r24, r14
     892:	9f 21       	and	r25, r15
     894:	a0 23       	and	r26, r16
     896:	b1 23       	and	r27, r17
     898:	00 97       	sbiw	r24, 0x00	; 0
     89a:	a1 05       	cpc	r26, r1
     89c:	b1 05       	cpc	r27, r1
     89e:	21 f0       	breq	.+8      	; 0x8a8 <__stack+0x49>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	a0 e0       	ldi	r26, 0x00	; 0
     8a6:	b0 e0       	ldi	r27, 0x00	; 0
     8a8:	9a 01       	movw	r18, r20
     8aa:	ab 01       	movw	r20, r22
     8ac:	28 2b       	or	r18, r24
     8ae:	39 2b       	or	r19, r25
     8b0:	4a 2b       	or	r20, r26
     8b2:	5b 2b       	or	r21, r27
     8b4:	da 01       	movw	r26, r20
     8b6:	c9 01       	movw	r24, r18
     8b8:	8f 77       	andi	r24, 0x7F	; 127
     8ba:	90 70       	andi	r25, 0x00	; 0
     8bc:	a0 70       	andi	r26, 0x00	; 0
     8be:	b0 70       	andi	r27, 0x00	; 0
     8c0:	80 34       	cpi	r24, 0x40	; 64
     8c2:	91 05       	cpc	r25, r1
     8c4:	a1 05       	cpc	r26, r1
     8c6:	b1 05       	cpc	r27, r1
     8c8:	39 f4       	brne	.+14     	; 0x8d8 <__stack+0x79>
     8ca:	27 ff       	sbrs	r18, 7
     8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <__stack+0x81>
     8ce:	20 5c       	subi	r18, 0xC0	; 192
     8d0:	3f 4f       	sbci	r19, 0xFF	; 255
     8d2:	4f 4f       	sbci	r20, 0xFF	; 255
     8d4:	5f 4f       	sbci	r21, 0xFF	; 255
     8d6:	04 c0       	rjmp	.+8      	; 0x8e0 <__stack+0x81>
     8d8:	21 5c       	subi	r18, 0xC1	; 193
     8da:	3f 4f       	sbci	r19, 0xFF	; 255
     8dc:	4f 4f       	sbci	r20, 0xFF	; 255
     8de:	5f 4f       	sbci	r21, 0xFF	; 255
     8e0:	e0 e0       	ldi	r30, 0x00	; 0
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	20 30       	cpi	r18, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	3a 07       	cpc	r19, r26
     8ea:	a0 e0       	ldi	r26, 0x00	; 0
     8ec:	4a 07       	cpc	r20, r26
     8ee:	a0 e4       	ldi	r26, 0x40	; 64
     8f0:	5a 07       	cpc	r21, r26
     8f2:	10 f0       	brcs	.+4      	; 0x8f8 <__stack+0x99>
     8f4:	e1 e0       	ldi	r30, 0x01	; 1
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	79 01       	movw	r14, r18
     8fa:	8a 01       	movw	r16, r20
     8fc:	27 c0       	rjmp	.+78     	; 0x94c <__stack+0xed>
     8fe:	60 38       	cpi	r22, 0x80	; 128
     900:	71 05       	cpc	r23, r1
     902:	64 f5       	brge	.+88     	; 0x95c <__stack+0xfd>
     904:	fb 01       	movw	r30, r22
     906:	e1 58       	subi	r30, 0x81	; 129
     908:	ff 4f       	sbci	r31, 0xFF	; 255
     90a:	d8 01       	movw	r26, r16
     90c:	c7 01       	movw	r24, r14
     90e:	8f 77       	andi	r24, 0x7F	; 127
     910:	90 70       	andi	r25, 0x00	; 0
     912:	a0 70       	andi	r26, 0x00	; 0
     914:	b0 70       	andi	r27, 0x00	; 0
     916:	80 34       	cpi	r24, 0x40	; 64
     918:	91 05       	cpc	r25, r1
     91a:	a1 05       	cpc	r26, r1
     91c:	b1 05       	cpc	r27, r1
     91e:	39 f4       	brne	.+14     	; 0x92e <__stack+0xcf>
     920:	e7 fe       	sbrs	r14, 7
     922:	0d c0       	rjmp	.+26     	; 0x93e <__stack+0xdf>
     924:	80 e4       	ldi	r24, 0x40	; 64
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	a0 e0       	ldi	r26, 0x00	; 0
     92a:	b0 e0       	ldi	r27, 0x00	; 0
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__stack+0xd7>
     92e:	8f e3       	ldi	r24, 0x3F	; 63
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	e8 0e       	add	r14, r24
     938:	f9 1e       	adc	r15, r25
     93a:	0a 1f       	adc	r16, r26
     93c:	1b 1f       	adc	r17, r27
     93e:	17 ff       	sbrs	r17, 7
     940:	05 c0       	rjmp	.+10     	; 0x94c <__stack+0xed>
     942:	16 95       	lsr	r17
     944:	07 95       	ror	r16
     946:	f7 94       	ror	r15
     948:	e7 94       	ror	r14
     94a:	31 96       	adiw	r30, 0x01	; 1
     94c:	87 e0       	ldi	r24, 0x07	; 7
     94e:	16 95       	lsr	r17
     950:	07 95       	ror	r16
     952:	f7 94       	ror	r15
     954:	e7 94       	ror	r14
     956:	8a 95       	dec	r24
     958:	d1 f7       	brne	.-12     	; 0x94e <__stack+0xef>
     95a:	05 c0       	rjmp	.+10     	; 0x966 <__stack+0x107>
     95c:	ee 24       	eor	r14, r14
     95e:	ff 24       	eor	r15, r15
     960:	87 01       	movw	r16, r14
     962:	ef ef       	ldi	r30, 0xFF	; 255
     964:	f0 e0       	ldi	r31, 0x00	; 0
     966:	6e 2f       	mov	r22, r30
     968:	67 95       	ror	r22
     96a:	66 27       	eor	r22, r22
     96c:	67 95       	ror	r22
     96e:	90 2f       	mov	r25, r16
     970:	9f 77       	andi	r25, 0x7F	; 127
     972:	d7 94       	ror	r13
     974:	dd 24       	eor	r13, r13
     976:	d7 94       	ror	r13
     978:	8e 2f       	mov	r24, r30
     97a:	86 95       	lsr	r24
     97c:	49 2f       	mov	r20, r25
     97e:	46 2b       	or	r20, r22
     980:	58 2f       	mov	r21, r24
     982:	5d 29       	or	r21, r13
     984:	b7 01       	movw	r22, r14
     986:	ca 01       	movw	r24, r20
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	08 95       	ret

00000994 <__unpack_f>:
     994:	fc 01       	movw	r30, r24
     996:	db 01       	movw	r26, r22
     998:	40 81       	ld	r20, Z
     99a:	51 81       	ldd	r21, Z+1	; 0x01
     99c:	22 81       	ldd	r18, Z+2	; 0x02
     99e:	62 2f       	mov	r22, r18
     9a0:	6f 77       	andi	r22, 0x7F	; 127
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	22 1f       	adc	r18, r18
     9a6:	22 27       	eor	r18, r18
     9a8:	22 1f       	adc	r18, r18
     9aa:	93 81       	ldd	r25, Z+3	; 0x03
     9ac:	89 2f       	mov	r24, r25
     9ae:	88 0f       	add	r24, r24
     9b0:	82 2b       	or	r24, r18
     9b2:	28 2f       	mov	r18, r24
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	99 1f       	adc	r25, r25
     9b8:	99 27       	eor	r25, r25
     9ba:	99 1f       	adc	r25, r25
     9bc:	11 96       	adiw	r26, 0x01	; 1
     9be:	9c 93       	st	X, r25
     9c0:	11 97       	sbiw	r26, 0x01	; 1
     9c2:	21 15       	cp	r18, r1
     9c4:	31 05       	cpc	r19, r1
     9c6:	a9 f5       	brne	.+106    	; 0xa32 <__unpack_f+0x9e>
     9c8:	41 15       	cp	r20, r1
     9ca:	51 05       	cpc	r21, r1
     9cc:	61 05       	cpc	r22, r1
     9ce:	71 05       	cpc	r23, r1
     9d0:	11 f4       	brne	.+4      	; 0x9d6 <__unpack_f+0x42>
     9d2:	82 e0       	ldi	r24, 0x02	; 2
     9d4:	37 c0       	rjmp	.+110    	; 0xa44 <__unpack_f+0xb0>
     9d6:	82 e8       	ldi	r24, 0x82	; 130
     9d8:	9f ef       	ldi	r25, 0xFF	; 255
     9da:	13 96       	adiw	r26, 0x03	; 3
     9dc:	9c 93       	st	X, r25
     9de:	8e 93       	st	-X, r24
     9e0:	12 97       	sbiw	r26, 0x02	; 2
     9e2:	9a 01       	movw	r18, r20
     9e4:	ab 01       	movw	r20, r22
     9e6:	67 e0       	ldi	r22, 0x07	; 7
     9e8:	22 0f       	add	r18, r18
     9ea:	33 1f       	adc	r19, r19
     9ec:	44 1f       	adc	r20, r20
     9ee:	55 1f       	adc	r21, r21
     9f0:	6a 95       	dec	r22
     9f2:	d1 f7       	brne	.-12     	; 0x9e8 <__unpack_f+0x54>
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	8c 93       	st	X, r24
     9f8:	0d c0       	rjmp	.+26     	; 0xa14 <__unpack_f+0x80>
     9fa:	22 0f       	add	r18, r18
     9fc:	33 1f       	adc	r19, r19
     9fe:	44 1f       	adc	r20, r20
     a00:	55 1f       	adc	r21, r21
     a02:	12 96       	adiw	r26, 0x02	; 2
     a04:	8d 91       	ld	r24, X+
     a06:	9c 91       	ld	r25, X
     a08:	13 97       	sbiw	r26, 0x03	; 3
     a0a:	01 97       	sbiw	r24, 0x01	; 1
     a0c:	13 96       	adiw	r26, 0x03	; 3
     a0e:	9c 93       	st	X, r25
     a10:	8e 93       	st	-X, r24
     a12:	12 97       	sbiw	r26, 0x02	; 2
     a14:	20 30       	cpi	r18, 0x00	; 0
     a16:	80 e0       	ldi	r24, 0x00	; 0
     a18:	38 07       	cpc	r19, r24
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	48 07       	cpc	r20, r24
     a1e:	80 e4       	ldi	r24, 0x40	; 64
     a20:	58 07       	cpc	r21, r24
     a22:	58 f3       	brcs	.-42     	; 0x9fa <__unpack_f+0x66>
     a24:	14 96       	adiw	r26, 0x04	; 4
     a26:	2d 93       	st	X+, r18
     a28:	3d 93       	st	X+, r19
     a2a:	4d 93       	st	X+, r20
     a2c:	5c 93       	st	X, r21
     a2e:	17 97       	sbiw	r26, 0x07	; 7
     a30:	08 95       	ret
     a32:	2f 3f       	cpi	r18, 0xFF	; 255
     a34:	31 05       	cpc	r19, r1
     a36:	79 f4       	brne	.+30     	; 0xa56 <__unpack_f+0xc2>
     a38:	41 15       	cp	r20, r1
     a3a:	51 05       	cpc	r21, r1
     a3c:	61 05       	cpc	r22, r1
     a3e:	71 05       	cpc	r23, r1
     a40:	19 f4       	brne	.+6      	; 0xa48 <__unpack_f+0xb4>
     a42:	84 e0       	ldi	r24, 0x04	; 4
     a44:	8c 93       	st	X, r24
     a46:	08 95       	ret
     a48:	64 ff       	sbrs	r22, 4
     a4a:	03 c0       	rjmp	.+6      	; 0xa52 <__unpack_f+0xbe>
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	8c 93       	st	X, r24
     a50:	12 c0       	rjmp	.+36     	; 0xa76 <__unpack_f+0xe2>
     a52:	1c 92       	st	X, r1
     a54:	10 c0       	rjmp	.+32     	; 0xa76 <__unpack_f+0xe2>
     a56:	2f 57       	subi	r18, 0x7F	; 127
     a58:	30 40       	sbci	r19, 0x00	; 0
     a5a:	13 96       	adiw	r26, 0x03	; 3
     a5c:	3c 93       	st	X, r19
     a5e:	2e 93       	st	-X, r18
     a60:	12 97       	sbiw	r26, 0x02	; 2
     a62:	83 e0       	ldi	r24, 0x03	; 3
     a64:	8c 93       	st	X, r24
     a66:	87 e0       	ldi	r24, 0x07	; 7
     a68:	44 0f       	add	r20, r20
     a6a:	55 1f       	adc	r21, r21
     a6c:	66 1f       	adc	r22, r22
     a6e:	77 1f       	adc	r23, r23
     a70:	8a 95       	dec	r24
     a72:	d1 f7       	brne	.-12     	; 0xa68 <__unpack_f+0xd4>
     a74:	70 64       	ori	r23, 0x40	; 64
     a76:	14 96       	adiw	r26, 0x04	; 4
     a78:	4d 93       	st	X+, r20
     a7a:	5d 93       	st	X+, r21
     a7c:	6d 93       	st	X+, r22
     a7e:	7c 93       	st	X, r23
     a80:	17 97       	sbiw	r26, 0x07	; 7
     a82:	08 95       	ret

00000a84 <__fpcmp_parts_f>:
     a84:	1f 93       	push	r17
     a86:	dc 01       	movw	r26, r24
     a88:	fb 01       	movw	r30, r22
     a8a:	9c 91       	ld	r25, X
     a8c:	92 30       	cpi	r25, 0x02	; 2
     a8e:	08 f4       	brcc	.+2      	; 0xa92 <__fpcmp_parts_f+0xe>
     a90:	47 c0       	rjmp	.+142    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a92:	80 81       	ld	r24, Z
     a94:	82 30       	cpi	r24, 0x02	; 2
     a96:	08 f4       	brcc	.+2      	; 0xa9a <__fpcmp_parts_f+0x16>
     a98:	43 c0       	rjmp	.+134    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a9a:	94 30       	cpi	r25, 0x04	; 4
     a9c:	51 f4       	brne	.+20     	; 0xab2 <__fpcmp_parts_f+0x2e>
     a9e:	11 96       	adiw	r26, 0x01	; 1
     aa0:	1c 91       	ld	r17, X
     aa2:	84 30       	cpi	r24, 0x04	; 4
     aa4:	99 f5       	brne	.+102    	; 0xb0c <__fpcmp_parts_f+0x88>
     aa6:	81 81       	ldd	r24, Z+1	; 0x01
     aa8:	68 2f       	mov	r22, r24
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	61 1b       	sub	r22, r17
     aae:	71 09       	sbc	r23, r1
     ab0:	3f c0       	rjmp	.+126    	; 0xb30 <__fpcmp_parts_f+0xac>
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	21 f0       	breq	.+8      	; 0xabe <__fpcmp_parts_f+0x3a>
     ab6:	92 30       	cpi	r25, 0x02	; 2
     ab8:	31 f4       	brne	.+12     	; 0xac6 <__fpcmp_parts_f+0x42>
     aba:	82 30       	cpi	r24, 0x02	; 2
     abc:	b9 f1       	breq	.+110    	; 0xb2c <__fpcmp_parts_f+0xa8>
     abe:	81 81       	ldd	r24, Z+1	; 0x01
     ac0:	88 23       	and	r24, r24
     ac2:	89 f1       	breq	.+98     	; 0xb26 <__fpcmp_parts_f+0xa2>
     ac4:	2d c0       	rjmp	.+90     	; 0xb20 <__fpcmp_parts_f+0x9c>
     ac6:	11 96       	adiw	r26, 0x01	; 1
     ac8:	1c 91       	ld	r17, X
     aca:	11 97       	sbiw	r26, 0x01	; 1
     acc:	82 30       	cpi	r24, 0x02	; 2
     ace:	f1 f0       	breq	.+60     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad0:	81 81       	ldd	r24, Z+1	; 0x01
     ad2:	18 17       	cp	r17, r24
     ad4:	d9 f4       	brne	.+54     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad6:	12 96       	adiw	r26, 0x02	; 2
     ad8:	2d 91       	ld	r18, X+
     ada:	3c 91       	ld	r19, X
     adc:	13 97       	sbiw	r26, 0x03	; 3
     ade:	82 81       	ldd	r24, Z+2	; 0x02
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	82 17       	cp	r24, r18
     ae4:	93 07       	cpc	r25, r19
     ae6:	94 f0       	brlt	.+36     	; 0xb0c <__fpcmp_parts_f+0x88>
     ae8:	28 17       	cp	r18, r24
     aea:	39 07       	cpc	r19, r25
     aec:	bc f0       	brlt	.+46     	; 0xb1c <__fpcmp_parts_f+0x98>
     aee:	14 96       	adiw	r26, 0x04	; 4
     af0:	8d 91       	ld	r24, X+
     af2:	9d 91       	ld	r25, X+
     af4:	0d 90       	ld	r0, X+
     af6:	bc 91       	ld	r27, X
     af8:	a0 2d       	mov	r26, r0
     afa:	24 81       	ldd	r18, Z+4	; 0x04
     afc:	35 81       	ldd	r19, Z+5	; 0x05
     afe:	46 81       	ldd	r20, Z+6	; 0x06
     b00:	57 81       	ldd	r21, Z+7	; 0x07
     b02:	28 17       	cp	r18, r24
     b04:	39 07       	cpc	r19, r25
     b06:	4a 07       	cpc	r20, r26
     b08:	5b 07       	cpc	r21, r27
     b0a:	18 f4       	brcc	.+6      	; 0xb12 <__fpcmp_parts_f+0x8e>
     b0c:	11 23       	and	r17, r17
     b0e:	41 f0       	breq	.+16     	; 0xb20 <__fpcmp_parts_f+0x9c>
     b10:	0a c0       	rjmp	.+20     	; 0xb26 <__fpcmp_parts_f+0xa2>
     b12:	82 17       	cp	r24, r18
     b14:	93 07       	cpc	r25, r19
     b16:	a4 07       	cpc	r26, r20
     b18:	b5 07       	cpc	r27, r21
     b1a:	40 f4       	brcc	.+16     	; 0xb2c <__fpcmp_parts_f+0xa8>
     b1c:	11 23       	and	r17, r17
     b1e:	19 f0       	breq	.+6      	; 0xb26 <__fpcmp_parts_f+0xa2>
     b20:	61 e0       	ldi	r22, 0x01	; 1
     b22:	70 e0       	ldi	r23, 0x00	; 0
     b24:	05 c0       	rjmp	.+10     	; 0xb30 <__fpcmp_parts_f+0xac>
     b26:	6f ef       	ldi	r22, 0xFF	; 255
     b28:	7f ef       	ldi	r23, 0xFF	; 255
     b2a:	02 c0       	rjmp	.+4      	; 0xb30 <__fpcmp_parts_f+0xac>
     b2c:	60 e0       	ldi	r22, 0x00	; 0
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	cb 01       	movw	r24, r22
     b32:	1f 91       	pop	r17
     b34:	08 95       	ret

00000b36 <DIO_voidSetPinDirection>:
#include "DIO_interface.h"
#include "DIO_private.h"



void DIO_voidSetPinDirection(u8 Copy_u8Port,u8 Copy_u8Pin,u8 Copy_u8PinDirection){
     b36:	df 93       	push	r29
     b38:	cf 93       	push	r28
     b3a:	cd b7       	in	r28, 0x3d	; 61
     b3c:	de b7       	in	r29, 0x3e	; 62
     b3e:	27 97       	sbiw	r28, 0x07	; 7
     b40:	0f b6       	in	r0, 0x3f	; 63
     b42:	f8 94       	cli
     b44:	de bf       	out	0x3e, r29	; 62
     b46:	0f be       	out	0x3f, r0	; 63
     b48:	cd bf       	out	0x3d, r28	; 61
     b4a:	89 83       	std	Y+1, r24	; 0x01
     b4c:	6a 83       	std	Y+2, r22	; 0x02
     b4e:	4b 83       	std	Y+3, r20	; 0x03
	if(Copy_u8Pin<=DIO_u8PIN7){
     b50:	8a 81       	ldd	r24, Y+2	; 0x02
     b52:	88 30       	cpi	r24, 0x08	; 8
     b54:	08 f0       	brcs	.+2      	; 0xb58 <DIO_voidSetPinDirection+0x22>
     b56:	ec c0       	rjmp	.+472    	; 0xd30 <DIO_voidSetPinDirection+0x1fa>
		if(Copy_u8PinDirection==DIO_u8PIN_INPUT){
     b58:	8b 81       	ldd	r24, Y+3	; 0x03
     b5a:	88 23       	and	r24, r24
     b5c:	09 f0       	breq	.+2      	; 0xb60 <DIO_voidSetPinDirection+0x2a>
     b5e:	75 c0       	rjmp	.+234    	; 0xc4a <DIO_voidSetPinDirection+0x114>
			switch(Copy_u8Port)
     b60:	89 81       	ldd	r24, Y+1	; 0x01
     b62:	28 2f       	mov	r18, r24
     b64:	30 e0       	ldi	r19, 0x00	; 0
     b66:	3f 83       	std	Y+7, r19	; 0x07
     b68:	2e 83       	std	Y+6, r18	; 0x06
     b6a:	8e 81       	ldd	r24, Y+6	; 0x06
     b6c:	9f 81       	ldd	r25, Y+7	; 0x07
     b6e:	82 30       	cpi	r24, 0x02	; 2
     b70:	91 05       	cpc	r25, r1
     b72:	61 f1       	breq	.+88     	; 0xbcc <DIO_voidSetPinDirection+0x96>
     b74:	2e 81       	ldd	r18, Y+6	; 0x06
     b76:	3f 81       	ldd	r19, Y+7	; 0x07
     b78:	23 30       	cpi	r18, 0x03	; 3
     b7a:	31 05       	cpc	r19, r1
     b7c:	34 f4       	brge	.+12     	; 0xb8a <DIO_voidSetPinDirection+0x54>
     b7e:	8e 81       	ldd	r24, Y+6	; 0x06
     b80:	9f 81       	ldd	r25, Y+7	; 0x07
     b82:	81 30       	cpi	r24, 0x01	; 1
     b84:	91 05       	cpc	r25, r1
     b86:	69 f0       	breq	.+26     	; 0xba2 <DIO_voidSetPinDirection+0x6c>
     b88:	d3 c0       	rjmp	.+422    	; 0xd30 <DIO_voidSetPinDirection+0x1fa>
     b8a:	2e 81       	ldd	r18, Y+6	; 0x06
     b8c:	3f 81       	ldd	r19, Y+7	; 0x07
     b8e:	23 30       	cpi	r18, 0x03	; 3
     b90:	31 05       	cpc	r19, r1
     b92:	89 f1       	breq	.+98     	; 0xbf6 <DIO_voidSetPinDirection+0xc0>
     b94:	8e 81       	ldd	r24, Y+6	; 0x06
     b96:	9f 81       	ldd	r25, Y+7	; 0x07
     b98:	84 30       	cpi	r24, 0x04	; 4
     b9a:	91 05       	cpc	r25, r1
     b9c:	09 f4       	brne	.+2      	; 0xba0 <DIO_voidSetPinDirection+0x6a>
     b9e:	40 c0       	rjmp	.+128    	; 0xc20 <DIO_voidSetPinDirection+0xea>
     ba0:	c7 c0       	rjmp	.+398    	; 0xd30 <DIO_voidSetPinDirection+0x1fa>
			{
			case DIO_u8PORTA: CLR_BIT(DDRA,Copy_u8Pin);break;
     ba2:	aa e3       	ldi	r26, 0x3A	; 58
     ba4:	b0 e0       	ldi	r27, 0x00	; 0
     ba6:	ea e3       	ldi	r30, 0x3A	; 58
     ba8:	f0 e0       	ldi	r31, 0x00	; 0
     baa:	80 81       	ld	r24, Z
     bac:	48 2f       	mov	r20, r24
     bae:	8a 81       	ldd	r24, Y+2	; 0x02
     bb0:	28 2f       	mov	r18, r24
     bb2:	30 e0       	ldi	r19, 0x00	; 0
     bb4:	81 e0       	ldi	r24, 0x01	; 1
     bb6:	90 e0       	ldi	r25, 0x00	; 0
     bb8:	02 2e       	mov	r0, r18
     bba:	02 c0       	rjmp	.+4      	; 0xbc0 <DIO_voidSetPinDirection+0x8a>
     bbc:	88 0f       	add	r24, r24
     bbe:	99 1f       	adc	r25, r25
     bc0:	0a 94       	dec	r0
     bc2:	e2 f7       	brpl	.-8      	; 0xbbc <DIO_voidSetPinDirection+0x86>
     bc4:	80 95       	com	r24
     bc6:	84 23       	and	r24, r20
     bc8:	8c 93       	st	X, r24
     bca:	b2 c0       	rjmp	.+356    	; 0xd30 <DIO_voidSetPinDirection+0x1fa>
			case DIO_u8PORTB: CLR_BIT(DDRB,Copy_u8Pin);break;
     bcc:	a7 e3       	ldi	r26, 0x37	; 55
     bce:	b0 e0       	ldi	r27, 0x00	; 0
     bd0:	e7 e3       	ldi	r30, 0x37	; 55
     bd2:	f0 e0       	ldi	r31, 0x00	; 0
     bd4:	80 81       	ld	r24, Z
     bd6:	48 2f       	mov	r20, r24
     bd8:	8a 81       	ldd	r24, Y+2	; 0x02
     bda:	28 2f       	mov	r18, r24
     bdc:	30 e0       	ldi	r19, 0x00	; 0
     bde:	81 e0       	ldi	r24, 0x01	; 1
     be0:	90 e0       	ldi	r25, 0x00	; 0
     be2:	02 2e       	mov	r0, r18
     be4:	02 c0       	rjmp	.+4      	; 0xbea <DIO_voidSetPinDirection+0xb4>
     be6:	88 0f       	add	r24, r24
     be8:	99 1f       	adc	r25, r25
     bea:	0a 94       	dec	r0
     bec:	e2 f7       	brpl	.-8      	; 0xbe6 <DIO_voidSetPinDirection+0xb0>
     bee:	80 95       	com	r24
     bf0:	84 23       	and	r24, r20
     bf2:	8c 93       	st	X, r24
     bf4:	9d c0       	rjmp	.+314    	; 0xd30 <DIO_voidSetPinDirection+0x1fa>
			case DIO_u8PORTC: CLR_BIT(DDRC,Copy_u8Pin);break;
     bf6:	a4 e3       	ldi	r26, 0x34	; 52
     bf8:	b0 e0       	ldi	r27, 0x00	; 0
     bfa:	e4 e3       	ldi	r30, 0x34	; 52
     bfc:	f0 e0       	ldi	r31, 0x00	; 0
     bfe:	80 81       	ld	r24, Z
     c00:	48 2f       	mov	r20, r24
     c02:	8a 81       	ldd	r24, Y+2	; 0x02
     c04:	28 2f       	mov	r18, r24
     c06:	30 e0       	ldi	r19, 0x00	; 0
     c08:	81 e0       	ldi	r24, 0x01	; 1
     c0a:	90 e0       	ldi	r25, 0x00	; 0
     c0c:	02 2e       	mov	r0, r18
     c0e:	02 c0       	rjmp	.+4      	; 0xc14 <DIO_voidSetPinDirection+0xde>
     c10:	88 0f       	add	r24, r24
     c12:	99 1f       	adc	r25, r25
     c14:	0a 94       	dec	r0
     c16:	e2 f7       	brpl	.-8      	; 0xc10 <DIO_voidSetPinDirection+0xda>
     c18:	80 95       	com	r24
     c1a:	84 23       	and	r24, r20
     c1c:	8c 93       	st	X, r24
     c1e:	88 c0       	rjmp	.+272    	; 0xd30 <DIO_voidSetPinDirection+0x1fa>
			case DIO_u8PORTD: CLR_BIT(DDRD,Copy_u8Pin);break;
     c20:	a1 e3       	ldi	r26, 0x31	; 49
     c22:	b0 e0       	ldi	r27, 0x00	; 0
     c24:	e1 e3       	ldi	r30, 0x31	; 49
     c26:	f0 e0       	ldi	r31, 0x00	; 0
     c28:	80 81       	ld	r24, Z
     c2a:	48 2f       	mov	r20, r24
     c2c:	8a 81       	ldd	r24, Y+2	; 0x02
     c2e:	28 2f       	mov	r18, r24
     c30:	30 e0       	ldi	r19, 0x00	; 0
     c32:	81 e0       	ldi	r24, 0x01	; 1
     c34:	90 e0       	ldi	r25, 0x00	; 0
     c36:	02 2e       	mov	r0, r18
     c38:	02 c0       	rjmp	.+4      	; 0xc3e <DIO_voidSetPinDirection+0x108>
     c3a:	88 0f       	add	r24, r24
     c3c:	99 1f       	adc	r25, r25
     c3e:	0a 94       	dec	r0
     c40:	e2 f7       	brpl	.-8      	; 0xc3a <DIO_voidSetPinDirection+0x104>
     c42:	80 95       	com	r24
     c44:	84 23       	and	r24, r20
     c46:	8c 93       	st	X, r24
     c48:	73 c0       	rjmp	.+230    	; 0xd30 <DIO_voidSetPinDirection+0x1fa>

			}

		}
		else if(Copy_u8PinDirection==DIO_u8PIN_OUTPUT)
     c4a:	8b 81       	ldd	r24, Y+3	; 0x03
     c4c:	81 30       	cpi	r24, 0x01	; 1
     c4e:	09 f0       	breq	.+2      	; 0xc52 <DIO_voidSetPinDirection+0x11c>
     c50:	6f c0       	rjmp	.+222    	; 0xd30 <DIO_voidSetPinDirection+0x1fa>
		{
			switch(Copy_u8Port)
     c52:	89 81       	ldd	r24, Y+1	; 0x01
     c54:	28 2f       	mov	r18, r24
     c56:	30 e0       	ldi	r19, 0x00	; 0
     c58:	3d 83       	std	Y+5, r19	; 0x05
     c5a:	2c 83       	std	Y+4, r18	; 0x04
     c5c:	8c 81       	ldd	r24, Y+4	; 0x04
     c5e:	9d 81       	ldd	r25, Y+5	; 0x05
     c60:	82 30       	cpi	r24, 0x02	; 2
     c62:	91 05       	cpc	r25, r1
     c64:	51 f1       	breq	.+84     	; 0xcba <DIO_voidSetPinDirection+0x184>
     c66:	2c 81       	ldd	r18, Y+4	; 0x04
     c68:	3d 81       	ldd	r19, Y+5	; 0x05
     c6a:	23 30       	cpi	r18, 0x03	; 3
     c6c:	31 05       	cpc	r19, r1
     c6e:	34 f4       	brge	.+12     	; 0xc7c <DIO_voidSetPinDirection+0x146>
     c70:	8c 81       	ldd	r24, Y+4	; 0x04
     c72:	9d 81       	ldd	r25, Y+5	; 0x05
     c74:	81 30       	cpi	r24, 0x01	; 1
     c76:	91 05       	cpc	r25, r1
     c78:	61 f0       	breq	.+24     	; 0xc92 <DIO_voidSetPinDirection+0x15c>
     c7a:	5a c0       	rjmp	.+180    	; 0xd30 <DIO_voidSetPinDirection+0x1fa>
     c7c:	2c 81       	ldd	r18, Y+4	; 0x04
     c7e:	3d 81       	ldd	r19, Y+5	; 0x05
     c80:	23 30       	cpi	r18, 0x03	; 3
     c82:	31 05       	cpc	r19, r1
     c84:	71 f1       	breq	.+92     	; 0xce2 <DIO_voidSetPinDirection+0x1ac>
     c86:	8c 81       	ldd	r24, Y+4	; 0x04
     c88:	9d 81       	ldd	r25, Y+5	; 0x05
     c8a:	84 30       	cpi	r24, 0x04	; 4
     c8c:	91 05       	cpc	r25, r1
     c8e:	e9 f1       	breq	.+122    	; 0xd0a <DIO_voidSetPinDirection+0x1d4>
     c90:	4f c0       	rjmp	.+158    	; 0xd30 <DIO_voidSetPinDirection+0x1fa>
			{
			case DIO_u8PORTA: SET_BIT(DDRA,Copy_u8Pin);break;
     c92:	aa e3       	ldi	r26, 0x3A	; 58
     c94:	b0 e0       	ldi	r27, 0x00	; 0
     c96:	ea e3       	ldi	r30, 0x3A	; 58
     c98:	f0 e0       	ldi	r31, 0x00	; 0
     c9a:	80 81       	ld	r24, Z
     c9c:	48 2f       	mov	r20, r24
     c9e:	8a 81       	ldd	r24, Y+2	; 0x02
     ca0:	28 2f       	mov	r18, r24
     ca2:	30 e0       	ldi	r19, 0x00	; 0
     ca4:	81 e0       	ldi	r24, 0x01	; 1
     ca6:	90 e0       	ldi	r25, 0x00	; 0
     ca8:	02 2e       	mov	r0, r18
     caa:	02 c0       	rjmp	.+4      	; 0xcb0 <DIO_voidSetPinDirection+0x17a>
     cac:	88 0f       	add	r24, r24
     cae:	99 1f       	adc	r25, r25
     cb0:	0a 94       	dec	r0
     cb2:	e2 f7       	brpl	.-8      	; 0xcac <DIO_voidSetPinDirection+0x176>
     cb4:	84 2b       	or	r24, r20
     cb6:	8c 93       	st	X, r24
     cb8:	3b c0       	rjmp	.+118    	; 0xd30 <DIO_voidSetPinDirection+0x1fa>
			case DIO_u8PORTB: SET_BIT(DDRB,Copy_u8Pin);break;
     cba:	a7 e3       	ldi	r26, 0x37	; 55
     cbc:	b0 e0       	ldi	r27, 0x00	; 0
     cbe:	e7 e3       	ldi	r30, 0x37	; 55
     cc0:	f0 e0       	ldi	r31, 0x00	; 0
     cc2:	80 81       	ld	r24, Z
     cc4:	48 2f       	mov	r20, r24
     cc6:	8a 81       	ldd	r24, Y+2	; 0x02
     cc8:	28 2f       	mov	r18, r24
     cca:	30 e0       	ldi	r19, 0x00	; 0
     ccc:	81 e0       	ldi	r24, 0x01	; 1
     cce:	90 e0       	ldi	r25, 0x00	; 0
     cd0:	02 2e       	mov	r0, r18
     cd2:	02 c0       	rjmp	.+4      	; 0xcd8 <DIO_voidSetPinDirection+0x1a2>
     cd4:	88 0f       	add	r24, r24
     cd6:	99 1f       	adc	r25, r25
     cd8:	0a 94       	dec	r0
     cda:	e2 f7       	brpl	.-8      	; 0xcd4 <DIO_voidSetPinDirection+0x19e>
     cdc:	84 2b       	or	r24, r20
     cde:	8c 93       	st	X, r24
     ce0:	27 c0       	rjmp	.+78     	; 0xd30 <DIO_voidSetPinDirection+0x1fa>
			case DIO_u8PORTC: SET_BIT(DDRC,Copy_u8Pin);break;
     ce2:	a4 e3       	ldi	r26, 0x34	; 52
     ce4:	b0 e0       	ldi	r27, 0x00	; 0
     ce6:	e4 e3       	ldi	r30, 0x34	; 52
     ce8:	f0 e0       	ldi	r31, 0x00	; 0
     cea:	80 81       	ld	r24, Z
     cec:	48 2f       	mov	r20, r24
     cee:	8a 81       	ldd	r24, Y+2	; 0x02
     cf0:	28 2f       	mov	r18, r24
     cf2:	30 e0       	ldi	r19, 0x00	; 0
     cf4:	81 e0       	ldi	r24, 0x01	; 1
     cf6:	90 e0       	ldi	r25, 0x00	; 0
     cf8:	02 2e       	mov	r0, r18
     cfa:	02 c0       	rjmp	.+4      	; 0xd00 <DIO_voidSetPinDirection+0x1ca>
     cfc:	88 0f       	add	r24, r24
     cfe:	99 1f       	adc	r25, r25
     d00:	0a 94       	dec	r0
     d02:	e2 f7       	brpl	.-8      	; 0xcfc <DIO_voidSetPinDirection+0x1c6>
     d04:	84 2b       	or	r24, r20
     d06:	8c 93       	st	X, r24
     d08:	13 c0       	rjmp	.+38     	; 0xd30 <DIO_voidSetPinDirection+0x1fa>
			case DIO_u8PORTD: SET_BIT(DDRD,Copy_u8Pin);break;
     d0a:	a1 e3       	ldi	r26, 0x31	; 49
     d0c:	b0 e0       	ldi	r27, 0x00	; 0
     d0e:	e1 e3       	ldi	r30, 0x31	; 49
     d10:	f0 e0       	ldi	r31, 0x00	; 0
     d12:	80 81       	ld	r24, Z
     d14:	48 2f       	mov	r20, r24
     d16:	8a 81       	ldd	r24, Y+2	; 0x02
     d18:	28 2f       	mov	r18, r24
     d1a:	30 e0       	ldi	r19, 0x00	; 0
     d1c:	81 e0       	ldi	r24, 0x01	; 1
     d1e:	90 e0       	ldi	r25, 0x00	; 0
     d20:	02 2e       	mov	r0, r18
     d22:	02 c0       	rjmp	.+4      	; 0xd28 <DIO_voidSetPinDirection+0x1f2>
     d24:	88 0f       	add	r24, r24
     d26:	99 1f       	adc	r25, r25
     d28:	0a 94       	dec	r0
     d2a:	e2 f7       	brpl	.-8      	; 0xd24 <DIO_voidSetPinDirection+0x1ee>
     d2c:	84 2b       	or	r24, r20
     d2e:	8c 93       	st	X, r24
			}
		}

	}
}
     d30:	27 96       	adiw	r28, 0x07	; 7
     d32:	0f b6       	in	r0, 0x3f	; 63
     d34:	f8 94       	cli
     d36:	de bf       	out	0x3e, r29	; 62
     d38:	0f be       	out	0x3f, r0	; 63
     d3a:	cd bf       	out	0x3d, r28	; 61
     d3c:	cf 91       	pop	r28
     d3e:	df 91       	pop	r29
     d40:	08 95       	ret

00000d42 <DIO_voidSetPortDirection>:

	void DIO_voidSetPortDirection(u8 Copy_u8Port,u8 Copy_u8PortDirection)
	{
     d42:	df 93       	push	r29
     d44:	cf 93       	push	r28
     d46:	00 d0       	rcall	.+0      	; 0xd48 <DIO_voidSetPortDirection+0x6>
     d48:	00 d0       	rcall	.+0      	; 0xd4a <DIO_voidSetPortDirection+0x8>
     d4a:	cd b7       	in	r28, 0x3d	; 61
     d4c:	de b7       	in	r29, 0x3e	; 62
     d4e:	89 83       	std	Y+1, r24	; 0x01
     d50:	6a 83       	std	Y+2, r22	; 0x02



		switch(Copy_u8Port)
     d52:	89 81       	ldd	r24, Y+1	; 0x01
     d54:	28 2f       	mov	r18, r24
     d56:	30 e0       	ldi	r19, 0x00	; 0
     d58:	3c 83       	std	Y+4, r19	; 0x04
     d5a:	2b 83       	std	Y+3, r18	; 0x03
     d5c:	8b 81       	ldd	r24, Y+3	; 0x03
     d5e:	9c 81       	ldd	r25, Y+4	; 0x04
     d60:	82 30       	cpi	r24, 0x02	; 2
     d62:	91 05       	cpc	r25, r1
     d64:	d9 f0       	breq	.+54     	; 0xd9c <DIO_voidSetPortDirection+0x5a>
     d66:	2b 81       	ldd	r18, Y+3	; 0x03
     d68:	3c 81       	ldd	r19, Y+4	; 0x04
     d6a:	23 30       	cpi	r18, 0x03	; 3
     d6c:	31 05       	cpc	r19, r1
     d6e:	34 f4       	brge	.+12     	; 0xd7c <DIO_voidSetPortDirection+0x3a>
     d70:	8b 81       	ldd	r24, Y+3	; 0x03
     d72:	9c 81       	ldd	r25, Y+4	; 0x04
     d74:	81 30       	cpi	r24, 0x01	; 1
     d76:	91 05       	cpc	r25, r1
     d78:	61 f0       	breq	.+24     	; 0xd92 <DIO_voidSetPortDirection+0x50>
     d7a:	1e c0       	rjmp	.+60     	; 0xdb8 <DIO_voidSetPortDirection+0x76>
     d7c:	2b 81       	ldd	r18, Y+3	; 0x03
     d7e:	3c 81       	ldd	r19, Y+4	; 0x04
     d80:	23 30       	cpi	r18, 0x03	; 3
     d82:	31 05       	cpc	r19, r1
     d84:	81 f0       	breq	.+32     	; 0xda6 <DIO_voidSetPortDirection+0x64>
     d86:	8b 81       	ldd	r24, Y+3	; 0x03
     d88:	9c 81       	ldd	r25, Y+4	; 0x04
     d8a:	84 30       	cpi	r24, 0x04	; 4
     d8c:	91 05       	cpc	r25, r1
     d8e:	81 f0       	breq	.+32     	; 0xdb0 <DIO_voidSetPortDirection+0x6e>
     d90:	13 c0       	rjmp	.+38     	; 0xdb8 <DIO_voidSetPortDirection+0x76>
		{
		case DIO_u8PORTA: DDRA=Copy_u8PortDirection;break;
     d92:	ea e3       	ldi	r30, 0x3A	; 58
     d94:	f0 e0       	ldi	r31, 0x00	; 0
     d96:	8a 81       	ldd	r24, Y+2	; 0x02
     d98:	80 83       	st	Z, r24
     d9a:	0e c0       	rjmp	.+28     	; 0xdb8 <DIO_voidSetPortDirection+0x76>
		case DIO_u8PORTB: DDRB=Copy_u8PortDirection;break;
     d9c:	e7 e3       	ldi	r30, 0x37	; 55
     d9e:	f0 e0       	ldi	r31, 0x00	; 0
     da0:	8a 81       	ldd	r24, Y+2	; 0x02
     da2:	80 83       	st	Z, r24
     da4:	09 c0       	rjmp	.+18     	; 0xdb8 <DIO_voidSetPortDirection+0x76>
		case DIO_u8PORTC: DDRC=Copy_u8PortDirection;break;
     da6:	e4 e3       	ldi	r30, 0x34	; 52
     da8:	f0 e0       	ldi	r31, 0x00	; 0
     daa:	8a 81       	ldd	r24, Y+2	; 0x02
     dac:	80 83       	st	Z, r24
     dae:	04 c0       	rjmp	.+8      	; 0xdb8 <DIO_voidSetPortDirection+0x76>
		case DIO_u8PORTD: DDRD=Copy_u8PortDirection;break;
     db0:	e1 e3       	ldi	r30, 0x31	; 49
     db2:	f0 e0       	ldi	r31, 0x00	; 0
     db4:	8a 81       	ldd	r24, Y+2	; 0x02
     db6:	80 83       	st	Z, r24
		}

	}
     db8:	0f 90       	pop	r0
     dba:	0f 90       	pop	r0
     dbc:	0f 90       	pop	r0
     dbe:	0f 90       	pop	r0
     dc0:	cf 91       	pop	r28
     dc2:	df 91       	pop	r29
     dc4:	08 95       	ret

00000dc6 <DIO_voidSetPinValue>:


	void DIO_voidSetPinValue(u8 Copy_u8Port,u8 Copy_u8Pin,u8 Copy_u8PinValue)
	{
     dc6:	df 93       	push	r29
     dc8:	cf 93       	push	r28
     dca:	cd b7       	in	r28, 0x3d	; 61
     dcc:	de b7       	in	r29, 0x3e	; 62
     dce:	27 97       	sbiw	r28, 0x07	; 7
     dd0:	0f b6       	in	r0, 0x3f	; 63
     dd2:	f8 94       	cli
     dd4:	de bf       	out	0x3e, r29	; 62
     dd6:	0f be       	out	0x3f, r0	; 63
     dd8:	cd bf       	out	0x3d, r28	; 61
     dda:	89 83       	std	Y+1, r24	; 0x01
     ddc:	6a 83       	std	Y+2, r22	; 0x02
     dde:	4b 83       	std	Y+3, r20	; 0x03

		if(Copy_u8Pin<=DIO_u8PIN7){
     de0:	8a 81       	ldd	r24, Y+2	; 0x02
     de2:	88 30       	cpi	r24, 0x08	; 8
     de4:	08 f0       	brcs	.+2      	; 0xde8 <DIO_voidSetPinValue+0x22>
     de6:	ec c0       	rjmp	.+472    	; 0xfc0 <DIO_voidSetPinValue+0x1fa>
			if(Copy_u8PinValue==DIO_u8PIN_LOW){
     de8:	8b 81       	ldd	r24, Y+3	; 0x03
     dea:	88 23       	and	r24, r24
     dec:	09 f0       	breq	.+2      	; 0xdf0 <DIO_voidSetPinValue+0x2a>
     dee:	75 c0       	rjmp	.+234    	; 0xeda <DIO_voidSetPinValue+0x114>
				switch(Copy_u8Port)
     df0:	89 81       	ldd	r24, Y+1	; 0x01
     df2:	28 2f       	mov	r18, r24
     df4:	30 e0       	ldi	r19, 0x00	; 0
     df6:	3f 83       	std	Y+7, r19	; 0x07
     df8:	2e 83       	std	Y+6, r18	; 0x06
     dfa:	8e 81       	ldd	r24, Y+6	; 0x06
     dfc:	9f 81       	ldd	r25, Y+7	; 0x07
     dfe:	82 30       	cpi	r24, 0x02	; 2
     e00:	91 05       	cpc	r25, r1
     e02:	61 f1       	breq	.+88     	; 0xe5c <DIO_voidSetPinValue+0x96>
     e04:	2e 81       	ldd	r18, Y+6	; 0x06
     e06:	3f 81       	ldd	r19, Y+7	; 0x07
     e08:	23 30       	cpi	r18, 0x03	; 3
     e0a:	31 05       	cpc	r19, r1
     e0c:	34 f4       	brge	.+12     	; 0xe1a <DIO_voidSetPinValue+0x54>
     e0e:	8e 81       	ldd	r24, Y+6	; 0x06
     e10:	9f 81       	ldd	r25, Y+7	; 0x07
     e12:	81 30       	cpi	r24, 0x01	; 1
     e14:	91 05       	cpc	r25, r1
     e16:	69 f0       	breq	.+26     	; 0xe32 <DIO_voidSetPinValue+0x6c>
     e18:	d3 c0       	rjmp	.+422    	; 0xfc0 <DIO_voidSetPinValue+0x1fa>
     e1a:	2e 81       	ldd	r18, Y+6	; 0x06
     e1c:	3f 81       	ldd	r19, Y+7	; 0x07
     e1e:	23 30       	cpi	r18, 0x03	; 3
     e20:	31 05       	cpc	r19, r1
     e22:	89 f1       	breq	.+98     	; 0xe86 <DIO_voidSetPinValue+0xc0>
     e24:	8e 81       	ldd	r24, Y+6	; 0x06
     e26:	9f 81       	ldd	r25, Y+7	; 0x07
     e28:	84 30       	cpi	r24, 0x04	; 4
     e2a:	91 05       	cpc	r25, r1
     e2c:	09 f4       	brne	.+2      	; 0xe30 <DIO_voidSetPinValue+0x6a>
     e2e:	40 c0       	rjmp	.+128    	; 0xeb0 <DIO_voidSetPinValue+0xea>
     e30:	c7 c0       	rjmp	.+398    	; 0xfc0 <DIO_voidSetPinValue+0x1fa>
				{
				case DIO_u8PORTA: CLR_BIT(PORTA,Copy_u8Pin);break;
     e32:	ab e3       	ldi	r26, 0x3B	; 59
     e34:	b0 e0       	ldi	r27, 0x00	; 0
     e36:	eb e3       	ldi	r30, 0x3B	; 59
     e38:	f0 e0       	ldi	r31, 0x00	; 0
     e3a:	80 81       	ld	r24, Z
     e3c:	48 2f       	mov	r20, r24
     e3e:	8a 81       	ldd	r24, Y+2	; 0x02
     e40:	28 2f       	mov	r18, r24
     e42:	30 e0       	ldi	r19, 0x00	; 0
     e44:	81 e0       	ldi	r24, 0x01	; 1
     e46:	90 e0       	ldi	r25, 0x00	; 0
     e48:	02 2e       	mov	r0, r18
     e4a:	02 c0       	rjmp	.+4      	; 0xe50 <DIO_voidSetPinValue+0x8a>
     e4c:	88 0f       	add	r24, r24
     e4e:	99 1f       	adc	r25, r25
     e50:	0a 94       	dec	r0
     e52:	e2 f7       	brpl	.-8      	; 0xe4c <DIO_voidSetPinValue+0x86>
     e54:	80 95       	com	r24
     e56:	84 23       	and	r24, r20
     e58:	8c 93       	st	X, r24
     e5a:	b2 c0       	rjmp	.+356    	; 0xfc0 <DIO_voidSetPinValue+0x1fa>
				case DIO_u8PORTB: CLR_BIT(PORTB,Copy_u8Pin);break;
     e5c:	a8 e3       	ldi	r26, 0x38	; 56
     e5e:	b0 e0       	ldi	r27, 0x00	; 0
     e60:	e8 e3       	ldi	r30, 0x38	; 56
     e62:	f0 e0       	ldi	r31, 0x00	; 0
     e64:	80 81       	ld	r24, Z
     e66:	48 2f       	mov	r20, r24
     e68:	8a 81       	ldd	r24, Y+2	; 0x02
     e6a:	28 2f       	mov	r18, r24
     e6c:	30 e0       	ldi	r19, 0x00	; 0
     e6e:	81 e0       	ldi	r24, 0x01	; 1
     e70:	90 e0       	ldi	r25, 0x00	; 0
     e72:	02 2e       	mov	r0, r18
     e74:	02 c0       	rjmp	.+4      	; 0xe7a <DIO_voidSetPinValue+0xb4>
     e76:	88 0f       	add	r24, r24
     e78:	99 1f       	adc	r25, r25
     e7a:	0a 94       	dec	r0
     e7c:	e2 f7       	brpl	.-8      	; 0xe76 <DIO_voidSetPinValue+0xb0>
     e7e:	80 95       	com	r24
     e80:	84 23       	and	r24, r20
     e82:	8c 93       	st	X, r24
     e84:	9d c0       	rjmp	.+314    	; 0xfc0 <DIO_voidSetPinValue+0x1fa>
				case DIO_u8PORTC: CLR_BIT(PORTC,Copy_u8Pin);break;
     e86:	a5 e3       	ldi	r26, 0x35	; 53
     e88:	b0 e0       	ldi	r27, 0x00	; 0
     e8a:	e5 e3       	ldi	r30, 0x35	; 53
     e8c:	f0 e0       	ldi	r31, 0x00	; 0
     e8e:	80 81       	ld	r24, Z
     e90:	48 2f       	mov	r20, r24
     e92:	8a 81       	ldd	r24, Y+2	; 0x02
     e94:	28 2f       	mov	r18, r24
     e96:	30 e0       	ldi	r19, 0x00	; 0
     e98:	81 e0       	ldi	r24, 0x01	; 1
     e9a:	90 e0       	ldi	r25, 0x00	; 0
     e9c:	02 2e       	mov	r0, r18
     e9e:	02 c0       	rjmp	.+4      	; 0xea4 <DIO_voidSetPinValue+0xde>
     ea0:	88 0f       	add	r24, r24
     ea2:	99 1f       	adc	r25, r25
     ea4:	0a 94       	dec	r0
     ea6:	e2 f7       	brpl	.-8      	; 0xea0 <DIO_voidSetPinValue+0xda>
     ea8:	80 95       	com	r24
     eaa:	84 23       	and	r24, r20
     eac:	8c 93       	st	X, r24
     eae:	88 c0       	rjmp	.+272    	; 0xfc0 <DIO_voidSetPinValue+0x1fa>
				case DIO_u8PORTD: CLR_BIT(PORTD,Copy_u8Pin);break;
     eb0:	a2 e3       	ldi	r26, 0x32	; 50
     eb2:	b0 e0       	ldi	r27, 0x00	; 0
     eb4:	e2 e3       	ldi	r30, 0x32	; 50
     eb6:	f0 e0       	ldi	r31, 0x00	; 0
     eb8:	80 81       	ld	r24, Z
     eba:	48 2f       	mov	r20, r24
     ebc:	8a 81       	ldd	r24, Y+2	; 0x02
     ebe:	28 2f       	mov	r18, r24
     ec0:	30 e0       	ldi	r19, 0x00	; 0
     ec2:	81 e0       	ldi	r24, 0x01	; 1
     ec4:	90 e0       	ldi	r25, 0x00	; 0
     ec6:	02 2e       	mov	r0, r18
     ec8:	02 c0       	rjmp	.+4      	; 0xece <DIO_voidSetPinValue+0x108>
     eca:	88 0f       	add	r24, r24
     ecc:	99 1f       	adc	r25, r25
     ece:	0a 94       	dec	r0
     ed0:	e2 f7       	brpl	.-8      	; 0xeca <DIO_voidSetPinValue+0x104>
     ed2:	80 95       	com	r24
     ed4:	84 23       	and	r24, r20
     ed6:	8c 93       	st	X, r24
     ed8:	73 c0       	rjmp	.+230    	; 0xfc0 <DIO_voidSetPinValue+0x1fa>

				}

			}
			else if(Copy_u8PinValue==DIO_u8PIN_HIGH)
     eda:	8b 81       	ldd	r24, Y+3	; 0x03
     edc:	81 30       	cpi	r24, 0x01	; 1
     ede:	09 f0       	breq	.+2      	; 0xee2 <DIO_voidSetPinValue+0x11c>
     ee0:	6f c0       	rjmp	.+222    	; 0xfc0 <DIO_voidSetPinValue+0x1fa>
			{
				switch(Copy_u8Port)
     ee2:	89 81       	ldd	r24, Y+1	; 0x01
     ee4:	28 2f       	mov	r18, r24
     ee6:	30 e0       	ldi	r19, 0x00	; 0
     ee8:	3d 83       	std	Y+5, r19	; 0x05
     eea:	2c 83       	std	Y+4, r18	; 0x04
     eec:	8c 81       	ldd	r24, Y+4	; 0x04
     eee:	9d 81       	ldd	r25, Y+5	; 0x05
     ef0:	82 30       	cpi	r24, 0x02	; 2
     ef2:	91 05       	cpc	r25, r1
     ef4:	51 f1       	breq	.+84     	; 0xf4a <DIO_voidSetPinValue+0x184>
     ef6:	2c 81       	ldd	r18, Y+4	; 0x04
     ef8:	3d 81       	ldd	r19, Y+5	; 0x05
     efa:	23 30       	cpi	r18, 0x03	; 3
     efc:	31 05       	cpc	r19, r1
     efe:	34 f4       	brge	.+12     	; 0xf0c <DIO_voidSetPinValue+0x146>
     f00:	8c 81       	ldd	r24, Y+4	; 0x04
     f02:	9d 81       	ldd	r25, Y+5	; 0x05
     f04:	81 30       	cpi	r24, 0x01	; 1
     f06:	91 05       	cpc	r25, r1
     f08:	61 f0       	breq	.+24     	; 0xf22 <DIO_voidSetPinValue+0x15c>
     f0a:	5a c0       	rjmp	.+180    	; 0xfc0 <DIO_voidSetPinValue+0x1fa>
     f0c:	2c 81       	ldd	r18, Y+4	; 0x04
     f0e:	3d 81       	ldd	r19, Y+5	; 0x05
     f10:	23 30       	cpi	r18, 0x03	; 3
     f12:	31 05       	cpc	r19, r1
     f14:	71 f1       	breq	.+92     	; 0xf72 <DIO_voidSetPinValue+0x1ac>
     f16:	8c 81       	ldd	r24, Y+4	; 0x04
     f18:	9d 81       	ldd	r25, Y+5	; 0x05
     f1a:	84 30       	cpi	r24, 0x04	; 4
     f1c:	91 05       	cpc	r25, r1
     f1e:	e9 f1       	breq	.+122    	; 0xf9a <DIO_voidSetPinValue+0x1d4>
     f20:	4f c0       	rjmp	.+158    	; 0xfc0 <DIO_voidSetPinValue+0x1fa>
				{
				case DIO_u8PORTA: SET_BIT(PORTA,Copy_u8Pin);break;
     f22:	ab e3       	ldi	r26, 0x3B	; 59
     f24:	b0 e0       	ldi	r27, 0x00	; 0
     f26:	eb e3       	ldi	r30, 0x3B	; 59
     f28:	f0 e0       	ldi	r31, 0x00	; 0
     f2a:	80 81       	ld	r24, Z
     f2c:	48 2f       	mov	r20, r24
     f2e:	8a 81       	ldd	r24, Y+2	; 0x02
     f30:	28 2f       	mov	r18, r24
     f32:	30 e0       	ldi	r19, 0x00	; 0
     f34:	81 e0       	ldi	r24, 0x01	; 1
     f36:	90 e0       	ldi	r25, 0x00	; 0
     f38:	02 2e       	mov	r0, r18
     f3a:	02 c0       	rjmp	.+4      	; 0xf40 <DIO_voidSetPinValue+0x17a>
     f3c:	88 0f       	add	r24, r24
     f3e:	99 1f       	adc	r25, r25
     f40:	0a 94       	dec	r0
     f42:	e2 f7       	brpl	.-8      	; 0xf3c <DIO_voidSetPinValue+0x176>
     f44:	84 2b       	or	r24, r20
     f46:	8c 93       	st	X, r24
     f48:	3b c0       	rjmp	.+118    	; 0xfc0 <DIO_voidSetPinValue+0x1fa>
				case DIO_u8PORTB: SET_BIT(PORTB,Copy_u8Pin);break;
     f4a:	a8 e3       	ldi	r26, 0x38	; 56
     f4c:	b0 e0       	ldi	r27, 0x00	; 0
     f4e:	e8 e3       	ldi	r30, 0x38	; 56
     f50:	f0 e0       	ldi	r31, 0x00	; 0
     f52:	80 81       	ld	r24, Z
     f54:	48 2f       	mov	r20, r24
     f56:	8a 81       	ldd	r24, Y+2	; 0x02
     f58:	28 2f       	mov	r18, r24
     f5a:	30 e0       	ldi	r19, 0x00	; 0
     f5c:	81 e0       	ldi	r24, 0x01	; 1
     f5e:	90 e0       	ldi	r25, 0x00	; 0
     f60:	02 2e       	mov	r0, r18
     f62:	02 c0       	rjmp	.+4      	; 0xf68 <DIO_voidSetPinValue+0x1a2>
     f64:	88 0f       	add	r24, r24
     f66:	99 1f       	adc	r25, r25
     f68:	0a 94       	dec	r0
     f6a:	e2 f7       	brpl	.-8      	; 0xf64 <DIO_voidSetPinValue+0x19e>
     f6c:	84 2b       	or	r24, r20
     f6e:	8c 93       	st	X, r24
     f70:	27 c0       	rjmp	.+78     	; 0xfc0 <DIO_voidSetPinValue+0x1fa>
				case DIO_u8PORTC: SET_BIT(PORTC,Copy_u8Pin);break;
     f72:	a5 e3       	ldi	r26, 0x35	; 53
     f74:	b0 e0       	ldi	r27, 0x00	; 0
     f76:	e5 e3       	ldi	r30, 0x35	; 53
     f78:	f0 e0       	ldi	r31, 0x00	; 0
     f7a:	80 81       	ld	r24, Z
     f7c:	48 2f       	mov	r20, r24
     f7e:	8a 81       	ldd	r24, Y+2	; 0x02
     f80:	28 2f       	mov	r18, r24
     f82:	30 e0       	ldi	r19, 0x00	; 0
     f84:	81 e0       	ldi	r24, 0x01	; 1
     f86:	90 e0       	ldi	r25, 0x00	; 0
     f88:	02 2e       	mov	r0, r18
     f8a:	02 c0       	rjmp	.+4      	; 0xf90 <DIO_voidSetPinValue+0x1ca>
     f8c:	88 0f       	add	r24, r24
     f8e:	99 1f       	adc	r25, r25
     f90:	0a 94       	dec	r0
     f92:	e2 f7       	brpl	.-8      	; 0xf8c <DIO_voidSetPinValue+0x1c6>
     f94:	84 2b       	or	r24, r20
     f96:	8c 93       	st	X, r24
     f98:	13 c0       	rjmp	.+38     	; 0xfc0 <DIO_voidSetPinValue+0x1fa>
				case DIO_u8PORTD: SET_BIT(PORTD,Copy_u8Pin);break;
     f9a:	a2 e3       	ldi	r26, 0x32	; 50
     f9c:	b0 e0       	ldi	r27, 0x00	; 0
     f9e:	e2 e3       	ldi	r30, 0x32	; 50
     fa0:	f0 e0       	ldi	r31, 0x00	; 0
     fa2:	80 81       	ld	r24, Z
     fa4:	48 2f       	mov	r20, r24
     fa6:	8a 81       	ldd	r24, Y+2	; 0x02
     fa8:	28 2f       	mov	r18, r24
     faa:	30 e0       	ldi	r19, 0x00	; 0
     fac:	81 e0       	ldi	r24, 0x01	; 1
     fae:	90 e0       	ldi	r25, 0x00	; 0
     fb0:	02 2e       	mov	r0, r18
     fb2:	02 c0       	rjmp	.+4      	; 0xfb8 <DIO_voidSetPinValue+0x1f2>
     fb4:	88 0f       	add	r24, r24
     fb6:	99 1f       	adc	r25, r25
     fb8:	0a 94       	dec	r0
     fba:	e2 f7       	brpl	.-8      	; 0xfb4 <DIO_voidSetPinValue+0x1ee>
     fbc:	84 2b       	or	r24, r20
     fbe:	8c 93       	st	X, r24
			}



		}
	}
     fc0:	27 96       	adiw	r28, 0x07	; 7
     fc2:	0f b6       	in	r0, 0x3f	; 63
     fc4:	f8 94       	cli
     fc6:	de bf       	out	0x3e, r29	; 62
     fc8:	0f be       	out	0x3f, r0	; 63
     fca:	cd bf       	out	0x3d, r28	; 61
     fcc:	cf 91       	pop	r28
     fce:	df 91       	pop	r29
     fd0:	08 95       	ret

00000fd2 <DIO_voidSetPortValue>:
	void DIO_voidSetPortValue(u8 Copy_u8Port,u8 Copy_u8PortValue)
	{
     fd2:	df 93       	push	r29
     fd4:	cf 93       	push	r28
     fd6:	00 d0       	rcall	.+0      	; 0xfd8 <DIO_voidSetPortValue+0x6>
     fd8:	00 d0       	rcall	.+0      	; 0xfda <DIO_voidSetPortValue+0x8>
     fda:	cd b7       	in	r28, 0x3d	; 61
     fdc:	de b7       	in	r29, 0x3e	; 62
     fde:	89 83       	std	Y+1, r24	; 0x01
     fe0:	6a 83       	std	Y+2, r22	; 0x02
		switch(Copy_u8Port)
     fe2:	89 81       	ldd	r24, Y+1	; 0x01
     fe4:	28 2f       	mov	r18, r24
     fe6:	30 e0       	ldi	r19, 0x00	; 0
     fe8:	3c 83       	std	Y+4, r19	; 0x04
     fea:	2b 83       	std	Y+3, r18	; 0x03
     fec:	8b 81       	ldd	r24, Y+3	; 0x03
     fee:	9c 81       	ldd	r25, Y+4	; 0x04
     ff0:	82 30       	cpi	r24, 0x02	; 2
     ff2:	91 05       	cpc	r25, r1
     ff4:	d9 f0       	breq	.+54     	; 0x102c <DIO_voidSetPortValue+0x5a>
     ff6:	2b 81       	ldd	r18, Y+3	; 0x03
     ff8:	3c 81       	ldd	r19, Y+4	; 0x04
     ffa:	23 30       	cpi	r18, 0x03	; 3
     ffc:	31 05       	cpc	r19, r1
     ffe:	34 f4       	brge	.+12     	; 0x100c <DIO_voidSetPortValue+0x3a>
    1000:	8b 81       	ldd	r24, Y+3	; 0x03
    1002:	9c 81       	ldd	r25, Y+4	; 0x04
    1004:	81 30       	cpi	r24, 0x01	; 1
    1006:	91 05       	cpc	r25, r1
    1008:	61 f0       	breq	.+24     	; 0x1022 <DIO_voidSetPortValue+0x50>
    100a:	1e c0       	rjmp	.+60     	; 0x1048 <DIO_voidSetPortValue+0x76>
    100c:	2b 81       	ldd	r18, Y+3	; 0x03
    100e:	3c 81       	ldd	r19, Y+4	; 0x04
    1010:	23 30       	cpi	r18, 0x03	; 3
    1012:	31 05       	cpc	r19, r1
    1014:	81 f0       	breq	.+32     	; 0x1036 <DIO_voidSetPortValue+0x64>
    1016:	8b 81       	ldd	r24, Y+3	; 0x03
    1018:	9c 81       	ldd	r25, Y+4	; 0x04
    101a:	84 30       	cpi	r24, 0x04	; 4
    101c:	91 05       	cpc	r25, r1
    101e:	81 f0       	breq	.+32     	; 0x1040 <DIO_voidSetPortValue+0x6e>
    1020:	13 c0       	rjmp	.+38     	; 0x1048 <DIO_voidSetPortValue+0x76>
		{
		case DIO_u8PORTA: PORTA=Copy_u8PortValue;break;
    1022:	eb e3       	ldi	r30, 0x3B	; 59
    1024:	f0 e0       	ldi	r31, 0x00	; 0
    1026:	8a 81       	ldd	r24, Y+2	; 0x02
    1028:	80 83       	st	Z, r24
    102a:	0e c0       	rjmp	.+28     	; 0x1048 <DIO_voidSetPortValue+0x76>
		case DIO_u8PORTB: PORTB=Copy_u8PortValue;break;
    102c:	e8 e3       	ldi	r30, 0x38	; 56
    102e:	f0 e0       	ldi	r31, 0x00	; 0
    1030:	8a 81       	ldd	r24, Y+2	; 0x02
    1032:	80 83       	st	Z, r24
    1034:	09 c0       	rjmp	.+18     	; 0x1048 <DIO_voidSetPortValue+0x76>
		case DIO_u8PORTC: PORTC=Copy_u8PortValue;break;
    1036:	e5 e3       	ldi	r30, 0x35	; 53
    1038:	f0 e0       	ldi	r31, 0x00	; 0
    103a:	8a 81       	ldd	r24, Y+2	; 0x02
    103c:	80 83       	st	Z, r24
    103e:	04 c0       	rjmp	.+8      	; 0x1048 <DIO_voidSetPortValue+0x76>
		case DIO_u8PORTD: PORTD=Copy_u8PortValue;break;
    1040:	e2 e3       	ldi	r30, 0x32	; 50
    1042:	f0 e0       	ldi	r31, 0x00	; 0
    1044:	8a 81       	ldd	r24, Y+2	; 0x02
    1046:	80 83       	st	Z, r24
		}

	}
    1048:	0f 90       	pop	r0
    104a:	0f 90       	pop	r0
    104c:	0f 90       	pop	r0
    104e:	0f 90       	pop	r0
    1050:	cf 91       	pop	r28
    1052:	df 91       	pop	r29
    1054:	08 95       	ret

00001056 <DIO_u8GetPinValue>:


	u8 DIO_u8GetPinValue(u8 Copy_u8Port,u8 Copy_u8Pin)
	{
    1056:	df 93       	push	r29
    1058:	cf 93       	push	r28
    105a:	00 d0       	rcall	.+0      	; 0x105c <DIO_u8GetPinValue+0x6>
    105c:	00 d0       	rcall	.+0      	; 0x105e <DIO_u8GetPinValue+0x8>
    105e:	0f 92       	push	r0
    1060:	cd b7       	in	r28, 0x3d	; 61
    1062:	de b7       	in	r29, 0x3e	; 62
    1064:	8a 83       	std	Y+2, r24	; 0x02
    1066:	6b 83       	std	Y+3, r22	; 0x03
		u8 Local_u8PinValue=0;
    1068:	19 82       	std	Y+1, r1	; 0x01
		switch(Copy_u8Port){
    106a:	8a 81       	ldd	r24, Y+2	; 0x02
    106c:	28 2f       	mov	r18, r24
    106e:	30 e0       	ldi	r19, 0x00	; 0
    1070:	3d 83       	std	Y+5, r19	; 0x05
    1072:	2c 83       	std	Y+4, r18	; 0x04
    1074:	4c 81       	ldd	r20, Y+4	; 0x04
    1076:	5d 81       	ldd	r21, Y+5	; 0x05
    1078:	42 30       	cpi	r20, 0x02	; 2
    107a:	51 05       	cpc	r21, r1
    107c:	41 f1       	breq	.+80     	; 0x10ce <DIO_u8GetPinValue+0x78>
    107e:	8c 81       	ldd	r24, Y+4	; 0x04
    1080:	9d 81       	ldd	r25, Y+5	; 0x05
    1082:	83 30       	cpi	r24, 0x03	; 3
    1084:	91 05       	cpc	r25, r1
    1086:	34 f4       	brge	.+12     	; 0x1094 <DIO_u8GetPinValue+0x3e>
    1088:	2c 81       	ldd	r18, Y+4	; 0x04
    108a:	3d 81       	ldd	r19, Y+5	; 0x05
    108c:	21 30       	cpi	r18, 0x01	; 1
    108e:	31 05       	cpc	r19, r1
    1090:	61 f0       	breq	.+24     	; 0x10aa <DIO_u8GetPinValue+0x54>
    1092:	52 c0       	rjmp	.+164    	; 0x1138 <DIO_u8GetPinValue+0xe2>
    1094:	4c 81       	ldd	r20, Y+4	; 0x04
    1096:	5d 81       	ldd	r21, Y+5	; 0x05
    1098:	43 30       	cpi	r20, 0x03	; 3
    109a:	51 05       	cpc	r21, r1
    109c:	51 f1       	breq	.+84     	; 0x10f2 <DIO_u8GetPinValue+0x9c>
    109e:	8c 81       	ldd	r24, Y+4	; 0x04
    10a0:	9d 81       	ldd	r25, Y+5	; 0x05
    10a2:	84 30       	cpi	r24, 0x04	; 4
    10a4:	91 05       	cpc	r25, r1
    10a6:	b9 f1       	breq	.+110    	; 0x1116 <DIO_u8GetPinValue+0xc0>
    10a8:	47 c0       	rjmp	.+142    	; 0x1138 <DIO_u8GetPinValue+0xe2>
		case DIO_u8PORTA: Local_u8PinValue =GET_BIT(PINA,Copy_u8Pin); break;
    10aa:	e9 e3       	ldi	r30, 0x39	; 57
    10ac:	f0 e0       	ldi	r31, 0x00	; 0
    10ae:	80 81       	ld	r24, Z
    10b0:	28 2f       	mov	r18, r24
    10b2:	30 e0       	ldi	r19, 0x00	; 0
    10b4:	8b 81       	ldd	r24, Y+3	; 0x03
    10b6:	88 2f       	mov	r24, r24
    10b8:	90 e0       	ldi	r25, 0x00	; 0
    10ba:	a9 01       	movw	r20, r18
    10bc:	02 c0       	rjmp	.+4      	; 0x10c2 <DIO_u8GetPinValue+0x6c>
    10be:	55 95       	asr	r21
    10c0:	47 95       	ror	r20
    10c2:	8a 95       	dec	r24
    10c4:	e2 f7       	brpl	.-8      	; 0x10be <DIO_u8GetPinValue+0x68>
    10c6:	ca 01       	movw	r24, r20
    10c8:	81 70       	andi	r24, 0x01	; 1
    10ca:	89 83       	std	Y+1, r24	; 0x01
    10cc:	35 c0       	rjmp	.+106    	; 0x1138 <DIO_u8GetPinValue+0xe2>
        case DIO_u8PORTB: Local_u8PinValue =GET_BIT(PINB,Copy_u8Pin); break;
    10ce:	e6 e3       	ldi	r30, 0x36	; 54
    10d0:	f0 e0       	ldi	r31, 0x00	; 0
    10d2:	80 81       	ld	r24, Z
    10d4:	28 2f       	mov	r18, r24
    10d6:	30 e0       	ldi	r19, 0x00	; 0
    10d8:	8b 81       	ldd	r24, Y+3	; 0x03
    10da:	88 2f       	mov	r24, r24
    10dc:	90 e0       	ldi	r25, 0x00	; 0
    10de:	a9 01       	movw	r20, r18
    10e0:	02 c0       	rjmp	.+4      	; 0x10e6 <DIO_u8GetPinValue+0x90>
    10e2:	55 95       	asr	r21
    10e4:	47 95       	ror	r20
    10e6:	8a 95       	dec	r24
    10e8:	e2 f7       	brpl	.-8      	; 0x10e2 <DIO_u8GetPinValue+0x8c>
    10ea:	ca 01       	movw	r24, r20
    10ec:	81 70       	andi	r24, 0x01	; 1
    10ee:	89 83       	std	Y+1, r24	; 0x01
    10f0:	23 c0       	rjmp	.+70     	; 0x1138 <DIO_u8GetPinValue+0xe2>
		case DIO_u8PORTC: Local_u8PinValue =GET_BIT(PINC,Copy_u8Pin); break;
    10f2:	e3 e3       	ldi	r30, 0x33	; 51
    10f4:	f0 e0       	ldi	r31, 0x00	; 0
    10f6:	80 81       	ld	r24, Z
    10f8:	28 2f       	mov	r18, r24
    10fa:	30 e0       	ldi	r19, 0x00	; 0
    10fc:	8b 81       	ldd	r24, Y+3	; 0x03
    10fe:	88 2f       	mov	r24, r24
    1100:	90 e0       	ldi	r25, 0x00	; 0
    1102:	a9 01       	movw	r20, r18
    1104:	02 c0       	rjmp	.+4      	; 0x110a <DIO_u8GetPinValue+0xb4>
    1106:	55 95       	asr	r21
    1108:	47 95       	ror	r20
    110a:	8a 95       	dec	r24
    110c:	e2 f7       	brpl	.-8      	; 0x1106 <DIO_u8GetPinValue+0xb0>
    110e:	ca 01       	movw	r24, r20
    1110:	81 70       	andi	r24, 0x01	; 1
    1112:	89 83       	std	Y+1, r24	; 0x01
    1114:	11 c0       	rjmp	.+34     	; 0x1138 <DIO_u8GetPinValue+0xe2>
		case DIO_u8PORTD: Local_u8PinValue =GET_BIT(PIND,Copy_u8Pin); break;
    1116:	e0 e3       	ldi	r30, 0x30	; 48
    1118:	f0 e0       	ldi	r31, 0x00	; 0
    111a:	80 81       	ld	r24, Z
    111c:	28 2f       	mov	r18, r24
    111e:	30 e0       	ldi	r19, 0x00	; 0
    1120:	8b 81       	ldd	r24, Y+3	; 0x03
    1122:	88 2f       	mov	r24, r24
    1124:	90 e0       	ldi	r25, 0x00	; 0
    1126:	a9 01       	movw	r20, r18
    1128:	02 c0       	rjmp	.+4      	; 0x112e <DIO_u8GetPinValue+0xd8>
    112a:	55 95       	asr	r21
    112c:	47 95       	ror	r20
    112e:	8a 95       	dec	r24
    1130:	e2 f7       	brpl	.-8      	; 0x112a <DIO_u8GetPinValue+0xd4>
    1132:	ca 01       	movw	r24, r20
    1134:	81 70       	andi	r24, 0x01	; 1
    1136:	89 83       	std	Y+1, r24	; 0x01
				}
		return Local_u8PinValue;
    1138:	89 81       	ldd	r24, Y+1	; 0x01
	}
    113a:	0f 90       	pop	r0
    113c:	0f 90       	pop	r0
    113e:	0f 90       	pop	r0
    1140:	0f 90       	pop	r0
    1142:	0f 90       	pop	r0
    1144:	cf 91       	pop	r28
    1146:	df 91       	pop	r29
    1148:	08 95       	ret

0000114a <LCD_voidSendCommand>:

#include"LCD_interface.h"
#include"LCD_config.h"
#include"LCD_private.h"
void LCD_voidSendCommand(u8 Copy_u8Command)
{
    114a:	df 93       	push	r29
    114c:	cf 93       	push	r28
    114e:	cd b7       	in	r28, 0x3d	; 61
    1150:	de b7       	in	r29, 0x3e	; 62
    1152:	2f 97       	sbiw	r28, 0x0f	; 15
    1154:	0f b6       	in	r0, 0x3f	; 63
    1156:	f8 94       	cli
    1158:	de bf       	out	0x3e, r29	; 62
    115a:	0f be       	out	0x3f, r0	; 63
    115c:	cd bf       	out	0x3d, r28	; 61
    115e:	8f 87       	std	Y+15, r24	; 0x0f
	/*NOTE:ana ha3mel al port wel pin direction fel Init function*/
	/*to send command, put RS to low(0)*/


	DIO_voidSetPinValue(LCD_Control_Port,LCD_RS_PIN,DIO_u8PIN_LOW);// 7ATET AL RS be zero
    1160:	83 e0       	ldi	r24, 0x03	; 3
    1162:	60 e0       	ldi	r22, 0x00	; 0
    1164:	40 e0       	ldi	r20, 0x00	; 0
    1166:	0e 94 e3 06 	call	0xdc6	; 0xdc6 <DIO_voidSetPinValue>
	/*to get to write mode, u have to et RW to low(0)*/
	DIO_voidSetPinValue(LCD_Control_Port,LCD_RW_PIN,DIO_u8PIN_LOW);
    116a:	83 e0       	ldi	r24, 0x03	; 3
    116c:	61 e0       	ldi	r22, 0x01	; 1
    116e:	40 e0       	ldi	r20, 0x00	; 0
    1170:	0e 94 e3 06 	call	0xdc6	; 0xdc6 <DIO_voidSetPinValue>
	/*7ot b2a al command al user hayb3to fel data port(D0---D7)*/
	DIO_voidSetPortValue(LCD_Data_Port,Copy_u8Command);
    1174:	81 e0       	ldi	r24, 0x01	; 1
    1176:	6f 85       	ldd	r22, Y+15	; 0x0f
    1178:	0e 94 e9 07 	call	0xfd2	; 0xfd2 <DIO_voidSetPortValue>
	/*4a8al al enable---HIGH-delay-low*/
	DIO_voidSetPinValue(LCD_Control_Port,LCD_E_PIN,DIO_u8PIN_HIGH);
    117c:	83 e0       	ldi	r24, 0x03	; 3
    117e:	62 e0       	ldi	r22, 0x02	; 2
    1180:	41 e0       	ldi	r20, 0x01	; 1
    1182:	0e 94 e3 06 	call	0xdc6	; 0xdc6 <DIO_voidSetPinValue>
    1186:	80 e0       	ldi	r24, 0x00	; 0
    1188:	90 e0       	ldi	r25, 0x00	; 0
    118a:	a0 e0       	ldi	r26, 0x00	; 0
    118c:	b0 e4       	ldi	r27, 0x40	; 64
    118e:	8b 87       	std	Y+11, r24	; 0x0b
    1190:	9c 87       	std	Y+12, r25	; 0x0c
    1192:	ad 87       	std	Y+13, r26	; 0x0d
    1194:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1196:	6b 85       	ldd	r22, Y+11	; 0x0b
    1198:	7c 85       	ldd	r23, Y+12	; 0x0c
    119a:	8d 85       	ldd	r24, Y+13	; 0x0d
    119c:	9e 85       	ldd	r25, Y+14	; 0x0e
    119e:	20 e0       	ldi	r18, 0x00	; 0
    11a0:	30 e0       	ldi	r19, 0x00	; 0
    11a2:	4a ef       	ldi	r20, 0xFA	; 250
    11a4:	54 e4       	ldi	r21, 0x44	; 68
    11a6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    11aa:	dc 01       	movw	r26, r24
    11ac:	cb 01       	movw	r24, r22
    11ae:	8f 83       	std	Y+7, r24	; 0x07
    11b0:	98 87       	std	Y+8, r25	; 0x08
    11b2:	a9 87       	std	Y+9, r26	; 0x09
    11b4:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    11b6:	6f 81       	ldd	r22, Y+7	; 0x07
    11b8:	78 85       	ldd	r23, Y+8	; 0x08
    11ba:	89 85       	ldd	r24, Y+9	; 0x09
    11bc:	9a 85       	ldd	r25, Y+10	; 0x0a
    11be:	20 e0       	ldi	r18, 0x00	; 0
    11c0:	30 e0       	ldi	r19, 0x00	; 0
    11c2:	40 e8       	ldi	r20, 0x80	; 128
    11c4:	5f e3       	ldi	r21, 0x3F	; 63
    11c6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    11ca:	88 23       	and	r24, r24
    11cc:	2c f4       	brge	.+10     	; 0x11d8 <LCD_voidSendCommand+0x8e>
		__ticks = 1;
    11ce:	81 e0       	ldi	r24, 0x01	; 1
    11d0:	90 e0       	ldi	r25, 0x00	; 0
    11d2:	9e 83       	std	Y+6, r25	; 0x06
    11d4:	8d 83       	std	Y+5, r24	; 0x05
    11d6:	3f c0       	rjmp	.+126    	; 0x1256 <LCD_voidSendCommand+0x10c>
	else if (__tmp > 65535)
    11d8:	6f 81       	ldd	r22, Y+7	; 0x07
    11da:	78 85       	ldd	r23, Y+8	; 0x08
    11dc:	89 85       	ldd	r24, Y+9	; 0x09
    11de:	9a 85       	ldd	r25, Y+10	; 0x0a
    11e0:	20 e0       	ldi	r18, 0x00	; 0
    11e2:	3f ef       	ldi	r19, 0xFF	; 255
    11e4:	4f e7       	ldi	r20, 0x7F	; 127
    11e6:	57 e4       	ldi	r21, 0x47	; 71
    11e8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    11ec:	18 16       	cp	r1, r24
    11ee:	4c f5       	brge	.+82     	; 0x1242 <LCD_voidSendCommand+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    11f0:	6b 85       	ldd	r22, Y+11	; 0x0b
    11f2:	7c 85       	ldd	r23, Y+12	; 0x0c
    11f4:	8d 85       	ldd	r24, Y+13	; 0x0d
    11f6:	9e 85       	ldd	r25, Y+14	; 0x0e
    11f8:	20 e0       	ldi	r18, 0x00	; 0
    11fa:	30 e0       	ldi	r19, 0x00	; 0
    11fc:	40 e2       	ldi	r20, 0x20	; 32
    11fe:	51 e4       	ldi	r21, 0x41	; 65
    1200:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1204:	dc 01       	movw	r26, r24
    1206:	cb 01       	movw	r24, r22
    1208:	bc 01       	movw	r22, r24
    120a:	cd 01       	movw	r24, r26
    120c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1210:	dc 01       	movw	r26, r24
    1212:	cb 01       	movw	r24, r22
    1214:	9e 83       	std	Y+6, r25	; 0x06
    1216:	8d 83       	std	Y+5, r24	; 0x05
    1218:	0f c0       	rjmp	.+30     	; 0x1238 <LCD_voidSendCommand+0xee>
    121a:	88 ec       	ldi	r24, 0xC8	; 200
    121c:	90 e0       	ldi	r25, 0x00	; 0
    121e:	9c 83       	std	Y+4, r25	; 0x04
    1220:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1222:	8b 81       	ldd	r24, Y+3	; 0x03
    1224:	9c 81       	ldd	r25, Y+4	; 0x04
    1226:	01 97       	sbiw	r24, 0x01	; 1
    1228:	f1 f7       	brne	.-4      	; 0x1226 <LCD_voidSendCommand+0xdc>
    122a:	9c 83       	std	Y+4, r25	; 0x04
    122c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    122e:	8d 81       	ldd	r24, Y+5	; 0x05
    1230:	9e 81       	ldd	r25, Y+6	; 0x06
    1232:	01 97       	sbiw	r24, 0x01	; 1
    1234:	9e 83       	std	Y+6, r25	; 0x06
    1236:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1238:	8d 81       	ldd	r24, Y+5	; 0x05
    123a:	9e 81       	ldd	r25, Y+6	; 0x06
    123c:	00 97       	sbiw	r24, 0x00	; 0
    123e:	69 f7       	brne	.-38     	; 0x121a <LCD_voidSendCommand+0xd0>
    1240:	14 c0       	rjmp	.+40     	; 0x126a <LCD_voidSendCommand+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1242:	6f 81       	ldd	r22, Y+7	; 0x07
    1244:	78 85       	ldd	r23, Y+8	; 0x08
    1246:	89 85       	ldd	r24, Y+9	; 0x09
    1248:	9a 85       	ldd	r25, Y+10	; 0x0a
    124a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    124e:	dc 01       	movw	r26, r24
    1250:	cb 01       	movw	r24, r22
    1252:	9e 83       	std	Y+6, r25	; 0x06
    1254:	8d 83       	std	Y+5, r24	; 0x05
    1256:	8d 81       	ldd	r24, Y+5	; 0x05
    1258:	9e 81       	ldd	r25, Y+6	; 0x06
    125a:	9a 83       	std	Y+2, r25	; 0x02
    125c:	89 83       	std	Y+1, r24	; 0x01
    125e:	89 81       	ldd	r24, Y+1	; 0x01
    1260:	9a 81       	ldd	r25, Y+2	; 0x02
    1262:	01 97       	sbiw	r24, 0x01	; 1
    1264:	f1 f7       	brne	.-4      	; 0x1262 <LCD_voidSendCommand+0x118>
    1266:	9a 83       	std	Y+2, r25	; 0x02
    1268:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);//han3raf leh 2 millisecond 2odam
	DIO_voidSetPinValue(LCD_Control_Port,LCD_E_PIN,DIO_u8PIN_LOW);
    126a:	83 e0       	ldi	r24, 0x03	; 3
    126c:	62 e0       	ldi	r22, 0x02	; 2
    126e:	40 e0       	ldi	r20, 0x00	; 0
    1270:	0e 94 e3 06 	call	0xdc6	; 0xdc6 <DIO_voidSetPinValue>
}
    1274:	2f 96       	adiw	r28, 0x0f	; 15
    1276:	0f b6       	in	r0, 0x3f	; 63
    1278:	f8 94       	cli
    127a:	de bf       	out	0x3e, r29	; 62
    127c:	0f be       	out	0x3f, r0	; 63
    127e:	cd bf       	out	0x3d, r28	; 61
    1280:	cf 91       	pop	r28
    1282:	df 91       	pop	r29
    1284:	08 95       	ret

00001286 <LCD_voidSendCharacter>:

void LCD_voidSendCharacter(u8 Copy_u8Character)
{
    1286:	df 93       	push	r29
    1288:	cf 93       	push	r28
    128a:	cd b7       	in	r28, 0x3d	; 61
    128c:	de b7       	in	r29, 0x3e	; 62
    128e:	2f 97       	sbiw	r28, 0x0f	; 15
    1290:	0f b6       	in	r0, 0x3f	; 63
    1292:	f8 94       	cli
    1294:	de bf       	out	0x3e, r29	; 62
    1296:	0f be       	out	0x3f, r0	; 63
    1298:	cd bf       	out	0x3d, r28	; 61
    129a:	8f 87       	std	Y+15, r24	; 0x0f
	/*to send data, put RS to high(1)*/

	DIO_voidSetPinValue(LCD_Control_Port,LCD_RS_PIN,DIO_u8PIN_HIGH);// 7ATET AL RS be zero
    129c:	83 e0       	ldi	r24, 0x03	; 3
    129e:	60 e0       	ldi	r22, 0x00	; 0
    12a0:	41 e0       	ldi	r20, 0x01	; 1
    12a2:	0e 94 e3 06 	call	0xdc6	; 0xdc6 <DIO_voidSetPinValue>
	/*to get to write mode, u have to et RW to low(0)*/
	DIO_voidSetPinValue(LCD_Control_Port,LCD_RW_PIN,DIO_u8PIN_LOW);
    12a6:	83 e0       	ldi	r24, 0x03	; 3
    12a8:	61 e0       	ldi	r22, 0x01	; 1
    12aa:	40 e0       	ldi	r20, 0x00	; 0
    12ac:	0e 94 e3 06 	call	0xdc6	; 0xdc6 <DIO_voidSetPinValue>
	/*7ot b2a al data al user hayb3to fel data port(D0---D7)*/
	DIO_voidSetPortValue(LCD_Data_Port,Copy_u8Character);
    12b0:	81 e0       	ldi	r24, 0x01	; 1
    12b2:	6f 85       	ldd	r22, Y+15	; 0x0f
    12b4:	0e 94 e9 07 	call	0xfd2	; 0xfd2 <DIO_voidSetPortValue>
	/*4a8al al enable*/
	DIO_voidSetPinValue(LCD_Control_Port,LCD_E_PIN,DIO_u8PIN_HIGH);
    12b8:	83 e0       	ldi	r24, 0x03	; 3
    12ba:	62 e0       	ldi	r22, 0x02	; 2
    12bc:	41 e0       	ldi	r20, 0x01	; 1
    12be:	0e 94 e3 06 	call	0xdc6	; 0xdc6 <DIO_voidSetPinValue>
    12c2:	80 e0       	ldi	r24, 0x00	; 0
    12c4:	90 e0       	ldi	r25, 0x00	; 0
    12c6:	a0 e0       	ldi	r26, 0x00	; 0
    12c8:	b0 e4       	ldi	r27, 0x40	; 64
    12ca:	8b 87       	std	Y+11, r24	; 0x0b
    12cc:	9c 87       	std	Y+12, r25	; 0x0c
    12ce:	ad 87       	std	Y+13, r26	; 0x0d
    12d0:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    12d2:	6b 85       	ldd	r22, Y+11	; 0x0b
    12d4:	7c 85       	ldd	r23, Y+12	; 0x0c
    12d6:	8d 85       	ldd	r24, Y+13	; 0x0d
    12d8:	9e 85       	ldd	r25, Y+14	; 0x0e
    12da:	20 e0       	ldi	r18, 0x00	; 0
    12dc:	30 e0       	ldi	r19, 0x00	; 0
    12de:	4a ef       	ldi	r20, 0xFA	; 250
    12e0:	54 e4       	ldi	r21, 0x44	; 68
    12e2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    12e6:	dc 01       	movw	r26, r24
    12e8:	cb 01       	movw	r24, r22
    12ea:	8f 83       	std	Y+7, r24	; 0x07
    12ec:	98 87       	std	Y+8, r25	; 0x08
    12ee:	a9 87       	std	Y+9, r26	; 0x09
    12f0:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    12f2:	6f 81       	ldd	r22, Y+7	; 0x07
    12f4:	78 85       	ldd	r23, Y+8	; 0x08
    12f6:	89 85       	ldd	r24, Y+9	; 0x09
    12f8:	9a 85       	ldd	r25, Y+10	; 0x0a
    12fa:	20 e0       	ldi	r18, 0x00	; 0
    12fc:	30 e0       	ldi	r19, 0x00	; 0
    12fe:	40 e8       	ldi	r20, 0x80	; 128
    1300:	5f e3       	ldi	r21, 0x3F	; 63
    1302:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1306:	88 23       	and	r24, r24
    1308:	2c f4       	brge	.+10     	; 0x1314 <LCD_voidSendCharacter+0x8e>
		__ticks = 1;
    130a:	81 e0       	ldi	r24, 0x01	; 1
    130c:	90 e0       	ldi	r25, 0x00	; 0
    130e:	9e 83       	std	Y+6, r25	; 0x06
    1310:	8d 83       	std	Y+5, r24	; 0x05
    1312:	3f c0       	rjmp	.+126    	; 0x1392 <LCD_voidSendCharacter+0x10c>
	else if (__tmp > 65535)
    1314:	6f 81       	ldd	r22, Y+7	; 0x07
    1316:	78 85       	ldd	r23, Y+8	; 0x08
    1318:	89 85       	ldd	r24, Y+9	; 0x09
    131a:	9a 85       	ldd	r25, Y+10	; 0x0a
    131c:	20 e0       	ldi	r18, 0x00	; 0
    131e:	3f ef       	ldi	r19, 0xFF	; 255
    1320:	4f e7       	ldi	r20, 0x7F	; 127
    1322:	57 e4       	ldi	r21, 0x47	; 71
    1324:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1328:	18 16       	cp	r1, r24
    132a:	4c f5       	brge	.+82     	; 0x137e <LCD_voidSendCharacter+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    132c:	6b 85       	ldd	r22, Y+11	; 0x0b
    132e:	7c 85       	ldd	r23, Y+12	; 0x0c
    1330:	8d 85       	ldd	r24, Y+13	; 0x0d
    1332:	9e 85       	ldd	r25, Y+14	; 0x0e
    1334:	20 e0       	ldi	r18, 0x00	; 0
    1336:	30 e0       	ldi	r19, 0x00	; 0
    1338:	40 e2       	ldi	r20, 0x20	; 32
    133a:	51 e4       	ldi	r21, 0x41	; 65
    133c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1340:	dc 01       	movw	r26, r24
    1342:	cb 01       	movw	r24, r22
    1344:	bc 01       	movw	r22, r24
    1346:	cd 01       	movw	r24, r26
    1348:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    134c:	dc 01       	movw	r26, r24
    134e:	cb 01       	movw	r24, r22
    1350:	9e 83       	std	Y+6, r25	; 0x06
    1352:	8d 83       	std	Y+5, r24	; 0x05
    1354:	0f c0       	rjmp	.+30     	; 0x1374 <LCD_voidSendCharacter+0xee>
    1356:	88 ec       	ldi	r24, 0xC8	; 200
    1358:	90 e0       	ldi	r25, 0x00	; 0
    135a:	9c 83       	std	Y+4, r25	; 0x04
    135c:	8b 83       	std	Y+3, r24	; 0x03
    135e:	8b 81       	ldd	r24, Y+3	; 0x03
    1360:	9c 81       	ldd	r25, Y+4	; 0x04
    1362:	01 97       	sbiw	r24, 0x01	; 1
    1364:	f1 f7       	brne	.-4      	; 0x1362 <LCD_voidSendCharacter+0xdc>
    1366:	9c 83       	std	Y+4, r25	; 0x04
    1368:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    136a:	8d 81       	ldd	r24, Y+5	; 0x05
    136c:	9e 81       	ldd	r25, Y+6	; 0x06
    136e:	01 97       	sbiw	r24, 0x01	; 1
    1370:	9e 83       	std	Y+6, r25	; 0x06
    1372:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1374:	8d 81       	ldd	r24, Y+5	; 0x05
    1376:	9e 81       	ldd	r25, Y+6	; 0x06
    1378:	00 97       	sbiw	r24, 0x00	; 0
    137a:	69 f7       	brne	.-38     	; 0x1356 <LCD_voidSendCharacter+0xd0>
    137c:	14 c0       	rjmp	.+40     	; 0x13a6 <LCD_voidSendCharacter+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    137e:	6f 81       	ldd	r22, Y+7	; 0x07
    1380:	78 85       	ldd	r23, Y+8	; 0x08
    1382:	89 85       	ldd	r24, Y+9	; 0x09
    1384:	9a 85       	ldd	r25, Y+10	; 0x0a
    1386:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    138a:	dc 01       	movw	r26, r24
    138c:	cb 01       	movw	r24, r22
    138e:	9e 83       	std	Y+6, r25	; 0x06
    1390:	8d 83       	std	Y+5, r24	; 0x05
    1392:	8d 81       	ldd	r24, Y+5	; 0x05
    1394:	9e 81       	ldd	r25, Y+6	; 0x06
    1396:	9a 83       	std	Y+2, r25	; 0x02
    1398:	89 83       	std	Y+1, r24	; 0x01
    139a:	89 81       	ldd	r24, Y+1	; 0x01
    139c:	9a 81       	ldd	r25, Y+2	; 0x02
    139e:	01 97       	sbiw	r24, 0x01	; 1
    13a0:	f1 f7       	brne	.-4      	; 0x139e <LCD_voidSendCharacter+0x118>
    13a2:	9a 83       	std	Y+2, r25	; 0x02
    13a4:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);//han3raf leh 2 millisecond 2odam
	DIO_voidSetPinValue(LCD_Control_Port,LCD_E_PIN,DIO_u8PIN_LOW);
    13a6:	83 e0       	ldi	r24, 0x03	; 3
    13a8:	62 e0       	ldi	r22, 0x02	; 2
    13aa:	40 e0       	ldi	r20, 0x00	; 0
    13ac:	0e 94 e3 06 	call	0xdc6	; 0xdc6 <DIO_voidSetPinValue>



}
    13b0:	2f 96       	adiw	r28, 0x0f	; 15
    13b2:	0f b6       	in	r0, 0x3f	; 63
    13b4:	f8 94       	cli
    13b6:	de bf       	out	0x3e, r29	; 62
    13b8:	0f be       	out	0x3f, r0	; 63
    13ba:	cd bf       	out	0x3d, r28	; 61
    13bc:	cf 91       	pop	r28
    13be:	df 91       	pop	r29
    13c0:	08 95       	ret

000013c2 <LCD_voidInit>:
void LCD_voidInit(void)//hena ha7ot al direction bta3 pins al data wel control
{
    13c2:	df 93       	push	r29
    13c4:	cf 93       	push	r28
    13c6:	cd b7       	in	r28, 0x3d	; 61
    13c8:	de b7       	in	r29, 0x3e	; 62
    13ca:	2e 97       	sbiw	r28, 0x0e	; 14
    13cc:	0f b6       	in	r0, 0x3f	; 63
    13ce:	f8 94       	cli
    13d0:	de bf       	out	0x3e, r29	; 62
    13d2:	0f be       	out	0x3f, r0	; 63
    13d4:	cd bf       	out	0x3d, r28	; 61
#if LCD_Mode==LCD_8BitMode
	/*ha5aly al data pins output, hya keda 3la tol ayan kan hatla3 commands wla data*/
	DIO_voidSetPortDirection(LCD_Data_Port,DIO_u8PORT_OUTPUT);
    13d6:	81 e0       	ldi	r24, 0x01	; 1
    13d8:	6f ef       	ldi	r22, 0xFF	; 255
    13da:	0e 94 a1 06 	call	0xd42	; 0xd42 <DIO_voidSetPortDirection>
	/*ha5aly bardo al control pins kol wa7da output,bla4 a5aly al control port kolo output 34an dol 3 pins momkn ast3mel nafs al port al 5 pins al ba2yeen fe 7aga tanya*/
	DIO_voidSetPinDirection(LCD_Control_Port,LCD_RS_PIN,DIO_u8PIN_OUTPUT);
    13de:	83 e0       	ldi	r24, 0x03	; 3
    13e0:	60 e0       	ldi	r22, 0x00	; 0
    13e2:	41 e0       	ldi	r20, 0x01	; 1
    13e4:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(LCD_Control_Port,LCD_RW_PIN,DIO_u8PIN_OUTPUT);
    13e8:	83 e0       	ldi	r24, 0x03	; 3
    13ea:	61 e0       	ldi	r22, 0x01	; 1
    13ec:	41 e0       	ldi	r20, 0x01	; 1
    13ee:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(LCD_Control_Port,LCD_E_PIN,DIO_u8PIN_OUTPUT);
    13f2:	83 e0       	ldi	r24, 0x03	; 3
    13f4:	62 e0       	ldi	r22, 0x02	; 2
    13f6:	41 e0       	ldi	r20, 0x01	; 1
    13f8:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_voidSetPinDirection>
    13fc:	80 e0       	ldi	r24, 0x00	; 0
    13fe:	90 e0       	ldi	r25, 0x00	; 0
    1400:	a0 e2       	ldi	r26, 0x20	; 32
    1402:	b2 e4       	ldi	r27, 0x42	; 66
    1404:	8b 87       	std	Y+11, r24	; 0x0b
    1406:	9c 87       	std	Y+12, r25	; 0x0c
    1408:	ad 87       	std	Y+13, r26	; 0x0d
    140a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    140c:	6b 85       	ldd	r22, Y+11	; 0x0b
    140e:	7c 85       	ldd	r23, Y+12	; 0x0c
    1410:	8d 85       	ldd	r24, Y+13	; 0x0d
    1412:	9e 85       	ldd	r25, Y+14	; 0x0e
    1414:	20 e0       	ldi	r18, 0x00	; 0
    1416:	30 e0       	ldi	r19, 0x00	; 0
    1418:	4a ef       	ldi	r20, 0xFA	; 250
    141a:	54 e4       	ldi	r21, 0x44	; 68
    141c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1420:	dc 01       	movw	r26, r24
    1422:	cb 01       	movw	r24, r22
    1424:	8f 83       	std	Y+7, r24	; 0x07
    1426:	98 87       	std	Y+8, r25	; 0x08
    1428:	a9 87       	std	Y+9, r26	; 0x09
    142a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    142c:	6f 81       	ldd	r22, Y+7	; 0x07
    142e:	78 85       	ldd	r23, Y+8	; 0x08
    1430:	89 85       	ldd	r24, Y+9	; 0x09
    1432:	9a 85       	ldd	r25, Y+10	; 0x0a
    1434:	20 e0       	ldi	r18, 0x00	; 0
    1436:	30 e0       	ldi	r19, 0x00	; 0
    1438:	40 e8       	ldi	r20, 0x80	; 128
    143a:	5f e3       	ldi	r21, 0x3F	; 63
    143c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1440:	88 23       	and	r24, r24
    1442:	2c f4       	brge	.+10     	; 0x144e <LCD_voidInit+0x8c>
		__ticks = 1;
    1444:	81 e0       	ldi	r24, 0x01	; 1
    1446:	90 e0       	ldi	r25, 0x00	; 0
    1448:	9e 83       	std	Y+6, r25	; 0x06
    144a:	8d 83       	std	Y+5, r24	; 0x05
    144c:	3f c0       	rjmp	.+126    	; 0x14cc <LCD_voidInit+0x10a>
	else if (__tmp > 65535)
    144e:	6f 81       	ldd	r22, Y+7	; 0x07
    1450:	78 85       	ldd	r23, Y+8	; 0x08
    1452:	89 85       	ldd	r24, Y+9	; 0x09
    1454:	9a 85       	ldd	r25, Y+10	; 0x0a
    1456:	20 e0       	ldi	r18, 0x00	; 0
    1458:	3f ef       	ldi	r19, 0xFF	; 255
    145a:	4f e7       	ldi	r20, 0x7F	; 127
    145c:	57 e4       	ldi	r21, 0x47	; 71
    145e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1462:	18 16       	cp	r1, r24
    1464:	4c f5       	brge	.+82     	; 0x14b8 <LCD_voidInit+0xf6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1466:	6b 85       	ldd	r22, Y+11	; 0x0b
    1468:	7c 85       	ldd	r23, Y+12	; 0x0c
    146a:	8d 85       	ldd	r24, Y+13	; 0x0d
    146c:	9e 85       	ldd	r25, Y+14	; 0x0e
    146e:	20 e0       	ldi	r18, 0x00	; 0
    1470:	30 e0       	ldi	r19, 0x00	; 0
    1472:	40 e2       	ldi	r20, 0x20	; 32
    1474:	51 e4       	ldi	r21, 0x41	; 65
    1476:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    147a:	dc 01       	movw	r26, r24
    147c:	cb 01       	movw	r24, r22
    147e:	bc 01       	movw	r22, r24
    1480:	cd 01       	movw	r24, r26
    1482:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1486:	dc 01       	movw	r26, r24
    1488:	cb 01       	movw	r24, r22
    148a:	9e 83       	std	Y+6, r25	; 0x06
    148c:	8d 83       	std	Y+5, r24	; 0x05
    148e:	0f c0       	rjmp	.+30     	; 0x14ae <LCD_voidInit+0xec>
    1490:	88 ec       	ldi	r24, 0xC8	; 200
    1492:	90 e0       	ldi	r25, 0x00	; 0
    1494:	9c 83       	std	Y+4, r25	; 0x04
    1496:	8b 83       	std	Y+3, r24	; 0x03
    1498:	8b 81       	ldd	r24, Y+3	; 0x03
    149a:	9c 81       	ldd	r25, Y+4	; 0x04
    149c:	01 97       	sbiw	r24, 0x01	; 1
    149e:	f1 f7       	brne	.-4      	; 0x149c <LCD_voidInit+0xda>
    14a0:	9c 83       	std	Y+4, r25	; 0x04
    14a2:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    14a4:	8d 81       	ldd	r24, Y+5	; 0x05
    14a6:	9e 81       	ldd	r25, Y+6	; 0x06
    14a8:	01 97       	sbiw	r24, 0x01	; 1
    14aa:	9e 83       	std	Y+6, r25	; 0x06
    14ac:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    14ae:	8d 81       	ldd	r24, Y+5	; 0x05
    14b0:	9e 81       	ldd	r25, Y+6	; 0x06
    14b2:	00 97       	sbiw	r24, 0x00	; 0
    14b4:	69 f7       	brne	.-38     	; 0x1490 <LCD_voidInit+0xce>
    14b6:	14 c0       	rjmp	.+40     	; 0x14e0 <LCD_voidInit+0x11e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    14b8:	6f 81       	ldd	r22, Y+7	; 0x07
    14ba:	78 85       	ldd	r23, Y+8	; 0x08
    14bc:	89 85       	ldd	r24, Y+9	; 0x09
    14be:	9a 85       	ldd	r25, Y+10	; 0x0a
    14c0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    14c4:	dc 01       	movw	r26, r24
    14c6:	cb 01       	movw	r24, r22
    14c8:	9e 83       	std	Y+6, r25	; 0x06
    14ca:	8d 83       	std	Y+5, r24	; 0x05
    14cc:	8d 81       	ldd	r24, Y+5	; 0x05
    14ce:	9e 81       	ldd	r25, Y+6	; 0x06
    14d0:	9a 83       	std	Y+2, r25	; 0x02
    14d2:	89 83       	std	Y+1, r24	; 0x01
    14d4:	89 81       	ldd	r24, Y+1	; 0x01
    14d6:	9a 81       	ldd	r25, Y+2	; 0x02
    14d8:	01 97       	sbiw	r24, 0x01	; 1
    14da:	f1 f7       	brne	.-4      	; 0x14d8 <LCD_voidInit+0x116>
    14dc:	9a 83       	std	Y+2, r25	; 0x02
    14de:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(40);
	/*In 8 bit initialization (data sheet) we have to send commands of 0b0011NFxx(Ma4ro7a fel kashkol)
	 *N:Number of lines, 0:for 1 line, 1:for two lines
	 *F:Font size, 0:for 5*8 ,1:for 5*11
	 *x:Dont care (0 or 1 doesnt matter)*/
	LCD_voidSendCommand(0b00111000);
    14e0:	88 e3       	ldi	r24, 0x38	; 56
    14e2:	0e 94 a5 08 	call	0x114a	; 0x114a <LCD_voidSendCommand>
	/*Initialize display on-off
	 *D:display 0:disable 1: enable
	 *C:cursor 0: disable 1: enable
	 *B: blinking cursor : 0: fixed 1: blinking  */
	LCD_voidSendCommand(0b00001100);
    14e6:	8c e0       	ldi	r24, 0x0C	; 12
    14e8:	0e 94 a5 08 	call	0x114a	; 0x114a <LCD_voidSendCommand>
	/*To clear display(tenadaf ale etkatab 2abl keda)*/
	LCD_voidSendCommand(0b00000001);
    14ec:	81 e0       	ldi	r24, 0x01	; 1
    14ee:	0e 94 a5 08 	call	0x114a	; 0x114a <LCD_voidSendCommand>

	/*to clear display*/
	LCD_voidSendCommand(0b00000000);
	LCD_voidSendCommand(0b00010000);
#endif
}
    14f2:	2e 96       	adiw	r28, 0x0e	; 14
    14f4:	0f b6       	in	r0, 0x3f	; 63
    14f6:	f8 94       	cli
    14f8:	de bf       	out	0x3e, r29	; 62
    14fa:	0f be       	out	0x3f, r0	; 63
    14fc:	cd bf       	out	0x3d, r28	; 61
    14fe:	cf 91       	pop	r28
    1500:	df 91       	pop	r29
    1502:	08 95       	ret

00001504 <LCD_voidPosition>:
void LCD_voidPosition(u8 Copy_u8RowPos,u8 Copy_u8ColPos){
    1504:	df 93       	push	r29
    1506:	cf 93       	push	r28
    1508:	00 d0       	rcall	.+0      	; 0x150a <LCD_voidPosition+0x6>
    150a:	0f 92       	push	r0
    150c:	cd b7       	in	r28, 0x3d	; 61
    150e:	de b7       	in	r29, 0x3e	; 62
    1510:	8a 83       	std	Y+2, r24	; 0x02
    1512:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8Address;
	/*Setting the address location if the user wants to set the posion in the first row*/
	if(Copy_u8RowPos==0){
    1514:	8a 81       	ldd	r24, Y+2	; 0x02
    1516:	88 23       	and	r24, r24
    1518:	19 f4       	brne	.+6      	; 0x1520 <LCD_voidPosition+0x1c>
		Local_u8Address=Copy_u8ColPos;
    151a:	8b 81       	ldd	r24, Y+3	; 0x03
    151c:	89 83       	std	Y+1, r24	; 0x01
    151e:	06 c0       	rjmp	.+12     	; 0x152c <LCD_voidPosition+0x28>

	}
	/*Setting the address location if the user wants to set the posion in the second row*/
	else if(Copy_u8RowPos==1){
    1520:	8a 81       	ldd	r24, Y+2	; 0x02
    1522:	81 30       	cpi	r24, 0x01	; 1
    1524:	19 f4       	brne	.+6      	; 0x152c <LCD_voidPosition+0x28>
		Local_u8Address=Copy_u8ColPos+0x40;
    1526:	8b 81       	ldd	r24, Y+3	; 0x03
    1528:	80 5c       	subi	r24, 0xC0	; 192
    152a:	89 83       	std	Y+1, r24	; 0x01
	}
	/*ana keda 3rf al location na2es ab3to lel LCD ,mawgoda fel datasheet ezay ab3t al address lel DDRAM*/
	//ma4o7a fel ka4kol
	LCD_voidSendCommand(Local_u8Address+128);
    152c:	89 81       	ldd	r24, Y+1	; 0x01
    152e:	80 58       	subi	r24, 0x80	; 128
    1530:	0e 94 a5 08 	call	0x114a	; 0x114a <LCD_voidSendCommand>
}
    1534:	0f 90       	pop	r0
    1536:	0f 90       	pop	r0
    1538:	0f 90       	pop	r0
    153a:	cf 91       	pop	r28
    153c:	df 91       	pop	r29
    153e:	08 95       	ret

00001540 <LCD_voidSendString>:



/*String is an array of charachters, and the last charachter is (/0)
 */
void LCD_voidSendString(char*Copy_pcString){
    1540:	df 93       	push	r29
    1542:	cf 93       	push	r28
    1544:	00 d0       	rcall	.+0      	; 0x1546 <LCD_voidSendString+0x6>
    1546:	0f 92       	push	r0
    1548:	cd b7       	in	r28, 0x3d	; 61
    154a:	de b7       	in	r29, 0x3e	; 62
    154c:	9b 83       	std	Y+3, r25	; 0x03
    154e:	8a 83       	std	Y+2, r24	; 0x02
    1550:	0e c0       	rjmp	.+28     	; 0x156e <LCD_voidSendString+0x2e>
	u8 Local_u8Counter;
	while(Copy_pcString[Local_u8Counter]!='\0')
	{
		LCD_voidSendCharacter(Copy_pcString[Local_u8Counter]);
    1552:	89 81       	ldd	r24, Y+1	; 0x01
    1554:	28 2f       	mov	r18, r24
    1556:	30 e0       	ldi	r19, 0x00	; 0
    1558:	8a 81       	ldd	r24, Y+2	; 0x02
    155a:	9b 81       	ldd	r25, Y+3	; 0x03
    155c:	fc 01       	movw	r30, r24
    155e:	e2 0f       	add	r30, r18
    1560:	f3 1f       	adc	r31, r19
    1562:	80 81       	ld	r24, Z
    1564:	0e 94 43 09 	call	0x1286	; 0x1286 <LCD_voidSendCharacter>
		Local_u8Counter++;
    1568:	89 81       	ldd	r24, Y+1	; 0x01
    156a:	8f 5f       	subi	r24, 0xFF	; 255
    156c:	89 83       	std	Y+1, r24	; 0x01

/*String is an array of charachters, and the last charachter is (/0)
 */
void LCD_voidSendString(char*Copy_pcString){
	u8 Local_u8Counter;
	while(Copy_pcString[Local_u8Counter]!='\0')
    156e:	89 81       	ldd	r24, Y+1	; 0x01
    1570:	28 2f       	mov	r18, r24
    1572:	30 e0       	ldi	r19, 0x00	; 0
    1574:	8a 81       	ldd	r24, Y+2	; 0x02
    1576:	9b 81       	ldd	r25, Y+3	; 0x03
    1578:	fc 01       	movw	r30, r24
    157a:	e2 0f       	add	r30, r18
    157c:	f3 1f       	adc	r31, r19
    157e:	80 81       	ld	r24, Z
    1580:	88 23       	and	r24, r24
    1582:	39 f7       	brne	.-50     	; 0x1552 <LCD_voidSendString+0x12>
	{
		LCD_voidSendCharacter(Copy_pcString[Local_u8Counter]);
		Local_u8Counter++;
	}

}
    1584:	0f 90       	pop	r0
    1586:	0f 90       	pop	r0
    1588:	0f 90       	pop	r0
    158a:	cf 91       	pop	r28
    158c:	df 91       	pop	r29
    158e:	08 95       	ret

00001590 <LCD_voidDrawSpecialCharachter>:


void LCD_voidDrawSpecialCharachter(u8*Copy_pu8Pattern,u8 Copy_u8LocationNum,u8 Copy_u8RowNum,u8 Copy_u8ColNum)
{
    1590:	df 93       	push	r29
    1592:	cf 93       	push	r28
    1594:	cd b7       	in	r28, 0x3d	; 61
    1596:	de b7       	in	r29, 0x3e	; 62
    1598:	27 97       	sbiw	r28, 0x07	; 7
    159a:	0f b6       	in	r0, 0x3f	; 63
    159c:	f8 94       	cli
    159e:	de bf       	out	0x3e, r29	; 62
    15a0:	0f be       	out	0x3f, r0	; 63
    15a2:	cd bf       	out	0x3d, r28	; 61
    15a4:	9c 83       	std	Y+4, r25	; 0x04
    15a6:	8b 83       	std	Y+3, r24	; 0x03
    15a8:	6d 83       	std	Y+5, r22	; 0x05
    15aa:	4e 83       	std	Y+6, r20	; 0x06
    15ac:	2f 83       	std	Y+7, r18	; 0x07
	/*Accessing the CGRAM address*/
	u8 Local_u8CGRAMAddress,Local_u8Counter;
	Local_u8CGRAMAddress=Copy_u8LocationNum*8;//ma4ro7a fel ka4kol
    15ae:	8d 81       	ldd	r24, Y+5	; 0x05
    15b0:	88 2f       	mov	r24, r24
    15b2:	90 e0       	ldi	r25, 0x00	; 0
    15b4:	88 0f       	add	r24, r24
    15b6:	99 1f       	adc	r25, r25
    15b8:	88 0f       	add	r24, r24
    15ba:	99 1f       	adc	r25, r25
    15bc:	88 0f       	add	r24, r24
    15be:	99 1f       	adc	r25, r25
    15c0:	8a 83       	std	Y+2, r24	; 0x02
	/*Accesing CGRAM of lcd by command 0b01xxxxxx*/
	LCD_voidSendCommand(Local_u8CGRAMAddress+64);
    15c2:	8a 81       	ldd	r24, Y+2	; 0x02
    15c4:	80 5c       	subi	r24, 0xC0	; 192
    15c6:	0e 94 a5 08 	call	0x114a	; 0x114a <LCD_voidSendCommand>
	/*Write the pattern on CGRAM*/
	/*zy makont ba3mel fel string ha3mel hena , bas al fekra ane hawa2f al loop 3nd (((8))) ale howa max bytes in a location in the CGRAM fal user masaln e5tar location 0 fa2a5ro feh 8 charachters ale homa 8 bytes*/
	for(Local_u8Counter=0;Local_u8Counter<8;Local_u8Counter++)
    15ca:	19 82       	std	Y+1, r1	; 0x01
    15cc:	0e c0       	rjmp	.+28     	; 0x15ea <LCD_voidDrawSpecialCharachter+0x5a>
	{
		LCD_voidSendCharacter(Copy_pu8Pattern[Local_u8Counter]);
    15ce:	89 81       	ldd	r24, Y+1	; 0x01
    15d0:	28 2f       	mov	r18, r24
    15d2:	30 e0       	ldi	r19, 0x00	; 0
    15d4:	8b 81       	ldd	r24, Y+3	; 0x03
    15d6:	9c 81       	ldd	r25, Y+4	; 0x04
    15d8:	fc 01       	movw	r30, r24
    15da:	e2 0f       	add	r30, r18
    15dc:	f3 1f       	adc	r31, r19
    15de:	80 81       	ld	r24, Z
    15e0:	0e 94 43 09 	call	0x1286	; 0x1286 <LCD_voidSendCharacter>
	Local_u8CGRAMAddress=Copy_u8LocationNum*8;//ma4ro7a fel ka4kol
	/*Accesing CGRAM of lcd by command 0b01xxxxxx*/
	LCD_voidSendCommand(Local_u8CGRAMAddress+64);
	/*Write the pattern on CGRAM*/
	/*zy makont ba3mel fel string ha3mel hena , bas al fekra ane hawa2f al loop 3nd (((8))) ale howa max bytes in a location in the CGRAM fal user masaln e5tar location 0 fa2a5ro feh 8 charachters ale homa 8 bytes*/
	for(Local_u8Counter=0;Local_u8Counter<8;Local_u8Counter++)
    15e4:	89 81       	ldd	r24, Y+1	; 0x01
    15e6:	8f 5f       	subi	r24, 0xFF	; 255
    15e8:	89 83       	std	Y+1, r24	; 0x01
    15ea:	89 81       	ldd	r24, Y+1	; 0x01
    15ec:	88 30       	cpi	r24, 0x08	; 8
    15ee:	78 f3       	brcs	.-34     	; 0x15ce <LCD_voidDrawSpecialCharachter+0x3e>
	{
		LCD_voidSendCharacter(Copy_pu8Pattern[Local_u8Counter]);
	}
	/*Keda e7na 7atena al pattern fe location mo3yn fel CGRAM, fa na2esna bas neb3at al pattern lel DDRAM 34an n7oto fel LCD */
	/*kona fo2 3malna command 34an ne access al CGRAM 34an ne access al DDRAM lazem command tany,,wel set position feha asln al command dah*/
	LCD_voidPosition(Copy_u8RowNum,Copy_u8ColNum);
    15f0:	8e 81       	ldd	r24, Y+6	; 0x06
    15f2:	6f 81       	ldd	r22, Y+7	; 0x07
    15f4:	0e 94 82 0a 	call	0x1504	; 0x1504 <LCD_voidPosition>
	LCD_voidSendCharacter(Copy_u8LocationNum);
    15f8:	8d 81       	ldd	r24, Y+5	; 0x05
    15fa:	0e 94 43 09 	call	0x1286	; 0x1286 <LCD_voidSendCharacter>
}
    15fe:	27 96       	adiw	r28, 0x07	; 7
    1600:	0f b6       	in	r0, 0x3f	; 63
    1602:	f8 94       	cli
    1604:	de bf       	out	0x3e, r29	; 62
    1606:	0f be       	out	0x3f, r0	; 63
    1608:	cd bf       	out	0x3d, r28	; 61
    160a:	cf 91       	pop	r28
    160c:	df 91       	pop	r29
    160e:	08 95       	ret

00001610 <LCD_voidWriteNum>:



void LCD_voidWriteNum(u32 copy_u32Number)
{
    1610:	df 93       	push	r29
    1612:	cf 93       	push	r28
    1614:	cd b7       	in	r28, 0x3d	; 61
    1616:	de b7       	in	r29, 0x3e	; 62
    1618:	29 97       	sbiw	r28, 0x09	; 9
    161a:	0f b6       	in	r0, 0x3f	; 63
    161c:	f8 94       	cli
    161e:	de bf       	out	0x3e, r29	; 62
    1620:	0f be       	out	0x3f, r0	; 63
    1622:	cd bf       	out	0x3d, r28	; 61
    1624:	6e 83       	std	Y+6, r22	; 0x06
    1626:	7f 83       	std	Y+7, r23	; 0x07
    1628:	88 87       	std	Y+8, r24	; 0x08
    162a:	99 87       	std	Y+9, r25	; 0x09
	u8 FirstDigit=0;
    162c:	1d 82       	std	Y+5, r1	; 0x05
	for(u32 i=1000000000;i>0;i/=10)
    162e:	80 e0       	ldi	r24, 0x00	; 0
    1630:	9a ec       	ldi	r25, 0xCA	; 202
    1632:	aa e9       	ldi	r26, 0x9A	; 154
    1634:	bb e3       	ldi	r27, 0x3B	; 59
    1636:	89 83       	std	Y+1, r24	; 0x01
    1638:	9a 83       	std	Y+2, r25	; 0x02
    163a:	ab 83       	std	Y+3, r26	; 0x03
    163c:	bc 83       	std	Y+4, r27	; 0x04
    163e:	50 c0       	rjmp	.+160    	; 0x16e0 <LCD_voidWriteNum+0xd0>
	{

		if(copy_u32Number/i>0)
    1640:	8e 81       	ldd	r24, Y+6	; 0x06
    1642:	9f 81       	ldd	r25, Y+7	; 0x07
    1644:	a8 85       	ldd	r26, Y+8	; 0x08
    1646:	b9 85       	ldd	r27, Y+9	; 0x09
    1648:	29 81       	ldd	r18, Y+1	; 0x01
    164a:	3a 81       	ldd	r19, Y+2	; 0x02
    164c:	4b 81       	ldd	r20, Y+3	; 0x03
    164e:	5c 81       	ldd	r21, Y+4	; 0x04
    1650:	bc 01       	movw	r22, r24
    1652:	cd 01       	movw	r24, r26
    1654:	0e 94 9a 14 	call	0x2934	; 0x2934 <__udivmodsi4>
    1658:	da 01       	movw	r26, r20
    165a:	c9 01       	movw	r24, r18
    165c:	00 97       	sbiw	r24, 0x00	; 0
    165e:	a1 05       	cpc	r26, r1
    1660:	b1 05       	cpc	r27, r1
    1662:	31 f1       	breq	.+76     	; 0x16b0 <LCD_voidWriteNum+0xa0>
		{
			LCD_voidSendCharacter(copy_u32Number/i+48);
    1664:	8e 81       	ldd	r24, Y+6	; 0x06
    1666:	9f 81       	ldd	r25, Y+7	; 0x07
    1668:	a8 85       	ldd	r26, Y+8	; 0x08
    166a:	b9 85       	ldd	r27, Y+9	; 0x09
    166c:	29 81       	ldd	r18, Y+1	; 0x01
    166e:	3a 81       	ldd	r19, Y+2	; 0x02
    1670:	4b 81       	ldd	r20, Y+3	; 0x03
    1672:	5c 81       	ldd	r21, Y+4	; 0x04
    1674:	bc 01       	movw	r22, r24
    1676:	cd 01       	movw	r24, r26
    1678:	0e 94 9a 14 	call	0x2934	; 0x2934 <__udivmodsi4>
    167c:	da 01       	movw	r26, r20
    167e:	c9 01       	movw	r24, r18
    1680:	80 5d       	subi	r24, 0xD0	; 208
    1682:	0e 94 43 09 	call	0x1286	; 0x1286 <LCD_voidSendCharacter>
			copy_u32Number%=i;
    1686:	8e 81       	ldd	r24, Y+6	; 0x06
    1688:	9f 81       	ldd	r25, Y+7	; 0x07
    168a:	a8 85       	ldd	r26, Y+8	; 0x08
    168c:	b9 85       	ldd	r27, Y+9	; 0x09
    168e:	29 81       	ldd	r18, Y+1	; 0x01
    1690:	3a 81       	ldd	r19, Y+2	; 0x02
    1692:	4b 81       	ldd	r20, Y+3	; 0x03
    1694:	5c 81       	ldd	r21, Y+4	; 0x04
    1696:	bc 01       	movw	r22, r24
    1698:	cd 01       	movw	r24, r26
    169a:	0e 94 9a 14 	call	0x2934	; 0x2934 <__udivmodsi4>
    169e:	dc 01       	movw	r26, r24
    16a0:	cb 01       	movw	r24, r22
    16a2:	8e 83       	std	Y+6, r24	; 0x06
    16a4:	9f 83       	std	Y+7, r25	; 0x07
    16a6:	a8 87       	std	Y+8, r26	; 0x08
    16a8:	b9 87       	std	Y+9, r27	; 0x09
			FirstDigit=1;
    16aa:	81 e0       	ldi	r24, 0x01	; 1
    16ac:	8d 83       	std	Y+5, r24	; 0x05
    16ae:	06 c0       	rjmp	.+12     	; 0x16bc <LCD_voidWriteNum+0xac>
		}
		// print 0 after the first digit
		else if(FirstDigit==1)
    16b0:	8d 81       	ldd	r24, Y+5	; 0x05
    16b2:	81 30       	cpi	r24, 0x01	; 1
    16b4:	19 f4       	brne	.+6      	; 0x16bc <LCD_voidWriteNum+0xac>
		{
			LCD_voidSendCharacter(48);
    16b6:	80 e3       	ldi	r24, 0x30	; 48
    16b8:	0e 94 43 09 	call	0x1286	; 0x1286 <LCD_voidSendCharacter>


void LCD_voidWriteNum(u32 copy_u32Number)
{
	u8 FirstDigit=0;
	for(u32 i=1000000000;i>0;i/=10)
    16bc:	89 81       	ldd	r24, Y+1	; 0x01
    16be:	9a 81       	ldd	r25, Y+2	; 0x02
    16c0:	ab 81       	ldd	r26, Y+3	; 0x03
    16c2:	bc 81       	ldd	r27, Y+4	; 0x04
    16c4:	2a e0       	ldi	r18, 0x0A	; 10
    16c6:	30 e0       	ldi	r19, 0x00	; 0
    16c8:	40 e0       	ldi	r20, 0x00	; 0
    16ca:	50 e0       	ldi	r21, 0x00	; 0
    16cc:	bc 01       	movw	r22, r24
    16ce:	cd 01       	movw	r24, r26
    16d0:	0e 94 9a 14 	call	0x2934	; 0x2934 <__udivmodsi4>
    16d4:	da 01       	movw	r26, r20
    16d6:	c9 01       	movw	r24, r18
    16d8:	89 83       	std	Y+1, r24	; 0x01
    16da:	9a 83       	std	Y+2, r25	; 0x02
    16dc:	ab 83       	std	Y+3, r26	; 0x03
    16de:	bc 83       	std	Y+4, r27	; 0x04
    16e0:	89 81       	ldd	r24, Y+1	; 0x01
    16e2:	9a 81       	ldd	r25, Y+2	; 0x02
    16e4:	ab 81       	ldd	r26, Y+3	; 0x03
    16e6:	bc 81       	ldd	r27, Y+4	; 0x04
    16e8:	00 97       	sbiw	r24, 0x00	; 0
    16ea:	a1 05       	cpc	r26, r1
    16ec:	b1 05       	cpc	r27, r1
    16ee:	09 f0       	breq	.+2      	; 0x16f2 <LCD_voidWriteNum+0xe2>
    16f0:	a7 cf       	rjmp	.-178    	; 0x1640 <LCD_voidWriteNum+0x30>
		else if(FirstDigit==1)
		{
			LCD_voidSendCharacter(48);
		}
	}
}
    16f2:	29 96       	adiw	r28, 0x09	; 9
    16f4:	0f b6       	in	r0, 0x3f	; 63
    16f6:	f8 94       	cli
    16f8:	de bf       	out	0x3e, r29	; 62
    16fa:	0f be       	out	0x3f, r0	; 63
    16fc:	cd bf       	out	0x3d, r28	; 61
    16fe:	cf 91       	pop	r28
    1700:	df 91       	pop	r29
    1702:	08 95       	ret

00001704 <main>:
#include"STD_TYPES.h"
#include"BIT_MATH.h"
#include"DIO_interface.h"
#include"LCD_interface.h"
#include<avr/delay.h>
void main(){
    1704:	0f 93       	push	r16
    1706:	1f 93       	push	r17
    1708:	df 93       	push	r29
    170a:	cf 93       	push	r28
    170c:	cd b7       	in	r28, 0x3d	; 61
    170e:	de b7       	in	r29, 0x3e	; 62
    1710:	c7 5f       	subi	r28, 0xF7	; 247
    1712:	d0 40       	sbci	r29, 0x00	; 0
    1714:	0f b6       	in	r0, 0x3f	; 63
    1716:	f8 94       	cli
    1718:	de bf       	out	0x3e, r29	; 62
    171a:	0f be       	out	0x3f, r0	; 63
    171c:	cd bf       	out	0x3d, r28	; 61

	LCD_voidInit();
    171e:	0e 94 e1 09 	call	0x13c2	; 0x13c2 <LCD_voidInit>
				0b00010000,
				0b00010000,
				0b00010000,
				0b00010000,
				0b00010000,
		};
    1722:	ce 01       	movw	r24, r28
    1724:	87 55       	subi	r24, 0x57	; 87
    1726:	9f 4f       	sbci	r25, 0xFF	; 255
    1728:	c7 51       	subi	r28, 0x17	; 23
    172a:	df 4f       	sbci	r29, 0xFF	; 255
    172c:	99 83       	std	Y+1, r25	; 0x01
    172e:	88 83       	st	Y, r24
    1730:	c9 5e       	subi	r28, 0xE9	; 233
    1732:	d0 40       	sbci	r29, 0x00	; 0
    1734:	8b e9       	ldi	r24, 0x9B	; 155
    1736:	90 e0       	ldi	r25, 0x00	; 0
    1738:	c5 51       	subi	r28, 0x15	; 21
    173a:	df 4f       	sbci	r29, 0xFF	; 255
    173c:	99 83       	std	Y+1, r25	; 0x01
    173e:	88 83       	st	Y, r24
    1740:	cb 5e       	subi	r28, 0xEB	; 235
    1742:	d0 40       	sbci	r29, 0x00	; 0
    1744:	98 e0       	ldi	r25, 0x08	; 8
    1746:	c3 51       	subi	r28, 0x13	; 19
    1748:	df 4f       	sbci	r29, 0xFF	; 255
    174a:	98 83       	st	Y, r25
    174c:	cd 5e       	subi	r28, 0xED	; 237
    174e:	d0 40       	sbci	r29, 0x00	; 0
    1750:	c5 51       	subi	r28, 0x15	; 21
    1752:	df 4f       	sbci	r29, 0xFF	; 255
    1754:	a8 81       	ld	r26, Y
    1756:	b9 81       	ldd	r27, Y+1	; 0x01
    1758:	cb 5e       	subi	r28, 0xEB	; 235
    175a:	d0 40       	sbci	r29, 0x00	; 0
    175c:	0c 90       	ld	r0, X
    175e:	c5 51       	subi	r28, 0x15	; 21
    1760:	df 4f       	sbci	r29, 0xFF	; 255
    1762:	e8 81       	ld	r30, Y
    1764:	f9 81       	ldd	r31, Y+1	; 0x01
    1766:	cb 5e       	subi	r28, 0xEB	; 235
    1768:	d0 40       	sbci	r29, 0x00	; 0
    176a:	31 96       	adiw	r30, 0x01	; 1
    176c:	c5 51       	subi	r28, 0x15	; 21
    176e:	df 4f       	sbci	r29, 0xFF	; 255
    1770:	f9 83       	std	Y+1, r31	; 0x01
    1772:	e8 83       	st	Y, r30
    1774:	cb 5e       	subi	r28, 0xEB	; 235
    1776:	d0 40       	sbci	r29, 0x00	; 0
    1778:	c7 51       	subi	r28, 0x17	; 23
    177a:	df 4f       	sbci	r29, 0xFF	; 255
    177c:	a8 81       	ld	r26, Y
    177e:	b9 81       	ldd	r27, Y+1	; 0x01
    1780:	c9 5e       	subi	r28, 0xE9	; 233
    1782:	d0 40       	sbci	r29, 0x00	; 0
    1784:	0c 92       	st	X, r0
    1786:	c7 51       	subi	r28, 0x17	; 23
    1788:	df 4f       	sbci	r29, 0xFF	; 255
    178a:	e8 81       	ld	r30, Y
    178c:	f9 81       	ldd	r31, Y+1	; 0x01
    178e:	c9 5e       	subi	r28, 0xE9	; 233
    1790:	d0 40       	sbci	r29, 0x00	; 0
    1792:	31 96       	adiw	r30, 0x01	; 1
    1794:	c7 51       	subi	r28, 0x17	; 23
    1796:	df 4f       	sbci	r29, 0xFF	; 255
    1798:	f9 83       	std	Y+1, r31	; 0x01
    179a:	e8 83       	st	Y, r30
    179c:	c9 5e       	subi	r28, 0xE9	; 233
    179e:	d0 40       	sbci	r29, 0x00	; 0
    17a0:	c3 51       	subi	r28, 0x13	; 19
    17a2:	df 4f       	sbci	r29, 0xFF	; 255
    17a4:	f8 81       	ld	r31, Y
    17a6:	cd 5e       	subi	r28, 0xED	; 237
    17a8:	d0 40       	sbci	r29, 0x00	; 0
    17aa:	f1 50       	subi	r31, 0x01	; 1
    17ac:	c3 51       	subi	r28, 0x13	; 19
    17ae:	df 4f       	sbci	r29, 0xFF	; 255
    17b0:	f8 83       	st	Y, r31
    17b2:	cd 5e       	subi	r28, 0xED	; 237
    17b4:	d0 40       	sbci	r29, 0x00	; 0
    17b6:	c3 51       	subi	r28, 0x13	; 19
    17b8:	df 4f       	sbci	r29, 0xFF	; 255
    17ba:	88 81       	ld	r24, Y
    17bc:	cd 5e       	subi	r28, 0xED	; 237
    17be:	d0 40       	sbci	r29, 0x00	; 0
    17c0:	88 23       	and	r24, r24
    17c2:	31 f6       	brne	.-116    	; 0x1750 <main+0x4c>
			0b00000100,
			0b00001110,
			0b00000100,
			0b00001010,
			0b00010001,
	};
    17c4:	ce 01       	movw	r24, r28
    17c6:	8f 54       	subi	r24, 0x4F	; 79
    17c8:	9f 4f       	sbci	r25, 0xFF	; 255
    17ca:	c2 51       	subi	r28, 0x12	; 18
    17cc:	df 4f       	sbci	r29, 0xFF	; 255
    17ce:	99 83       	std	Y+1, r25	; 0x01
    17d0:	88 83       	st	Y, r24
    17d2:	ce 5e       	subi	r28, 0xEE	; 238
    17d4:	d0 40       	sbci	r29, 0x00	; 0
    17d6:	a3 e9       	ldi	r26, 0x93	; 147
    17d8:	b0 e0       	ldi	r27, 0x00	; 0
    17da:	c0 51       	subi	r28, 0x10	; 16
    17dc:	df 4f       	sbci	r29, 0xFF	; 255
    17de:	b9 83       	std	Y+1, r27	; 0x01
    17e0:	a8 83       	st	Y, r26
    17e2:	c0 5f       	subi	r28, 0xF0	; 240
    17e4:	d0 40       	sbci	r29, 0x00	; 0
    17e6:	b8 e0       	ldi	r27, 0x08	; 8
    17e8:	ce 50       	subi	r28, 0x0E	; 14
    17ea:	df 4f       	sbci	r29, 0xFF	; 255
    17ec:	b8 83       	st	Y, r27
    17ee:	c2 5f       	subi	r28, 0xF2	; 242
    17f0:	d0 40       	sbci	r29, 0x00	; 0
    17f2:	c0 51       	subi	r28, 0x10	; 16
    17f4:	df 4f       	sbci	r29, 0xFF	; 255
    17f6:	e8 81       	ld	r30, Y
    17f8:	f9 81       	ldd	r31, Y+1	; 0x01
    17fa:	c0 5f       	subi	r28, 0xF0	; 240
    17fc:	d0 40       	sbci	r29, 0x00	; 0
    17fe:	00 80       	ld	r0, Z
    1800:	c0 51       	subi	r28, 0x10	; 16
    1802:	df 4f       	sbci	r29, 0xFF	; 255
    1804:	88 81       	ld	r24, Y
    1806:	99 81       	ldd	r25, Y+1	; 0x01
    1808:	c0 5f       	subi	r28, 0xF0	; 240
    180a:	d0 40       	sbci	r29, 0x00	; 0
    180c:	01 96       	adiw	r24, 0x01	; 1
    180e:	c0 51       	subi	r28, 0x10	; 16
    1810:	df 4f       	sbci	r29, 0xFF	; 255
    1812:	99 83       	std	Y+1, r25	; 0x01
    1814:	88 83       	st	Y, r24
    1816:	c0 5f       	subi	r28, 0xF0	; 240
    1818:	d0 40       	sbci	r29, 0x00	; 0
    181a:	c2 51       	subi	r28, 0x12	; 18
    181c:	df 4f       	sbci	r29, 0xFF	; 255
    181e:	a8 81       	ld	r26, Y
    1820:	b9 81       	ldd	r27, Y+1	; 0x01
    1822:	ce 5e       	subi	r28, 0xEE	; 238
    1824:	d0 40       	sbci	r29, 0x00	; 0
    1826:	0c 92       	st	X, r0
    1828:	c2 51       	subi	r28, 0x12	; 18
    182a:	df 4f       	sbci	r29, 0xFF	; 255
    182c:	e8 81       	ld	r30, Y
    182e:	f9 81       	ldd	r31, Y+1	; 0x01
    1830:	ce 5e       	subi	r28, 0xEE	; 238
    1832:	d0 40       	sbci	r29, 0x00	; 0
    1834:	31 96       	adiw	r30, 0x01	; 1
    1836:	c2 51       	subi	r28, 0x12	; 18
    1838:	df 4f       	sbci	r29, 0xFF	; 255
    183a:	f9 83       	std	Y+1, r31	; 0x01
    183c:	e8 83       	st	Y, r30
    183e:	ce 5e       	subi	r28, 0xEE	; 238
    1840:	d0 40       	sbci	r29, 0x00	; 0
    1842:	ce 50       	subi	r28, 0x0E	; 14
    1844:	df 4f       	sbci	r29, 0xFF	; 255
    1846:	f8 81       	ld	r31, Y
    1848:	c2 5f       	subi	r28, 0xF2	; 242
    184a:	d0 40       	sbci	r29, 0x00	; 0
    184c:	f1 50       	subi	r31, 0x01	; 1
    184e:	ce 50       	subi	r28, 0x0E	; 14
    1850:	df 4f       	sbci	r29, 0xFF	; 255
    1852:	f8 83       	st	Y, r31
    1854:	c2 5f       	subi	r28, 0xF2	; 242
    1856:	d0 40       	sbci	r29, 0x00	; 0
    1858:	ce 50       	subi	r28, 0x0E	; 14
    185a:	df 4f       	sbci	r29, 0xFF	; 255
    185c:	88 81       	ld	r24, Y
    185e:	c2 5f       	subi	r28, 0xF2	; 242
    1860:	d0 40       	sbci	r29, 0x00	; 0
    1862:	88 23       	and	r24, r24
    1864:	31 f6       	brne	.-116    	; 0x17f2 <main+0xee>
	LCD_voidPosition(0,0);
    1866:	80 e0       	ldi	r24, 0x00	; 0
    1868:	60 e0       	ldi	r22, 0x00	; 0
    186a:	0e 94 82 0a 	call	0x1504	; 0x1504 <LCD_voidPosition>
	LCD_voidSendString("Hi iam bendo");
    186e:	80 e6       	ldi	r24, 0x60	; 96
    1870:	90 e0       	ldi	r25, 0x00	; 0
    1872:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_voidSendString>
	LCD_voidDrawSpecialCharachter(Bendo_3ade,0,0,14);
    1876:	ce 01       	movw	r24, r28
    1878:	8f 54       	subi	r24, 0x4F	; 79
    187a:	9f 4f       	sbci	r25, 0xFF	; 255
    187c:	60 e0       	ldi	r22, 0x00	; 0
    187e:	40 e0       	ldi	r20, 0x00	; 0
    1880:	2e e0       	ldi	r18, 0x0E	; 14
    1882:	0e 94 c8 0a 	call	0x1590	; 0x1590 <LCD_voidDrawSpecialCharachter>
    1886:	fe 01       	movw	r30, r28
    1888:	eb 55       	subi	r30, 0x5B	; 91
    188a:	ff 4f       	sbci	r31, 0xFF	; 255
    188c:	80 e0       	ldi	r24, 0x00	; 0
    188e:	90 e8       	ldi	r25, 0x80	; 128
    1890:	ab e3       	ldi	r26, 0x3B	; 59
    1892:	b5 e4       	ldi	r27, 0x45	; 69
    1894:	80 83       	st	Z, r24
    1896:	91 83       	std	Z+1, r25	; 0x01
    1898:	a2 83       	std	Z+2, r26	; 0x02
    189a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    189c:	8e 01       	movw	r16, r28
    189e:	0f 55       	subi	r16, 0x5F	; 95
    18a0:	1f 4f       	sbci	r17, 0xFF	; 255
    18a2:	fe 01       	movw	r30, r28
    18a4:	eb 55       	subi	r30, 0x5B	; 91
    18a6:	ff 4f       	sbci	r31, 0xFF	; 255
    18a8:	60 81       	ld	r22, Z
    18aa:	71 81       	ldd	r23, Z+1	; 0x01
    18ac:	82 81       	ldd	r24, Z+2	; 0x02
    18ae:	93 81       	ldd	r25, Z+3	; 0x03
    18b0:	20 e0       	ldi	r18, 0x00	; 0
    18b2:	30 e0       	ldi	r19, 0x00	; 0
    18b4:	4a ef       	ldi	r20, 0xFA	; 250
    18b6:	54 e4       	ldi	r21, 0x44	; 68
    18b8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    18bc:	dc 01       	movw	r26, r24
    18be:	cb 01       	movw	r24, r22
    18c0:	f8 01       	movw	r30, r16
    18c2:	80 83       	st	Z, r24
    18c4:	91 83       	std	Z+1, r25	; 0x01
    18c6:	a2 83       	std	Z+2, r26	; 0x02
    18c8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    18ca:	fe 01       	movw	r30, r28
    18cc:	ef 55       	subi	r30, 0x5F	; 95
    18ce:	ff 4f       	sbci	r31, 0xFF	; 255
    18d0:	60 81       	ld	r22, Z
    18d2:	71 81       	ldd	r23, Z+1	; 0x01
    18d4:	82 81       	ldd	r24, Z+2	; 0x02
    18d6:	93 81       	ldd	r25, Z+3	; 0x03
    18d8:	20 e0       	ldi	r18, 0x00	; 0
    18da:	30 e0       	ldi	r19, 0x00	; 0
    18dc:	40 e8       	ldi	r20, 0x80	; 128
    18de:	5f e3       	ldi	r21, 0x3F	; 63
    18e0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    18e4:	88 23       	and	r24, r24
    18e6:	44 f4       	brge	.+16     	; 0x18f8 <main+0x1f4>
		__ticks = 1;
    18e8:	fe 01       	movw	r30, r28
    18ea:	e1 56       	subi	r30, 0x61	; 97
    18ec:	ff 4f       	sbci	r31, 0xFF	; 255
    18ee:	81 e0       	ldi	r24, 0x01	; 1
    18f0:	90 e0       	ldi	r25, 0x00	; 0
    18f2:	91 83       	std	Z+1, r25	; 0x01
    18f4:	80 83       	st	Z, r24
    18f6:	64 c0       	rjmp	.+200    	; 0x19c0 <main+0x2bc>
	else if (__tmp > 65535)
    18f8:	fe 01       	movw	r30, r28
    18fa:	ef 55       	subi	r30, 0x5F	; 95
    18fc:	ff 4f       	sbci	r31, 0xFF	; 255
    18fe:	60 81       	ld	r22, Z
    1900:	71 81       	ldd	r23, Z+1	; 0x01
    1902:	82 81       	ldd	r24, Z+2	; 0x02
    1904:	93 81       	ldd	r25, Z+3	; 0x03
    1906:	20 e0       	ldi	r18, 0x00	; 0
    1908:	3f ef       	ldi	r19, 0xFF	; 255
    190a:	4f e7       	ldi	r20, 0x7F	; 127
    190c:	57 e4       	ldi	r21, 0x47	; 71
    190e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1912:	18 16       	cp	r1, r24
    1914:	0c f0       	brlt	.+2      	; 0x1918 <main+0x214>
    1916:	43 c0       	rjmp	.+134    	; 0x199e <main+0x29a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1918:	fe 01       	movw	r30, r28
    191a:	eb 55       	subi	r30, 0x5B	; 91
    191c:	ff 4f       	sbci	r31, 0xFF	; 255
    191e:	60 81       	ld	r22, Z
    1920:	71 81       	ldd	r23, Z+1	; 0x01
    1922:	82 81       	ldd	r24, Z+2	; 0x02
    1924:	93 81       	ldd	r25, Z+3	; 0x03
    1926:	20 e0       	ldi	r18, 0x00	; 0
    1928:	30 e0       	ldi	r19, 0x00	; 0
    192a:	40 e2       	ldi	r20, 0x20	; 32
    192c:	51 e4       	ldi	r21, 0x41	; 65
    192e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1932:	dc 01       	movw	r26, r24
    1934:	cb 01       	movw	r24, r22
    1936:	8e 01       	movw	r16, r28
    1938:	01 56       	subi	r16, 0x61	; 97
    193a:	1f 4f       	sbci	r17, 0xFF	; 255
    193c:	bc 01       	movw	r22, r24
    193e:	cd 01       	movw	r24, r26
    1940:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1944:	dc 01       	movw	r26, r24
    1946:	cb 01       	movw	r24, r22
    1948:	f8 01       	movw	r30, r16
    194a:	91 83       	std	Z+1, r25	; 0x01
    194c:	80 83       	st	Z, r24
    194e:	1f c0       	rjmp	.+62     	; 0x198e <main+0x28a>
    1950:	fe 01       	movw	r30, r28
    1952:	e3 56       	subi	r30, 0x63	; 99
    1954:	ff 4f       	sbci	r31, 0xFF	; 255
    1956:	88 ec       	ldi	r24, 0xC8	; 200
    1958:	90 e0       	ldi	r25, 0x00	; 0
    195a:	91 83       	std	Z+1, r25	; 0x01
    195c:	80 83       	st	Z, r24
    195e:	fe 01       	movw	r30, r28
    1960:	e3 56       	subi	r30, 0x63	; 99
    1962:	ff 4f       	sbci	r31, 0xFF	; 255
    1964:	80 81       	ld	r24, Z
    1966:	91 81       	ldd	r25, Z+1	; 0x01
    1968:	01 97       	sbiw	r24, 0x01	; 1
    196a:	f1 f7       	brne	.-4      	; 0x1968 <main+0x264>
    196c:	fe 01       	movw	r30, r28
    196e:	e3 56       	subi	r30, 0x63	; 99
    1970:	ff 4f       	sbci	r31, 0xFF	; 255
    1972:	91 83       	std	Z+1, r25	; 0x01
    1974:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1976:	de 01       	movw	r26, r28
    1978:	a1 56       	subi	r26, 0x61	; 97
    197a:	bf 4f       	sbci	r27, 0xFF	; 255
    197c:	fe 01       	movw	r30, r28
    197e:	e1 56       	subi	r30, 0x61	; 97
    1980:	ff 4f       	sbci	r31, 0xFF	; 255
    1982:	80 81       	ld	r24, Z
    1984:	91 81       	ldd	r25, Z+1	; 0x01
    1986:	01 97       	sbiw	r24, 0x01	; 1
    1988:	11 96       	adiw	r26, 0x01	; 1
    198a:	9c 93       	st	X, r25
    198c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    198e:	fe 01       	movw	r30, r28
    1990:	e1 56       	subi	r30, 0x61	; 97
    1992:	ff 4f       	sbci	r31, 0xFF	; 255
    1994:	80 81       	ld	r24, Z
    1996:	91 81       	ldd	r25, Z+1	; 0x01
    1998:	00 97       	sbiw	r24, 0x00	; 0
    199a:	d1 f6       	brne	.-76     	; 0x1950 <main+0x24c>
    199c:	27 c0       	rjmp	.+78     	; 0x19ec <main+0x2e8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    199e:	8e 01       	movw	r16, r28
    19a0:	01 56       	subi	r16, 0x61	; 97
    19a2:	1f 4f       	sbci	r17, 0xFF	; 255
    19a4:	fe 01       	movw	r30, r28
    19a6:	ef 55       	subi	r30, 0x5F	; 95
    19a8:	ff 4f       	sbci	r31, 0xFF	; 255
    19aa:	60 81       	ld	r22, Z
    19ac:	71 81       	ldd	r23, Z+1	; 0x01
    19ae:	82 81       	ldd	r24, Z+2	; 0x02
    19b0:	93 81       	ldd	r25, Z+3	; 0x03
    19b2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    19b6:	dc 01       	movw	r26, r24
    19b8:	cb 01       	movw	r24, r22
    19ba:	f8 01       	movw	r30, r16
    19bc:	91 83       	std	Z+1, r25	; 0x01
    19be:	80 83       	st	Z, r24
    19c0:	de 01       	movw	r26, r28
    19c2:	a5 56       	subi	r26, 0x65	; 101
    19c4:	bf 4f       	sbci	r27, 0xFF	; 255
    19c6:	fe 01       	movw	r30, r28
    19c8:	e1 56       	subi	r30, 0x61	; 97
    19ca:	ff 4f       	sbci	r31, 0xFF	; 255
    19cc:	80 81       	ld	r24, Z
    19ce:	91 81       	ldd	r25, Z+1	; 0x01
    19d0:	8d 93       	st	X+, r24
    19d2:	9c 93       	st	X, r25
    19d4:	fe 01       	movw	r30, r28
    19d6:	e5 56       	subi	r30, 0x65	; 101
    19d8:	ff 4f       	sbci	r31, 0xFF	; 255
    19da:	80 81       	ld	r24, Z
    19dc:	91 81       	ldd	r25, Z+1	; 0x01
    19de:	01 97       	sbiw	r24, 0x01	; 1
    19e0:	f1 f7       	brne	.-4      	; 0x19de <main+0x2da>
    19e2:	fe 01       	movw	r30, r28
    19e4:	e5 56       	subi	r30, 0x65	; 101
    19e6:	ff 4f       	sbci	r31, 0xFF	; 255
    19e8:	91 83       	std	Z+1, r25	; 0x01
    19ea:	80 83       	st	Z, r24
	_delay_ms(3000);
	LCD_voidSendCommand(0b00000001);
    19ec:	81 e0       	ldi	r24, 0x01	; 1
    19ee:	0e 94 a5 08 	call	0x114a	; 0x114a <LCD_voidSendCommand>
			0b00000100,
			0b00001110,
			0b00000100,
			0b00001010,
			0b00001001,
	};
    19f2:	ce 01       	movw	r24, r28
    19f4:	87 54       	subi	r24, 0x47	; 71
    19f6:	9f 4f       	sbci	r25, 0xFF	; 255
    19f8:	cd 50       	subi	r28, 0x0D	; 13
    19fa:	df 4f       	sbci	r29, 0xFF	; 255
    19fc:	99 83       	std	Y+1, r25	; 0x01
    19fe:	88 83       	st	Y, r24
    1a00:	c3 5f       	subi	r28, 0xF3	; 243
    1a02:	d0 40       	sbci	r29, 0x00	; 0
    1a04:	8b e8       	ldi	r24, 0x8B	; 139
    1a06:	90 e0       	ldi	r25, 0x00	; 0
    1a08:	cb 50       	subi	r28, 0x0B	; 11
    1a0a:	df 4f       	sbci	r29, 0xFF	; 255
    1a0c:	99 83       	std	Y+1, r25	; 0x01
    1a0e:	88 83       	st	Y, r24
    1a10:	c5 5f       	subi	r28, 0xF5	; 245
    1a12:	d0 40       	sbci	r29, 0x00	; 0
    1a14:	98 e0       	ldi	r25, 0x08	; 8
    1a16:	c9 50       	subi	r28, 0x09	; 9
    1a18:	df 4f       	sbci	r29, 0xFF	; 255
    1a1a:	98 83       	st	Y, r25
    1a1c:	c7 5f       	subi	r28, 0xF7	; 247
    1a1e:	d0 40       	sbci	r29, 0x00	; 0
    1a20:	cb 50       	subi	r28, 0x0B	; 11
    1a22:	df 4f       	sbci	r29, 0xFF	; 255
    1a24:	a8 81       	ld	r26, Y
    1a26:	b9 81       	ldd	r27, Y+1	; 0x01
    1a28:	c5 5f       	subi	r28, 0xF5	; 245
    1a2a:	d0 40       	sbci	r29, 0x00	; 0
    1a2c:	0c 90       	ld	r0, X
    1a2e:	cb 50       	subi	r28, 0x0B	; 11
    1a30:	df 4f       	sbci	r29, 0xFF	; 255
    1a32:	e8 81       	ld	r30, Y
    1a34:	f9 81       	ldd	r31, Y+1	; 0x01
    1a36:	c5 5f       	subi	r28, 0xF5	; 245
    1a38:	d0 40       	sbci	r29, 0x00	; 0
    1a3a:	31 96       	adiw	r30, 0x01	; 1
    1a3c:	cb 50       	subi	r28, 0x0B	; 11
    1a3e:	df 4f       	sbci	r29, 0xFF	; 255
    1a40:	f9 83       	std	Y+1, r31	; 0x01
    1a42:	e8 83       	st	Y, r30
    1a44:	c5 5f       	subi	r28, 0xF5	; 245
    1a46:	d0 40       	sbci	r29, 0x00	; 0
    1a48:	cd 50       	subi	r28, 0x0D	; 13
    1a4a:	df 4f       	sbci	r29, 0xFF	; 255
    1a4c:	a8 81       	ld	r26, Y
    1a4e:	b9 81       	ldd	r27, Y+1	; 0x01
    1a50:	c3 5f       	subi	r28, 0xF3	; 243
    1a52:	d0 40       	sbci	r29, 0x00	; 0
    1a54:	0c 92       	st	X, r0
    1a56:	cd 50       	subi	r28, 0x0D	; 13
    1a58:	df 4f       	sbci	r29, 0xFF	; 255
    1a5a:	e8 81       	ld	r30, Y
    1a5c:	f9 81       	ldd	r31, Y+1	; 0x01
    1a5e:	c3 5f       	subi	r28, 0xF3	; 243
    1a60:	d0 40       	sbci	r29, 0x00	; 0
    1a62:	31 96       	adiw	r30, 0x01	; 1
    1a64:	cd 50       	subi	r28, 0x0D	; 13
    1a66:	df 4f       	sbci	r29, 0xFF	; 255
    1a68:	f9 83       	std	Y+1, r31	; 0x01
    1a6a:	e8 83       	st	Y, r30
    1a6c:	c3 5f       	subi	r28, 0xF3	; 243
    1a6e:	d0 40       	sbci	r29, 0x00	; 0
    1a70:	c9 50       	subi	r28, 0x09	; 9
    1a72:	df 4f       	sbci	r29, 0xFF	; 255
    1a74:	f8 81       	ld	r31, Y
    1a76:	c7 5f       	subi	r28, 0xF7	; 247
    1a78:	d0 40       	sbci	r29, 0x00	; 0
    1a7a:	f1 50       	subi	r31, 0x01	; 1
    1a7c:	c9 50       	subi	r28, 0x09	; 9
    1a7e:	df 4f       	sbci	r29, 0xFF	; 255
    1a80:	f8 83       	st	Y, r31
    1a82:	c7 5f       	subi	r28, 0xF7	; 247
    1a84:	d0 40       	sbci	r29, 0x00	; 0
    1a86:	c9 50       	subi	r28, 0x09	; 9
    1a88:	df 4f       	sbci	r29, 0xFF	; 255
    1a8a:	88 81       	ld	r24, Y
    1a8c:	c7 5f       	subi	r28, 0xF7	; 247
    1a8e:	d0 40       	sbci	r29, 0x00	; 0
    1a90:	88 23       	and	r24, r24
    1a92:	31 f6       	brne	.-116    	; 0x1a20 <main+0x31c>
	u8 kora1[8]={
			0b00000000,0b00000000,0b00000000,0b00000000,0b00000000,0b00000000,0b00000000,0b00000001};
    1a94:	ce 01       	movw	r24, r28
    1a96:	8f 53       	subi	r24, 0x3F	; 63
    1a98:	9f 4f       	sbci	r25, 0xFF	; 255
    1a9a:	28 e0       	ldi	r18, 0x08	; 8
    1a9c:	fc 01       	movw	r30, r24
    1a9e:	df 01       	movw	r26, r30
    1aa0:	82 2f       	mov	r24, r18
    1aa2:	1d 92       	st	X+, r1
    1aa4:	8a 95       	dec	r24
    1aa6:	e9 f7       	brne	.-6      	; 0x1aa2 <main+0x39e>
    1aa8:	fe 01       	movw	r30, r28
    1aaa:	ef 53       	subi	r30, 0x3F	; 63
    1aac:	ff 4f       	sbci	r31, 0xFF	; 255
    1aae:	81 e0       	ldi	r24, 0x01	; 1
    1ab0:	87 83       	std	Z+7, r24	; 0x07
	u8 kora2[8]={
			0b00000000,0b00000000,0b00000000,0b00000000,0b00000000,0b00000000,0b00000000,0b00000010};
    1ab2:	ce 01       	movw	r24, r28
    1ab4:	87 53       	subi	r24, 0x37	; 55
    1ab6:	9f 4f       	sbci	r25, 0xFF	; 255
    1ab8:	28 e0       	ldi	r18, 0x08	; 8
    1aba:	fc 01       	movw	r30, r24
    1abc:	df 01       	movw	r26, r30
    1abe:	82 2f       	mov	r24, r18
    1ac0:	1d 92       	st	X+, r1
    1ac2:	8a 95       	dec	r24
    1ac4:	e9 f7       	brne	.-6      	; 0x1ac0 <main+0x3bc>
    1ac6:	fe 01       	movw	r30, r28
    1ac8:	e7 53       	subi	r30, 0x37	; 55
    1aca:	ff 4f       	sbci	r31, 0xFF	; 255
    1acc:	82 e0       	ldi	r24, 0x02	; 2
    1ace:	87 83       	std	Z+7, r24	; 0x07

	u8 kora3[8]={
			0b00000000,0b00000000,0b00000000,0b00000000,0b00000000,0b00000000,0b00000000,0b00000100};
    1ad0:	ce 01       	movw	r24, r28
    1ad2:	8f 52       	subi	r24, 0x2F	; 47
    1ad4:	9f 4f       	sbci	r25, 0xFF	; 255
    1ad6:	28 e0       	ldi	r18, 0x08	; 8
    1ad8:	fc 01       	movw	r30, r24
    1ada:	df 01       	movw	r26, r30
    1adc:	82 2f       	mov	r24, r18
    1ade:	1d 92       	st	X+, r1
    1ae0:	8a 95       	dec	r24
    1ae2:	e9 f7       	brne	.-6      	; 0x1ade <main+0x3da>
    1ae4:	fe 01       	movw	r30, r28
    1ae6:	ef 52       	subi	r30, 0x2F	; 47
    1ae8:	ff 4f       	sbci	r31, 0xFF	; 255
    1aea:	84 e0       	ldi	r24, 0x04	; 4
    1aec:	87 83       	std	Z+7, r24	; 0x07
	u8 kora4[8]={
			0b00000000,0b00000000,0b00000000,0b00000000,0b00000000,0b00000000,0b00000000,0b00001000};
    1aee:	ce 01       	movw	r24, r28
    1af0:	87 52       	subi	r24, 0x27	; 39
    1af2:	9f 4f       	sbci	r25, 0xFF	; 255
    1af4:	28 e0       	ldi	r18, 0x08	; 8
    1af6:	fc 01       	movw	r30, r24
    1af8:	df 01       	movw	r26, r30
    1afa:	82 2f       	mov	r24, r18
    1afc:	1d 92       	st	X+, r1
    1afe:	8a 95       	dec	r24
    1b00:	e9 f7       	brne	.-6      	; 0x1afc <main+0x3f8>
    1b02:	fe 01       	movw	r30, r28
    1b04:	e7 52       	subi	r30, 0x27	; 39
    1b06:	ff 4f       	sbci	r31, 0xFF	; 255
    1b08:	88 e0       	ldi	r24, 0x08	; 8
    1b0a:	87 83       	std	Z+7, r24	; 0x07
	u8 kora5[8]={
			0b00000000,0b00000000,0b00000000,0b00000000,0b00000000,0b00000000,0b00000000,0b00010000};
    1b0c:	ce 01       	movw	r24, r28
    1b0e:	8f 51       	subi	r24, 0x1F	; 31
    1b10:	9f 4f       	sbci	r25, 0xFF	; 255
    1b12:	28 e0       	ldi	r18, 0x08	; 8
    1b14:	fc 01       	movw	r30, r24
    1b16:	df 01       	movw	r26, r30
    1b18:	82 2f       	mov	r24, r18
    1b1a:	1d 92       	st	X+, r1
    1b1c:	8a 95       	dec	r24
    1b1e:	e9 f7       	brne	.-6      	; 0x1b1a <main+0x416>
    1b20:	fe 01       	movw	r30, r28
    1b22:	ef 51       	subi	r30, 0x1F	; 31
    1b24:	ff 4f       	sbci	r31, 0xFF	; 255
    1b26:	80 e1       	ldi	r24, 0x10	; 16
    1b28:	87 83       	std	Z+7, r24	; 0x07
	LCD_voidPosition(0,3);
    1b2a:	80 e0       	ldi	r24, 0x00	; 0
    1b2c:	63 e0       	ldi	r22, 0x03	; 3
    1b2e:	0e 94 82 0a 	call	0x1504	; 0x1504 <LCD_voidPosition>
	LCD_voidSendString("I play kora");
    1b32:	8d e6       	ldi	r24, 0x6D	; 109
    1b34:	90 e0       	ldi	r25, 0x00	; 0
    1b36:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_voidSendString>
	LCD_voidDrawSpecialCharachter(Bendo_2ablmayshoot,2,1,14);
    1b3a:	ce 01       	movw	r24, r28
    1b3c:	87 54       	subi	r24, 0x47	; 71
    1b3e:	9f 4f       	sbci	r25, 0xFF	; 255
    1b40:	62 e0       	ldi	r22, 0x02	; 2
    1b42:	41 e0       	ldi	r20, 0x01	; 1
    1b44:	2e e0       	ldi	r18, 0x0E	; 14
    1b46:	0e 94 c8 0a 	call	0x1590	; 0x1590 <LCD_voidDrawSpecialCharachter>
	LCD_voidDrawSpecialCharachter(kora5,1,1,14);
    1b4a:	ce 01       	movw	r24, r28
    1b4c:	8f 51       	subi	r24, 0x1F	; 31
    1b4e:	9f 4f       	sbci	r25, 0xFF	; 255
    1b50:	61 e0       	ldi	r22, 0x01	; 1
    1b52:	41 e0       	ldi	r20, 0x01	; 1
    1b54:	2e e0       	ldi	r18, 0x0E	; 14
    1b56:	0e 94 c8 0a 	call	0x1590	; 0x1590 <LCD_voidDrawSpecialCharachter>
    1b5a:	fe 01       	movw	r30, r28
    1b5c:	e9 56       	subi	r30, 0x69	; 105
    1b5e:	ff 4f       	sbci	r31, 0xFF	; 255
    1b60:	80 e0       	ldi	r24, 0x00	; 0
    1b62:	90 e0       	ldi	r25, 0x00	; 0
    1b64:	aa ef       	ldi	r26, 0xFA	; 250
    1b66:	b4 e4       	ldi	r27, 0x44	; 68
    1b68:	80 83       	st	Z, r24
    1b6a:	91 83       	std	Z+1, r25	; 0x01
    1b6c:	a2 83       	std	Z+2, r26	; 0x02
    1b6e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1b70:	8e 01       	movw	r16, r28
    1b72:	0d 56       	subi	r16, 0x6D	; 109
    1b74:	1f 4f       	sbci	r17, 0xFF	; 255
    1b76:	fe 01       	movw	r30, r28
    1b78:	e9 56       	subi	r30, 0x69	; 105
    1b7a:	ff 4f       	sbci	r31, 0xFF	; 255
    1b7c:	60 81       	ld	r22, Z
    1b7e:	71 81       	ldd	r23, Z+1	; 0x01
    1b80:	82 81       	ldd	r24, Z+2	; 0x02
    1b82:	93 81       	ldd	r25, Z+3	; 0x03
    1b84:	20 e0       	ldi	r18, 0x00	; 0
    1b86:	30 e0       	ldi	r19, 0x00	; 0
    1b88:	4a ef       	ldi	r20, 0xFA	; 250
    1b8a:	54 e4       	ldi	r21, 0x44	; 68
    1b8c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1b90:	dc 01       	movw	r26, r24
    1b92:	cb 01       	movw	r24, r22
    1b94:	f8 01       	movw	r30, r16
    1b96:	80 83       	st	Z, r24
    1b98:	91 83       	std	Z+1, r25	; 0x01
    1b9a:	a2 83       	std	Z+2, r26	; 0x02
    1b9c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1b9e:	fe 01       	movw	r30, r28
    1ba0:	ed 56       	subi	r30, 0x6D	; 109
    1ba2:	ff 4f       	sbci	r31, 0xFF	; 255
    1ba4:	60 81       	ld	r22, Z
    1ba6:	71 81       	ldd	r23, Z+1	; 0x01
    1ba8:	82 81       	ldd	r24, Z+2	; 0x02
    1baa:	93 81       	ldd	r25, Z+3	; 0x03
    1bac:	20 e0       	ldi	r18, 0x00	; 0
    1bae:	30 e0       	ldi	r19, 0x00	; 0
    1bb0:	40 e8       	ldi	r20, 0x80	; 128
    1bb2:	5f e3       	ldi	r21, 0x3F	; 63
    1bb4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1bb8:	88 23       	and	r24, r24
    1bba:	44 f4       	brge	.+16     	; 0x1bcc <main+0x4c8>
		__ticks = 1;
    1bbc:	fe 01       	movw	r30, r28
    1bbe:	ef 56       	subi	r30, 0x6F	; 111
    1bc0:	ff 4f       	sbci	r31, 0xFF	; 255
    1bc2:	81 e0       	ldi	r24, 0x01	; 1
    1bc4:	90 e0       	ldi	r25, 0x00	; 0
    1bc6:	91 83       	std	Z+1, r25	; 0x01
    1bc8:	80 83       	st	Z, r24
    1bca:	64 c0       	rjmp	.+200    	; 0x1c94 <main+0x590>
	else if (__tmp > 65535)
    1bcc:	fe 01       	movw	r30, r28
    1bce:	ed 56       	subi	r30, 0x6D	; 109
    1bd0:	ff 4f       	sbci	r31, 0xFF	; 255
    1bd2:	60 81       	ld	r22, Z
    1bd4:	71 81       	ldd	r23, Z+1	; 0x01
    1bd6:	82 81       	ldd	r24, Z+2	; 0x02
    1bd8:	93 81       	ldd	r25, Z+3	; 0x03
    1bda:	20 e0       	ldi	r18, 0x00	; 0
    1bdc:	3f ef       	ldi	r19, 0xFF	; 255
    1bde:	4f e7       	ldi	r20, 0x7F	; 127
    1be0:	57 e4       	ldi	r21, 0x47	; 71
    1be2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1be6:	18 16       	cp	r1, r24
    1be8:	0c f0       	brlt	.+2      	; 0x1bec <main+0x4e8>
    1bea:	43 c0       	rjmp	.+134    	; 0x1c72 <main+0x56e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1bec:	fe 01       	movw	r30, r28
    1bee:	e9 56       	subi	r30, 0x69	; 105
    1bf0:	ff 4f       	sbci	r31, 0xFF	; 255
    1bf2:	60 81       	ld	r22, Z
    1bf4:	71 81       	ldd	r23, Z+1	; 0x01
    1bf6:	82 81       	ldd	r24, Z+2	; 0x02
    1bf8:	93 81       	ldd	r25, Z+3	; 0x03
    1bfa:	20 e0       	ldi	r18, 0x00	; 0
    1bfc:	30 e0       	ldi	r19, 0x00	; 0
    1bfe:	40 e2       	ldi	r20, 0x20	; 32
    1c00:	51 e4       	ldi	r21, 0x41	; 65
    1c02:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1c06:	dc 01       	movw	r26, r24
    1c08:	cb 01       	movw	r24, r22
    1c0a:	8e 01       	movw	r16, r28
    1c0c:	0f 56       	subi	r16, 0x6F	; 111
    1c0e:	1f 4f       	sbci	r17, 0xFF	; 255
    1c10:	bc 01       	movw	r22, r24
    1c12:	cd 01       	movw	r24, r26
    1c14:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1c18:	dc 01       	movw	r26, r24
    1c1a:	cb 01       	movw	r24, r22
    1c1c:	f8 01       	movw	r30, r16
    1c1e:	91 83       	std	Z+1, r25	; 0x01
    1c20:	80 83       	st	Z, r24
    1c22:	1f c0       	rjmp	.+62     	; 0x1c62 <main+0x55e>
    1c24:	fe 01       	movw	r30, r28
    1c26:	e1 57       	subi	r30, 0x71	; 113
    1c28:	ff 4f       	sbci	r31, 0xFF	; 255
    1c2a:	88 ec       	ldi	r24, 0xC8	; 200
    1c2c:	90 e0       	ldi	r25, 0x00	; 0
    1c2e:	91 83       	std	Z+1, r25	; 0x01
    1c30:	80 83       	st	Z, r24
    1c32:	fe 01       	movw	r30, r28
    1c34:	e1 57       	subi	r30, 0x71	; 113
    1c36:	ff 4f       	sbci	r31, 0xFF	; 255
    1c38:	80 81       	ld	r24, Z
    1c3a:	91 81       	ldd	r25, Z+1	; 0x01
    1c3c:	01 97       	sbiw	r24, 0x01	; 1
    1c3e:	f1 f7       	brne	.-4      	; 0x1c3c <main+0x538>
    1c40:	fe 01       	movw	r30, r28
    1c42:	e1 57       	subi	r30, 0x71	; 113
    1c44:	ff 4f       	sbci	r31, 0xFF	; 255
    1c46:	91 83       	std	Z+1, r25	; 0x01
    1c48:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1c4a:	de 01       	movw	r26, r28
    1c4c:	af 56       	subi	r26, 0x6F	; 111
    1c4e:	bf 4f       	sbci	r27, 0xFF	; 255
    1c50:	fe 01       	movw	r30, r28
    1c52:	ef 56       	subi	r30, 0x6F	; 111
    1c54:	ff 4f       	sbci	r31, 0xFF	; 255
    1c56:	80 81       	ld	r24, Z
    1c58:	91 81       	ldd	r25, Z+1	; 0x01
    1c5a:	01 97       	sbiw	r24, 0x01	; 1
    1c5c:	11 96       	adiw	r26, 0x01	; 1
    1c5e:	9c 93       	st	X, r25
    1c60:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1c62:	fe 01       	movw	r30, r28
    1c64:	ef 56       	subi	r30, 0x6F	; 111
    1c66:	ff 4f       	sbci	r31, 0xFF	; 255
    1c68:	80 81       	ld	r24, Z
    1c6a:	91 81       	ldd	r25, Z+1	; 0x01
    1c6c:	00 97       	sbiw	r24, 0x00	; 0
    1c6e:	d1 f6       	brne	.-76     	; 0x1c24 <main+0x520>
    1c70:	27 c0       	rjmp	.+78     	; 0x1cc0 <main+0x5bc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1c72:	8e 01       	movw	r16, r28
    1c74:	0f 56       	subi	r16, 0x6F	; 111
    1c76:	1f 4f       	sbci	r17, 0xFF	; 255
    1c78:	fe 01       	movw	r30, r28
    1c7a:	ed 56       	subi	r30, 0x6D	; 109
    1c7c:	ff 4f       	sbci	r31, 0xFF	; 255
    1c7e:	60 81       	ld	r22, Z
    1c80:	71 81       	ldd	r23, Z+1	; 0x01
    1c82:	82 81       	ldd	r24, Z+2	; 0x02
    1c84:	93 81       	ldd	r25, Z+3	; 0x03
    1c86:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1c8a:	dc 01       	movw	r26, r24
    1c8c:	cb 01       	movw	r24, r22
    1c8e:	f8 01       	movw	r30, r16
    1c90:	91 83       	std	Z+1, r25	; 0x01
    1c92:	80 83       	st	Z, r24
    1c94:	de 01       	movw	r26, r28
    1c96:	a3 57       	subi	r26, 0x73	; 115
    1c98:	bf 4f       	sbci	r27, 0xFF	; 255
    1c9a:	fe 01       	movw	r30, r28
    1c9c:	ef 56       	subi	r30, 0x6F	; 111
    1c9e:	ff 4f       	sbci	r31, 0xFF	; 255
    1ca0:	80 81       	ld	r24, Z
    1ca2:	91 81       	ldd	r25, Z+1	; 0x01
    1ca4:	8d 93       	st	X+, r24
    1ca6:	9c 93       	st	X, r25
    1ca8:	fe 01       	movw	r30, r28
    1caa:	e3 57       	subi	r30, 0x73	; 115
    1cac:	ff 4f       	sbci	r31, 0xFF	; 255
    1cae:	80 81       	ld	r24, Z
    1cb0:	91 81       	ldd	r25, Z+1	; 0x01
    1cb2:	01 97       	sbiw	r24, 0x01	; 1
    1cb4:	f1 f7       	brne	.-4      	; 0x1cb2 <main+0x5ae>
    1cb6:	fe 01       	movw	r30, r28
    1cb8:	e3 57       	subi	r30, 0x73	; 115
    1cba:	ff 4f       	sbci	r31, 0xFF	; 255
    1cbc:	91 83       	std	Z+1, r25	; 0x01
    1cbe:	80 83       	st	Z, r24
	_delay_ms(2000);
	LCD_voidSendCommand(0b00000001);
    1cc0:	81 e0       	ldi	r24, 0x01	; 1
    1cc2:	0e 94 a5 08 	call	0x114a	; 0x114a <LCD_voidSendCommand>

	LCD_voidDrawSpecialCharachter(Bendo_3ade,0,1,14);
    1cc6:	ce 01       	movw	r24, r28
    1cc8:	8f 54       	subi	r24, 0x4F	; 79
    1cca:	9f 4f       	sbci	r25, 0xFF	; 255
    1ccc:	60 e0       	ldi	r22, 0x00	; 0
    1cce:	41 e0       	ldi	r20, 0x01	; 1
    1cd0:	2e e0       	ldi	r18, 0x0E	; 14
    1cd2:	0e 94 c8 0a 	call	0x1590	; 0x1590 <LCD_voidDrawSpecialCharachter>

	LCD_voidDrawSpecialCharachter(kora1,1,1,13);
    1cd6:	ce 01       	movw	r24, r28
    1cd8:	8f 53       	subi	r24, 0x3F	; 63
    1cda:	9f 4f       	sbci	r25, 0xFF	; 255
    1cdc:	61 e0       	ldi	r22, 0x01	; 1
    1cde:	41 e0       	ldi	r20, 0x01	; 1
    1ce0:	2d e0       	ldi	r18, 0x0D	; 13
    1ce2:	0e 94 c8 0a 	call	0x1590	; 0x1590 <LCD_voidDrawSpecialCharachter>
    1ce6:	fe 01       	movw	r30, r28
    1ce8:	e7 57       	subi	r30, 0x77	; 119
    1cea:	ff 4f       	sbci	r31, 0xFF	; 255
    1cec:	80 e0       	ldi	r24, 0x00	; 0
    1cee:	90 e0       	ldi	r25, 0x00	; 0
    1cf0:	aa ef       	ldi	r26, 0xFA	; 250
    1cf2:	b3 e4       	ldi	r27, 0x43	; 67
    1cf4:	80 83       	st	Z, r24
    1cf6:	91 83       	std	Z+1, r25	; 0x01
    1cf8:	a2 83       	std	Z+2, r26	; 0x02
    1cfa:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1cfc:	8e 01       	movw	r16, r28
    1cfe:	0b 57       	subi	r16, 0x7B	; 123
    1d00:	1f 4f       	sbci	r17, 0xFF	; 255
    1d02:	fe 01       	movw	r30, r28
    1d04:	e7 57       	subi	r30, 0x77	; 119
    1d06:	ff 4f       	sbci	r31, 0xFF	; 255
    1d08:	60 81       	ld	r22, Z
    1d0a:	71 81       	ldd	r23, Z+1	; 0x01
    1d0c:	82 81       	ldd	r24, Z+2	; 0x02
    1d0e:	93 81       	ldd	r25, Z+3	; 0x03
    1d10:	20 e0       	ldi	r18, 0x00	; 0
    1d12:	30 e0       	ldi	r19, 0x00	; 0
    1d14:	4a ef       	ldi	r20, 0xFA	; 250
    1d16:	54 e4       	ldi	r21, 0x44	; 68
    1d18:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1d1c:	dc 01       	movw	r26, r24
    1d1e:	cb 01       	movw	r24, r22
    1d20:	f8 01       	movw	r30, r16
    1d22:	80 83       	st	Z, r24
    1d24:	91 83       	std	Z+1, r25	; 0x01
    1d26:	a2 83       	std	Z+2, r26	; 0x02
    1d28:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1d2a:	fe 01       	movw	r30, r28
    1d2c:	eb 57       	subi	r30, 0x7B	; 123
    1d2e:	ff 4f       	sbci	r31, 0xFF	; 255
    1d30:	60 81       	ld	r22, Z
    1d32:	71 81       	ldd	r23, Z+1	; 0x01
    1d34:	82 81       	ldd	r24, Z+2	; 0x02
    1d36:	93 81       	ldd	r25, Z+3	; 0x03
    1d38:	20 e0       	ldi	r18, 0x00	; 0
    1d3a:	30 e0       	ldi	r19, 0x00	; 0
    1d3c:	40 e8       	ldi	r20, 0x80	; 128
    1d3e:	5f e3       	ldi	r21, 0x3F	; 63
    1d40:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1d44:	88 23       	and	r24, r24
    1d46:	44 f4       	brge	.+16     	; 0x1d58 <main+0x654>
		__ticks = 1;
    1d48:	fe 01       	movw	r30, r28
    1d4a:	ed 57       	subi	r30, 0x7D	; 125
    1d4c:	ff 4f       	sbci	r31, 0xFF	; 255
    1d4e:	81 e0       	ldi	r24, 0x01	; 1
    1d50:	90 e0       	ldi	r25, 0x00	; 0
    1d52:	91 83       	std	Z+1, r25	; 0x01
    1d54:	80 83       	st	Z, r24
    1d56:	64 c0       	rjmp	.+200    	; 0x1e20 <main+0x71c>
	else if (__tmp > 65535)
    1d58:	fe 01       	movw	r30, r28
    1d5a:	eb 57       	subi	r30, 0x7B	; 123
    1d5c:	ff 4f       	sbci	r31, 0xFF	; 255
    1d5e:	60 81       	ld	r22, Z
    1d60:	71 81       	ldd	r23, Z+1	; 0x01
    1d62:	82 81       	ldd	r24, Z+2	; 0x02
    1d64:	93 81       	ldd	r25, Z+3	; 0x03
    1d66:	20 e0       	ldi	r18, 0x00	; 0
    1d68:	3f ef       	ldi	r19, 0xFF	; 255
    1d6a:	4f e7       	ldi	r20, 0x7F	; 127
    1d6c:	57 e4       	ldi	r21, 0x47	; 71
    1d6e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1d72:	18 16       	cp	r1, r24
    1d74:	0c f0       	brlt	.+2      	; 0x1d78 <main+0x674>
    1d76:	43 c0       	rjmp	.+134    	; 0x1dfe <main+0x6fa>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1d78:	fe 01       	movw	r30, r28
    1d7a:	e7 57       	subi	r30, 0x77	; 119
    1d7c:	ff 4f       	sbci	r31, 0xFF	; 255
    1d7e:	60 81       	ld	r22, Z
    1d80:	71 81       	ldd	r23, Z+1	; 0x01
    1d82:	82 81       	ldd	r24, Z+2	; 0x02
    1d84:	93 81       	ldd	r25, Z+3	; 0x03
    1d86:	20 e0       	ldi	r18, 0x00	; 0
    1d88:	30 e0       	ldi	r19, 0x00	; 0
    1d8a:	40 e2       	ldi	r20, 0x20	; 32
    1d8c:	51 e4       	ldi	r21, 0x41	; 65
    1d8e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1d92:	dc 01       	movw	r26, r24
    1d94:	cb 01       	movw	r24, r22
    1d96:	8e 01       	movw	r16, r28
    1d98:	0d 57       	subi	r16, 0x7D	; 125
    1d9a:	1f 4f       	sbci	r17, 0xFF	; 255
    1d9c:	bc 01       	movw	r22, r24
    1d9e:	cd 01       	movw	r24, r26
    1da0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1da4:	dc 01       	movw	r26, r24
    1da6:	cb 01       	movw	r24, r22
    1da8:	f8 01       	movw	r30, r16
    1daa:	91 83       	std	Z+1, r25	; 0x01
    1dac:	80 83       	st	Z, r24
    1dae:	1f c0       	rjmp	.+62     	; 0x1dee <main+0x6ea>
    1db0:	fe 01       	movw	r30, r28
    1db2:	ef 57       	subi	r30, 0x7F	; 127
    1db4:	ff 4f       	sbci	r31, 0xFF	; 255
    1db6:	88 ec       	ldi	r24, 0xC8	; 200
    1db8:	90 e0       	ldi	r25, 0x00	; 0
    1dba:	91 83       	std	Z+1, r25	; 0x01
    1dbc:	80 83       	st	Z, r24
    1dbe:	fe 01       	movw	r30, r28
    1dc0:	ef 57       	subi	r30, 0x7F	; 127
    1dc2:	ff 4f       	sbci	r31, 0xFF	; 255
    1dc4:	80 81       	ld	r24, Z
    1dc6:	91 81       	ldd	r25, Z+1	; 0x01
    1dc8:	01 97       	sbiw	r24, 0x01	; 1
    1dca:	f1 f7       	brne	.-4      	; 0x1dc8 <main+0x6c4>
    1dcc:	fe 01       	movw	r30, r28
    1dce:	ef 57       	subi	r30, 0x7F	; 127
    1dd0:	ff 4f       	sbci	r31, 0xFF	; 255
    1dd2:	91 83       	std	Z+1, r25	; 0x01
    1dd4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1dd6:	de 01       	movw	r26, r28
    1dd8:	ad 57       	subi	r26, 0x7D	; 125
    1dda:	bf 4f       	sbci	r27, 0xFF	; 255
    1ddc:	fe 01       	movw	r30, r28
    1dde:	ed 57       	subi	r30, 0x7D	; 125
    1de0:	ff 4f       	sbci	r31, 0xFF	; 255
    1de2:	80 81       	ld	r24, Z
    1de4:	91 81       	ldd	r25, Z+1	; 0x01
    1de6:	01 97       	sbiw	r24, 0x01	; 1
    1de8:	11 96       	adiw	r26, 0x01	; 1
    1dea:	9c 93       	st	X, r25
    1dec:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1dee:	fe 01       	movw	r30, r28
    1df0:	ed 57       	subi	r30, 0x7D	; 125
    1df2:	ff 4f       	sbci	r31, 0xFF	; 255
    1df4:	80 81       	ld	r24, Z
    1df6:	91 81       	ldd	r25, Z+1	; 0x01
    1df8:	00 97       	sbiw	r24, 0x00	; 0
    1dfa:	d1 f6       	brne	.-76     	; 0x1db0 <main+0x6ac>
    1dfc:	27 c0       	rjmp	.+78     	; 0x1e4c <main+0x748>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1dfe:	8e 01       	movw	r16, r28
    1e00:	0d 57       	subi	r16, 0x7D	; 125
    1e02:	1f 4f       	sbci	r17, 0xFF	; 255
    1e04:	fe 01       	movw	r30, r28
    1e06:	eb 57       	subi	r30, 0x7B	; 123
    1e08:	ff 4f       	sbci	r31, 0xFF	; 255
    1e0a:	60 81       	ld	r22, Z
    1e0c:	71 81       	ldd	r23, Z+1	; 0x01
    1e0e:	82 81       	ldd	r24, Z+2	; 0x02
    1e10:	93 81       	ldd	r25, Z+3	; 0x03
    1e12:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1e16:	dc 01       	movw	r26, r24
    1e18:	cb 01       	movw	r24, r22
    1e1a:	f8 01       	movw	r30, r16
    1e1c:	91 83       	std	Z+1, r25	; 0x01
    1e1e:	80 83       	st	Z, r24
    1e20:	de 01       	movw	r26, r28
    1e22:	a1 58       	subi	r26, 0x81	; 129
    1e24:	bf 4f       	sbci	r27, 0xFF	; 255
    1e26:	fe 01       	movw	r30, r28
    1e28:	ed 57       	subi	r30, 0x7D	; 125
    1e2a:	ff 4f       	sbci	r31, 0xFF	; 255
    1e2c:	80 81       	ld	r24, Z
    1e2e:	91 81       	ldd	r25, Z+1	; 0x01
    1e30:	8d 93       	st	X+, r24
    1e32:	9c 93       	st	X, r25
    1e34:	fe 01       	movw	r30, r28
    1e36:	e1 58       	subi	r30, 0x81	; 129
    1e38:	ff 4f       	sbci	r31, 0xFF	; 255
    1e3a:	80 81       	ld	r24, Z
    1e3c:	91 81       	ldd	r25, Z+1	; 0x01
    1e3e:	01 97       	sbiw	r24, 0x01	; 1
    1e40:	f1 f7       	brne	.-4      	; 0x1e3e <main+0x73a>
    1e42:	fe 01       	movw	r30, r28
    1e44:	e1 58       	subi	r30, 0x81	; 129
    1e46:	ff 4f       	sbci	r31, 0xFF	; 255
    1e48:	91 83       	std	Z+1, r25	; 0x01
    1e4a:	80 83       	st	Z, r24
	_delay_ms(500);
	LCD_voidDrawSpecialCharachter(kora2,1,1,13);
    1e4c:	ce 01       	movw	r24, r28
    1e4e:	87 53       	subi	r24, 0x37	; 55
    1e50:	9f 4f       	sbci	r25, 0xFF	; 255
    1e52:	61 e0       	ldi	r22, 0x01	; 1
    1e54:	41 e0       	ldi	r20, 0x01	; 1
    1e56:	2d e0       	ldi	r18, 0x0D	; 13
    1e58:	0e 94 c8 0a 	call	0x1590	; 0x1590 <LCD_voidDrawSpecialCharachter>
    1e5c:	fe 01       	movw	r30, r28
    1e5e:	e5 58       	subi	r30, 0x85	; 133
    1e60:	ff 4f       	sbci	r31, 0xFF	; 255
    1e62:	80 e0       	ldi	r24, 0x00	; 0
    1e64:	90 e0       	ldi	r25, 0x00	; 0
    1e66:	aa ef       	ldi	r26, 0xFA	; 250
    1e68:	b3 e4       	ldi	r27, 0x43	; 67
    1e6a:	80 83       	st	Z, r24
    1e6c:	91 83       	std	Z+1, r25	; 0x01
    1e6e:	a2 83       	std	Z+2, r26	; 0x02
    1e70:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1e72:	8e 01       	movw	r16, r28
    1e74:	09 58       	subi	r16, 0x89	; 137
    1e76:	1f 4f       	sbci	r17, 0xFF	; 255
    1e78:	fe 01       	movw	r30, r28
    1e7a:	e5 58       	subi	r30, 0x85	; 133
    1e7c:	ff 4f       	sbci	r31, 0xFF	; 255
    1e7e:	60 81       	ld	r22, Z
    1e80:	71 81       	ldd	r23, Z+1	; 0x01
    1e82:	82 81       	ldd	r24, Z+2	; 0x02
    1e84:	93 81       	ldd	r25, Z+3	; 0x03
    1e86:	20 e0       	ldi	r18, 0x00	; 0
    1e88:	30 e0       	ldi	r19, 0x00	; 0
    1e8a:	4a ef       	ldi	r20, 0xFA	; 250
    1e8c:	54 e4       	ldi	r21, 0x44	; 68
    1e8e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1e92:	dc 01       	movw	r26, r24
    1e94:	cb 01       	movw	r24, r22
    1e96:	f8 01       	movw	r30, r16
    1e98:	80 83       	st	Z, r24
    1e9a:	91 83       	std	Z+1, r25	; 0x01
    1e9c:	a2 83       	std	Z+2, r26	; 0x02
    1e9e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1ea0:	fe 01       	movw	r30, r28
    1ea2:	e9 58       	subi	r30, 0x89	; 137
    1ea4:	ff 4f       	sbci	r31, 0xFF	; 255
    1ea6:	60 81       	ld	r22, Z
    1ea8:	71 81       	ldd	r23, Z+1	; 0x01
    1eaa:	82 81       	ldd	r24, Z+2	; 0x02
    1eac:	93 81       	ldd	r25, Z+3	; 0x03
    1eae:	20 e0       	ldi	r18, 0x00	; 0
    1eb0:	30 e0       	ldi	r19, 0x00	; 0
    1eb2:	40 e8       	ldi	r20, 0x80	; 128
    1eb4:	5f e3       	ldi	r21, 0x3F	; 63
    1eb6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1eba:	88 23       	and	r24, r24
    1ebc:	44 f4       	brge	.+16     	; 0x1ece <main+0x7ca>
		__ticks = 1;
    1ebe:	fe 01       	movw	r30, r28
    1ec0:	eb 58       	subi	r30, 0x8B	; 139
    1ec2:	ff 4f       	sbci	r31, 0xFF	; 255
    1ec4:	81 e0       	ldi	r24, 0x01	; 1
    1ec6:	90 e0       	ldi	r25, 0x00	; 0
    1ec8:	91 83       	std	Z+1, r25	; 0x01
    1eca:	80 83       	st	Z, r24
    1ecc:	64 c0       	rjmp	.+200    	; 0x1f96 <main+0x892>
	else if (__tmp > 65535)
    1ece:	fe 01       	movw	r30, r28
    1ed0:	e9 58       	subi	r30, 0x89	; 137
    1ed2:	ff 4f       	sbci	r31, 0xFF	; 255
    1ed4:	60 81       	ld	r22, Z
    1ed6:	71 81       	ldd	r23, Z+1	; 0x01
    1ed8:	82 81       	ldd	r24, Z+2	; 0x02
    1eda:	93 81       	ldd	r25, Z+3	; 0x03
    1edc:	20 e0       	ldi	r18, 0x00	; 0
    1ede:	3f ef       	ldi	r19, 0xFF	; 255
    1ee0:	4f e7       	ldi	r20, 0x7F	; 127
    1ee2:	57 e4       	ldi	r21, 0x47	; 71
    1ee4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1ee8:	18 16       	cp	r1, r24
    1eea:	0c f0       	brlt	.+2      	; 0x1eee <main+0x7ea>
    1eec:	43 c0       	rjmp	.+134    	; 0x1f74 <main+0x870>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1eee:	fe 01       	movw	r30, r28
    1ef0:	e5 58       	subi	r30, 0x85	; 133
    1ef2:	ff 4f       	sbci	r31, 0xFF	; 255
    1ef4:	60 81       	ld	r22, Z
    1ef6:	71 81       	ldd	r23, Z+1	; 0x01
    1ef8:	82 81       	ldd	r24, Z+2	; 0x02
    1efa:	93 81       	ldd	r25, Z+3	; 0x03
    1efc:	20 e0       	ldi	r18, 0x00	; 0
    1efe:	30 e0       	ldi	r19, 0x00	; 0
    1f00:	40 e2       	ldi	r20, 0x20	; 32
    1f02:	51 e4       	ldi	r21, 0x41	; 65
    1f04:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1f08:	dc 01       	movw	r26, r24
    1f0a:	cb 01       	movw	r24, r22
    1f0c:	8e 01       	movw	r16, r28
    1f0e:	0b 58       	subi	r16, 0x8B	; 139
    1f10:	1f 4f       	sbci	r17, 0xFF	; 255
    1f12:	bc 01       	movw	r22, r24
    1f14:	cd 01       	movw	r24, r26
    1f16:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1f1a:	dc 01       	movw	r26, r24
    1f1c:	cb 01       	movw	r24, r22
    1f1e:	f8 01       	movw	r30, r16
    1f20:	91 83       	std	Z+1, r25	; 0x01
    1f22:	80 83       	st	Z, r24
    1f24:	1f c0       	rjmp	.+62     	; 0x1f64 <main+0x860>
    1f26:	fe 01       	movw	r30, r28
    1f28:	ed 58       	subi	r30, 0x8D	; 141
    1f2a:	ff 4f       	sbci	r31, 0xFF	; 255
    1f2c:	88 ec       	ldi	r24, 0xC8	; 200
    1f2e:	90 e0       	ldi	r25, 0x00	; 0
    1f30:	91 83       	std	Z+1, r25	; 0x01
    1f32:	80 83       	st	Z, r24
    1f34:	fe 01       	movw	r30, r28
    1f36:	ed 58       	subi	r30, 0x8D	; 141
    1f38:	ff 4f       	sbci	r31, 0xFF	; 255
    1f3a:	80 81       	ld	r24, Z
    1f3c:	91 81       	ldd	r25, Z+1	; 0x01
    1f3e:	01 97       	sbiw	r24, 0x01	; 1
    1f40:	f1 f7       	brne	.-4      	; 0x1f3e <main+0x83a>
    1f42:	fe 01       	movw	r30, r28
    1f44:	ed 58       	subi	r30, 0x8D	; 141
    1f46:	ff 4f       	sbci	r31, 0xFF	; 255
    1f48:	91 83       	std	Z+1, r25	; 0x01
    1f4a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1f4c:	de 01       	movw	r26, r28
    1f4e:	ab 58       	subi	r26, 0x8B	; 139
    1f50:	bf 4f       	sbci	r27, 0xFF	; 255
    1f52:	fe 01       	movw	r30, r28
    1f54:	eb 58       	subi	r30, 0x8B	; 139
    1f56:	ff 4f       	sbci	r31, 0xFF	; 255
    1f58:	80 81       	ld	r24, Z
    1f5a:	91 81       	ldd	r25, Z+1	; 0x01
    1f5c:	01 97       	sbiw	r24, 0x01	; 1
    1f5e:	11 96       	adiw	r26, 0x01	; 1
    1f60:	9c 93       	st	X, r25
    1f62:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1f64:	fe 01       	movw	r30, r28
    1f66:	eb 58       	subi	r30, 0x8B	; 139
    1f68:	ff 4f       	sbci	r31, 0xFF	; 255
    1f6a:	80 81       	ld	r24, Z
    1f6c:	91 81       	ldd	r25, Z+1	; 0x01
    1f6e:	00 97       	sbiw	r24, 0x00	; 0
    1f70:	d1 f6       	brne	.-76     	; 0x1f26 <main+0x822>
    1f72:	27 c0       	rjmp	.+78     	; 0x1fc2 <main+0x8be>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1f74:	8e 01       	movw	r16, r28
    1f76:	0b 58       	subi	r16, 0x8B	; 139
    1f78:	1f 4f       	sbci	r17, 0xFF	; 255
    1f7a:	fe 01       	movw	r30, r28
    1f7c:	e9 58       	subi	r30, 0x89	; 137
    1f7e:	ff 4f       	sbci	r31, 0xFF	; 255
    1f80:	60 81       	ld	r22, Z
    1f82:	71 81       	ldd	r23, Z+1	; 0x01
    1f84:	82 81       	ldd	r24, Z+2	; 0x02
    1f86:	93 81       	ldd	r25, Z+3	; 0x03
    1f88:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1f8c:	dc 01       	movw	r26, r24
    1f8e:	cb 01       	movw	r24, r22
    1f90:	f8 01       	movw	r30, r16
    1f92:	91 83       	std	Z+1, r25	; 0x01
    1f94:	80 83       	st	Z, r24
    1f96:	de 01       	movw	r26, r28
    1f98:	af 58       	subi	r26, 0x8F	; 143
    1f9a:	bf 4f       	sbci	r27, 0xFF	; 255
    1f9c:	fe 01       	movw	r30, r28
    1f9e:	eb 58       	subi	r30, 0x8B	; 139
    1fa0:	ff 4f       	sbci	r31, 0xFF	; 255
    1fa2:	80 81       	ld	r24, Z
    1fa4:	91 81       	ldd	r25, Z+1	; 0x01
    1fa6:	8d 93       	st	X+, r24
    1fa8:	9c 93       	st	X, r25
    1faa:	fe 01       	movw	r30, r28
    1fac:	ef 58       	subi	r30, 0x8F	; 143
    1fae:	ff 4f       	sbci	r31, 0xFF	; 255
    1fb0:	80 81       	ld	r24, Z
    1fb2:	91 81       	ldd	r25, Z+1	; 0x01
    1fb4:	01 97       	sbiw	r24, 0x01	; 1
    1fb6:	f1 f7       	brne	.-4      	; 0x1fb4 <main+0x8b0>
    1fb8:	fe 01       	movw	r30, r28
    1fba:	ef 58       	subi	r30, 0x8F	; 143
    1fbc:	ff 4f       	sbci	r31, 0xFF	; 255
    1fbe:	91 83       	std	Z+1, r25	; 0x01
    1fc0:	80 83       	st	Z, r24
	_delay_ms(500);
	LCD_voidDrawSpecialCharachter(kora3,1,1,13);
    1fc2:	ce 01       	movw	r24, r28
    1fc4:	8f 52       	subi	r24, 0x2F	; 47
    1fc6:	9f 4f       	sbci	r25, 0xFF	; 255
    1fc8:	61 e0       	ldi	r22, 0x01	; 1
    1fca:	41 e0       	ldi	r20, 0x01	; 1
    1fcc:	2d e0       	ldi	r18, 0x0D	; 13
    1fce:	0e 94 c8 0a 	call	0x1590	; 0x1590 <LCD_voidDrawSpecialCharachter>
    1fd2:	fe 01       	movw	r30, r28
    1fd4:	e3 59       	subi	r30, 0x93	; 147
    1fd6:	ff 4f       	sbci	r31, 0xFF	; 255
    1fd8:	80 e0       	ldi	r24, 0x00	; 0
    1fda:	90 e0       	ldi	r25, 0x00	; 0
    1fdc:	aa ef       	ldi	r26, 0xFA	; 250
    1fde:	b3 e4       	ldi	r27, 0x43	; 67
    1fe0:	80 83       	st	Z, r24
    1fe2:	91 83       	std	Z+1, r25	; 0x01
    1fe4:	a2 83       	std	Z+2, r26	; 0x02
    1fe6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1fe8:	8e 01       	movw	r16, r28
    1fea:	07 59       	subi	r16, 0x97	; 151
    1fec:	1f 4f       	sbci	r17, 0xFF	; 255
    1fee:	fe 01       	movw	r30, r28
    1ff0:	e3 59       	subi	r30, 0x93	; 147
    1ff2:	ff 4f       	sbci	r31, 0xFF	; 255
    1ff4:	60 81       	ld	r22, Z
    1ff6:	71 81       	ldd	r23, Z+1	; 0x01
    1ff8:	82 81       	ldd	r24, Z+2	; 0x02
    1ffa:	93 81       	ldd	r25, Z+3	; 0x03
    1ffc:	20 e0       	ldi	r18, 0x00	; 0
    1ffe:	30 e0       	ldi	r19, 0x00	; 0
    2000:	4a ef       	ldi	r20, 0xFA	; 250
    2002:	54 e4       	ldi	r21, 0x44	; 68
    2004:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2008:	dc 01       	movw	r26, r24
    200a:	cb 01       	movw	r24, r22
    200c:	f8 01       	movw	r30, r16
    200e:	80 83       	st	Z, r24
    2010:	91 83       	std	Z+1, r25	; 0x01
    2012:	a2 83       	std	Z+2, r26	; 0x02
    2014:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2016:	fe 01       	movw	r30, r28
    2018:	e7 59       	subi	r30, 0x97	; 151
    201a:	ff 4f       	sbci	r31, 0xFF	; 255
    201c:	60 81       	ld	r22, Z
    201e:	71 81       	ldd	r23, Z+1	; 0x01
    2020:	82 81       	ldd	r24, Z+2	; 0x02
    2022:	93 81       	ldd	r25, Z+3	; 0x03
    2024:	20 e0       	ldi	r18, 0x00	; 0
    2026:	30 e0       	ldi	r19, 0x00	; 0
    2028:	40 e8       	ldi	r20, 0x80	; 128
    202a:	5f e3       	ldi	r21, 0x3F	; 63
    202c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2030:	88 23       	and	r24, r24
    2032:	44 f4       	brge	.+16     	; 0x2044 <main+0x940>
		__ticks = 1;
    2034:	fe 01       	movw	r30, r28
    2036:	e9 59       	subi	r30, 0x99	; 153
    2038:	ff 4f       	sbci	r31, 0xFF	; 255
    203a:	81 e0       	ldi	r24, 0x01	; 1
    203c:	90 e0       	ldi	r25, 0x00	; 0
    203e:	91 83       	std	Z+1, r25	; 0x01
    2040:	80 83       	st	Z, r24
    2042:	64 c0       	rjmp	.+200    	; 0x210c <main+0xa08>
	else if (__tmp > 65535)
    2044:	fe 01       	movw	r30, r28
    2046:	e7 59       	subi	r30, 0x97	; 151
    2048:	ff 4f       	sbci	r31, 0xFF	; 255
    204a:	60 81       	ld	r22, Z
    204c:	71 81       	ldd	r23, Z+1	; 0x01
    204e:	82 81       	ldd	r24, Z+2	; 0x02
    2050:	93 81       	ldd	r25, Z+3	; 0x03
    2052:	20 e0       	ldi	r18, 0x00	; 0
    2054:	3f ef       	ldi	r19, 0xFF	; 255
    2056:	4f e7       	ldi	r20, 0x7F	; 127
    2058:	57 e4       	ldi	r21, 0x47	; 71
    205a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    205e:	18 16       	cp	r1, r24
    2060:	0c f0       	brlt	.+2      	; 0x2064 <main+0x960>
    2062:	43 c0       	rjmp	.+134    	; 0x20ea <main+0x9e6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2064:	fe 01       	movw	r30, r28
    2066:	e3 59       	subi	r30, 0x93	; 147
    2068:	ff 4f       	sbci	r31, 0xFF	; 255
    206a:	60 81       	ld	r22, Z
    206c:	71 81       	ldd	r23, Z+1	; 0x01
    206e:	82 81       	ldd	r24, Z+2	; 0x02
    2070:	93 81       	ldd	r25, Z+3	; 0x03
    2072:	20 e0       	ldi	r18, 0x00	; 0
    2074:	30 e0       	ldi	r19, 0x00	; 0
    2076:	40 e2       	ldi	r20, 0x20	; 32
    2078:	51 e4       	ldi	r21, 0x41	; 65
    207a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    207e:	dc 01       	movw	r26, r24
    2080:	cb 01       	movw	r24, r22
    2082:	8e 01       	movw	r16, r28
    2084:	09 59       	subi	r16, 0x99	; 153
    2086:	1f 4f       	sbci	r17, 0xFF	; 255
    2088:	bc 01       	movw	r22, r24
    208a:	cd 01       	movw	r24, r26
    208c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2090:	dc 01       	movw	r26, r24
    2092:	cb 01       	movw	r24, r22
    2094:	f8 01       	movw	r30, r16
    2096:	91 83       	std	Z+1, r25	; 0x01
    2098:	80 83       	st	Z, r24
    209a:	1f c0       	rjmp	.+62     	; 0x20da <main+0x9d6>
    209c:	fe 01       	movw	r30, r28
    209e:	eb 59       	subi	r30, 0x9B	; 155
    20a0:	ff 4f       	sbci	r31, 0xFF	; 255
    20a2:	88 ec       	ldi	r24, 0xC8	; 200
    20a4:	90 e0       	ldi	r25, 0x00	; 0
    20a6:	91 83       	std	Z+1, r25	; 0x01
    20a8:	80 83       	st	Z, r24
    20aa:	fe 01       	movw	r30, r28
    20ac:	eb 59       	subi	r30, 0x9B	; 155
    20ae:	ff 4f       	sbci	r31, 0xFF	; 255
    20b0:	80 81       	ld	r24, Z
    20b2:	91 81       	ldd	r25, Z+1	; 0x01
    20b4:	01 97       	sbiw	r24, 0x01	; 1
    20b6:	f1 f7       	brne	.-4      	; 0x20b4 <main+0x9b0>
    20b8:	fe 01       	movw	r30, r28
    20ba:	eb 59       	subi	r30, 0x9B	; 155
    20bc:	ff 4f       	sbci	r31, 0xFF	; 255
    20be:	91 83       	std	Z+1, r25	; 0x01
    20c0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    20c2:	de 01       	movw	r26, r28
    20c4:	a9 59       	subi	r26, 0x99	; 153
    20c6:	bf 4f       	sbci	r27, 0xFF	; 255
    20c8:	fe 01       	movw	r30, r28
    20ca:	e9 59       	subi	r30, 0x99	; 153
    20cc:	ff 4f       	sbci	r31, 0xFF	; 255
    20ce:	80 81       	ld	r24, Z
    20d0:	91 81       	ldd	r25, Z+1	; 0x01
    20d2:	01 97       	sbiw	r24, 0x01	; 1
    20d4:	11 96       	adiw	r26, 0x01	; 1
    20d6:	9c 93       	st	X, r25
    20d8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    20da:	fe 01       	movw	r30, r28
    20dc:	e9 59       	subi	r30, 0x99	; 153
    20de:	ff 4f       	sbci	r31, 0xFF	; 255
    20e0:	80 81       	ld	r24, Z
    20e2:	91 81       	ldd	r25, Z+1	; 0x01
    20e4:	00 97       	sbiw	r24, 0x00	; 0
    20e6:	d1 f6       	brne	.-76     	; 0x209c <main+0x998>
    20e8:	27 c0       	rjmp	.+78     	; 0x2138 <main+0xa34>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    20ea:	8e 01       	movw	r16, r28
    20ec:	09 59       	subi	r16, 0x99	; 153
    20ee:	1f 4f       	sbci	r17, 0xFF	; 255
    20f0:	fe 01       	movw	r30, r28
    20f2:	e7 59       	subi	r30, 0x97	; 151
    20f4:	ff 4f       	sbci	r31, 0xFF	; 255
    20f6:	60 81       	ld	r22, Z
    20f8:	71 81       	ldd	r23, Z+1	; 0x01
    20fa:	82 81       	ldd	r24, Z+2	; 0x02
    20fc:	93 81       	ldd	r25, Z+3	; 0x03
    20fe:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2102:	dc 01       	movw	r26, r24
    2104:	cb 01       	movw	r24, r22
    2106:	f8 01       	movw	r30, r16
    2108:	91 83       	std	Z+1, r25	; 0x01
    210a:	80 83       	st	Z, r24
    210c:	de 01       	movw	r26, r28
    210e:	ad 59       	subi	r26, 0x9D	; 157
    2110:	bf 4f       	sbci	r27, 0xFF	; 255
    2112:	fe 01       	movw	r30, r28
    2114:	e9 59       	subi	r30, 0x99	; 153
    2116:	ff 4f       	sbci	r31, 0xFF	; 255
    2118:	80 81       	ld	r24, Z
    211a:	91 81       	ldd	r25, Z+1	; 0x01
    211c:	8d 93       	st	X+, r24
    211e:	9c 93       	st	X, r25
    2120:	fe 01       	movw	r30, r28
    2122:	ed 59       	subi	r30, 0x9D	; 157
    2124:	ff 4f       	sbci	r31, 0xFF	; 255
    2126:	80 81       	ld	r24, Z
    2128:	91 81       	ldd	r25, Z+1	; 0x01
    212a:	01 97       	sbiw	r24, 0x01	; 1
    212c:	f1 f7       	brne	.-4      	; 0x212a <main+0xa26>
    212e:	fe 01       	movw	r30, r28
    2130:	ed 59       	subi	r30, 0x9D	; 157
    2132:	ff 4f       	sbci	r31, 0xFF	; 255
    2134:	91 83       	std	Z+1, r25	; 0x01
    2136:	80 83       	st	Z, r24
	_delay_ms(500);
	LCD_voidDrawSpecialCharachter(kora4,1,1,13);
    2138:	ce 01       	movw	r24, r28
    213a:	87 52       	subi	r24, 0x27	; 39
    213c:	9f 4f       	sbci	r25, 0xFF	; 255
    213e:	61 e0       	ldi	r22, 0x01	; 1
    2140:	41 e0       	ldi	r20, 0x01	; 1
    2142:	2d e0       	ldi	r18, 0x0D	; 13
    2144:	0e 94 c8 0a 	call	0x1590	; 0x1590 <LCD_voidDrawSpecialCharachter>
    2148:	fe 01       	movw	r30, r28
    214a:	e1 5a       	subi	r30, 0xA1	; 161
    214c:	ff 4f       	sbci	r31, 0xFF	; 255
    214e:	80 e0       	ldi	r24, 0x00	; 0
    2150:	90 e0       	ldi	r25, 0x00	; 0
    2152:	aa ef       	ldi	r26, 0xFA	; 250
    2154:	b3 e4       	ldi	r27, 0x43	; 67
    2156:	80 83       	st	Z, r24
    2158:	91 83       	std	Z+1, r25	; 0x01
    215a:	a2 83       	std	Z+2, r26	; 0x02
    215c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    215e:	8e 01       	movw	r16, r28
    2160:	05 5a       	subi	r16, 0xA5	; 165
    2162:	1f 4f       	sbci	r17, 0xFF	; 255
    2164:	fe 01       	movw	r30, r28
    2166:	e1 5a       	subi	r30, 0xA1	; 161
    2168:	ff 4f       	sbci	r31, 0xFF	; 255
    216a:	60 81       	ld	r22, Z
    216c:	71 81       	ldd	r23, Z+1	; 0x01
    216e:	82 81       	ldd	r24, Z+2	; 0x02
    2170:	93 81       	ldd	r25, Z+3	; 0x03
    2172:	20 e0       	ldi	r18, 0x00	; 0
    2174:	30 e0       	ldi	r19, 0x00	; 0
    2176:	4a ef       	ldi	r20, 0xFA	; 250
    2178:	54 e4       	ldi	r21, 0x44	; 68
    217a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    217e:	dc 01       	movw	r26, r24
    2180:	cb 01       	movw	r24, r22
    2182:	f8 01       	movw	r30, r16
    2184:	80 83       	st	Z, r24
    2186:	91 83       	std	Z+1, r25	; 0x01
    2188:	a2 83       	std	Z+2, r26	; 0x02
    218a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    218c:	fe 01       	movw	r30, r28
    218e:	e5 5a       	subi	r30, 0xA5	; 165
    2190:	ff 4f       	sbci	r31, 0xFF	; 255
    2192:	60 81       	ld	r22, Z
    2194:	71 81       	ldd	r23, Z+1	; 0x01
    2196:	82 81       	ldd	r24, Z+2	; 0x02
    2198:	93 81       	ldd	r25, Z+3	; 0x03
    219a:	20 e0       	ldi	r18, 0x00	; 0
    219c:	30 e0       	ldi	r19, 0x00	; 0
    219e:	40 e8       	ldi	r20, 0x80	; 128
    21a0:	5f e3       	ldi	r21, 0x3F	; 63
    21a2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    21a6:	88 23       	and	r24, r24
    21a8:	44 f4       	brge	.+16     	; 0x21ba <main+0xab6>
		__ticks = 1;
    21aa:	fe 01       	movw	r30, r28
    21ac:	e7 5a       	subi	r30, 0xA7	; 167
    21ae:	ff 4f       	sbci	r31, 0xFF	; 255
    21b0:	81 e0       	ldi	r24, 0x01	; 1
    21b2:	90 e0       	ldi	r25, 0x00	; 0
    21b4:	91 83       	std	Z+1, r25	; 0x01
    21b6:	80 83       	st	Z, r24
    21b8:	64 c0       	rjmp	.+200    	; 0x2282 <main+0xb7e>
	else if (__tmp > 65535)
    21ba:	fe 01       	movw	r30, r28
    21bc:	e5 5a       	subi	r30, 0xA5	; 165
    21be:	ff 4f       	sbci	r31, 0xFF	; 255
    21c0:	60 81       	ld	r22, Z
    21c2:	71 81       	ldd	r23, Z+1	; 0x01
    21c4:	82 81       	ldd	r24, Z+2	; 0x02
    21c6:	93 81       	ldd	r25, Z+3	; 0x03
    21c8:	20 e0       	ldi	r18, 0x00	; 0
    21ca:	3f ef       	ldi	r19, 0xFF	; 255
    21cc:	4f e7       	ldi	r20, 0x7F	; 127
    21ce:	57 e4       	ldi	r21, 0x47	; 71
    21d0:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    21d4:	18 16       	cp	r1, r24
    21d6:	0c f0       	brlt	.+2      	; 0x21da <main+0xad6>
    21d8:	43 c0       	rjmp	.+134    	; 0x2260 <main+0xb5c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    21da:	fe 01       	movw	r30, r28
    21dc:	e1 5a       	subi	r30, 0xA1	; 161
    21de:	ff 4f       	sbci	r31, 0xFF	; 255
    21e0:	60 81       	ld	r22, Z
    21e2:	71 81       	ldd	r23, Z+1	; 0x01
    21e4:	82 81       	ldd	r24, Z+2	; 0x02
    21e6:	93 81       	ldd	r25, Z+3	; 0x03
    21e8:	20 e0       	ldi	r18, 0x00	; 0
    21ea:	30 e0       	ldi	r19, 0x00	; 0
    21ec:	40 e2       	ldi	r20, 0x20	; 32
    21ee:	51 e4       	ldi	r21, 0x41	; 65
    21f0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    21f4:	dc 01       	movw	r26, r24
    21f6:	cb 01       	movw	r24, r22
    21f8:	8e 01       	movw	r16, r28
    21fa:	07 5a       	subi	r16, 0xA7	; 167
    21fc:	1f 4f       	sbci	r17, 0xFF	; 255
    21fe:	bc 01       	movw	r22, r24
    2200:	cd 01       	movw	r24, r26
    2202:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2206:	dc 01       	movw	r26, r24
    2208:	cb 01       	movw	r24, r22
    220a:	f8 01       	movw	r30, r16
    220c:	91 83       	std	Z+1, r25	; 0x01
    220e:	80 83       	st	Z, r24
    2210:	1f c0       	rjmp	.+62     	; 0x2250 <main+0xb4c>
    2212:	fe 01       	movw	r30, r28
    2214:	e9 5a       	subi	r30, 0xA9	; 169
    2216:	ff 4f       	sbci	r31, 0xFF	; 255
    2218:	88 ec       	ldi	r24, 0xC8	; 200
    221a:	90 e0       	ldi	r25, 0x00	; 0
    221c:	91 83       	std	Z+1, r25	; 0x01
    221e:	80 83       	st	Z, r24
    2220:	fe 01       	movw	r30, r28
    2222:	e9 5a       	subi	r30, 0xA9	; 169
    2224:	ff 4f       	sbci	r31, 0xFF	; 255
    2226:	80 81       	ld	r24, Z
    2228:	91 81       	ldd	r25, Z+1	; 0x01
    222a:	01 97       	sbiw	r24, 0x01	; 1
    222c:	f1 f7       	brne	.-4      	; 0x222a <main+0xb26>
    222e:	fe 01       	movw	r30, r28
    2230:	e9 5a       	subi	r30, 0xA9	; 169
    2232:	ff 4f       	sbci	r31, 0xFF	; 255
    2234:	91 83       	std	Z+1, r25	; 0x01
    2236:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2238:	de 01       	movw	r26, r28
    223a:	a7 5a       	subi	r26, 0xA7	; 167
    223c:	bf 4f       	sbci	r27, 0xFF	; 255
    223e:	fe 01       	movw	r30, r28
    2240:	e7 5a       	subi	r30, 0xA7	; 167
    2242:	ff 4f       	sbci	r31, 0xFF	; 255
    2244:	80 81       	ld	r24, Z
    2246:	91 81       	ldd	r25, Z+1	; 0x01
    2248:	01 97       	sbiw	r24, 0x01	; 1
    224a:	11 96       	adiw	r26, 0x01	; 1
    224c:	9c 93       	st	X, r25
    224e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2250:	fe 01       	movw	r30, r28
    2252:	e7 5a       	subi	r30, 0xA7	; 167
    2254:	ff 4f       	sbci	r31, 0xFF	; 255
    2256:	80 81       	ld	r24, Z
    2258:	91 81       	ldd	r25, Z+1	; 0x01
    225a:	00 97       	sbiw	r24, 0x00	; 0
    225c:	d1 f6       	brne	.-76     	; 0x2212 <main+0xb0e>
    225e:	27 c0       	rjmp	.+78     	; 0x22ae <main+0xbaa>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2260:	8e 01       	movw	r16, r28
    2262:	07 5a       	subi	r16, 0xA7	; 167
    2264:	1f 4f       	sbci	r17, 0xFF	; 255
    2266:	fe 01       	movw	r30, r28
    2268:	e5 5a       	subi	r30, 0xA5	; 165
    226a:	ff 4f       	sbci	r31, 0xFF	; 255
    226c:	60 81       	ld	r22, Z
    226e:	71 81       	ldd	r23, Z+1	; 0x01
    2270:	82 81       	ldd	r24, Z+2	; 0x02
    2272:	93 81       	ldd	r25, Z+3	; 0x03
    2274:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2278:	dc 01       	movw	r26, r24
    227a:	cb 01       	movw	r24, r22
    227c:	f8 01       	movw	r30, r16
    227e:	91 83       	std	Z+1, r25	; 0x01
    2280:	80 83       	st	Z, r24
    2282:	de 01       	movw	r26, r28
    2284:	ab 5a       	subi	r26, 0xAB	; 171
    2286:	bf 4f       	sbci	r27, 0xFF	; 255
    2288:	fe 01       	movw	r30, r28
    228a:	e7 5a       	subi	r30, 0xA7	; 167
    228c:	ff 4f       	sbci	r31, 0xFF	; 255
    228e:	80 81       	ld	r24, Z
    2290:	91 81       	ldd	r25, Z+1	; 0x01
    2292:	8d 93       	st	X+, r24
    2294:	9c 93       	st	X, r25
    2296:	fe 01       	movw	r30, r28
    2298:	eb 5a       	subi	r30, 0xAB	; 171
    229a:	ff 4f       	sbci	r31, 0xFF	; 255
    229c:	80 81       	ld	r24, Z
    229e:	91 81       	ldd	r25, Z+1	; 0x01
    22a0:	01 97       	sbiw	r24, 0x01	; 1
    22a2:	f1 f7       	brne	.-4      	; 0x22a0 <main+0xb9c>
    22a4:	fe 01       	movw	r30, r28
    22a6:	eb 5a       	subi	r30, 0xAB	; 171
    22a8:	ff 4f       	sbci	r31, 0xFF	; 255
    22aa:	91 83       	std	Z+1, r25	; 0x01
    22ac:	80 83       	st	Z, r24
	_delay_ms(500);
	LCD_voidDrawSpecialCharachter(kora5,1,1,13);
    22ae:	ce 01       	movw	r24, r28
    22b0:	8f 51       	subi	r24, 0x1F	; 31
    22b2:	9f 4f       	sbci	r25, 0xFF	; 255
    22b4:	61 e0       	ldi	r22, 0x01	; 1
    22b6:	41 e0       	ldi	r20, 0x01	; 1
    22b8:	2d e0       	ldi	r18, 0x0D	; 13
    22ba:	0e 94 c8 0a 	call	0x1590	; 0x1590 <LCD_voidDrawSpecialCharachter>
    22be:	fe 01       	movw	r30, r28
    22c0:	ef 5a       	subi	r30, 0xAF	; 175
    22c2:	ff 4f       	sbci	r31, 0xFF	; 255
    22c4:	80 e0       	ldi	r24, 0x00	; 0
    22c6:	90 e0       	ldi	r25, 0x00	; 0
    22c8:	aa ef       	ldi	r26, 0xFA	; 250
    22ca:	b3 e4       	ldi	r27, 0x43	; 67
    22cc:	80 83       	st	Z, r24
    22ce:	91 83       	std	Z+1, r25	; 0x01
    22d0:	a2 83       	std	Z+2, r26	; 0x02
    22d2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    22d4:	8e 01       	movw	r16, r28
    22d6:	03 5b       	subi	r16, 0xB3	; 179
    22d8:	1f 4f       	sbci	r17, 0xFF	; 255
    22da:	fe 01       	movw	r30, r28
    22dc:	ef 5a       	subi	r30, 0xAF	; 175
    22de:	ff 4f       	sbci	r31, 0xFF	; 255
    22e0:	60 81       	ld	r22, Z
    22e2:	71 81       	ldd	r23, Z+1	; 0x01
    22e4:	82 81       	ldd	r24, Z+2	; 0x02
    22e6:	93 81       	ldd	r25, Z+3	; 0x03
    22e8:	20 e0       	ldi	r18, 0x00	; 0
    22ea:	30 e0       	ldi	r19, 0x00	; 0
    22ec:	4a ef       	ldi	r20, 0xFA	; 250
    22ee:	54 e4       	ldi	r21, 0x44	; 68
    22f0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    22f4:	dc 01       	movw	r26, r24
    22f6:	cb 01       	movw	r24, r22
    22f8:	f8 01       	movw	r30, r16
    22fa:	80 83       	st	Z, r24
    22fc:	91 83       	std	Z+1, r25	; 0x01
    22fe:	a2 83       	std	Z+2, r26	; 0x02
    2300:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2302:	fe 01       	movw	r30, r28
    2304:	e3 5b       	subi	r30, 0xB3	; 179
    2306:	ff 4f       	sbci	r31, 0xFF	; 255
    2308:	60 81       	ld	r22, Z
    230a:	71 81       	ldd	r23, Z+1	; 0x01
    230c:	82 81       	ldd	r24, Z+2	; 0x02
    230e:	93 81       	ldd	r25, Z+3	; 0x03
    2310:	20 e0       	ldi	r18, 0x00	; 0
    2312:	30 e0       	ldi	r19, 0x00	; 0
    2314:	40 e8       	ldi	r20, 0x80	; 128
    2316:	5f e3       	ldi	r21, 0x3F	; 63
    2318:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    231c:	88 23       	and	r24, r24
    231e:	44 f4       	brge	.+16     	; 0x2330 <main+0xc2c>
		__ticks = 1;
    2320:	fe 01       	movw	r30, r28
    2322:	e5 5b       	subi	r30, 0xB5	; 181
    2324:	ff 4f       	sbci	r31, 0xFF	; 255
    2326:	81 e0       	ldi	r24, 0x01	; 1
    2328:	90 e0       	ldi	r25, 0x00	; 0
    232a:	91 83       	std	Z+1, r25	; 0x01
    232c:	80 83       	st	Z, r24
    232e:	64 c0       	rjmp	.+200    	; 0x23f8 <main+0xcf4>
	else if (__tmp > 65535)
    2330:	fe 01       	movw	r30, r28
    2332:	e3 5b       	subi	r30, 0xB3	; 179
    2334:	ff 4f       	sbci	r31, 0xFF	; 255
    2336:	60 81       	ld	r22, Z
    2338:	71 81       	ldd	r23, Z+1	; 0x01
    233a:	82 81       	ldd	r24, Z+2	; 0x02
    233c:	93 81       	ldd	r25, Z+3	; 0x03
    233e:	20 e0       	ldi	r18, 0x00	; 0
    2340:	3f ef       	ldi	r19, 0xFF	; 255
    2342:	4f e7       	ldi	r20, 0x7F	; 127
    2344:	57 e4       	ldi	r21, 0x47	; 71
    2346:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    234a:	18 16       	cp	r1, r24
    234c:	0c f0       	brlt	.+2      	; 0x2350 <main+0xc4c>
    234e:	43 c0       	rjmp	.+134    	; 0x23d6 <main+0xcd2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2350:	fe 01       	movw	r30, r28
    2352:	ef 5a       	subi	r30, 0xAF	; 175
    2354:	ff 4f       	sbci	r31, 0xFF	; 255
    2356:	60 81       	ld	r22, Z
    2358:	71 81       	ldd	r23, Z+1	; 0x01
    235a:	82 81       	ldd	r24, Z+2	; 0x02
    235c:	93 81       	ldd	r25, Z+3	; 0x03
    235e:	20 e0       	ldi	r18, 0x00	; 0
    2360:	30 e0       	ldi	r19, 0x00	; 0
    2362:	40 e2       	ldi	r20, 0x20	; 32
    2364:	51 e4       	ldi	r21, 0x41	; 65
    2366:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    236a:	dc 01       	movw	r26, r24
    236c:	cb 01       	movw	r24, r22
    236e:	8e 01       	movw	r16, r28
    2370:	05 5b       	subi	r16, 0xB5	; 181
    2372:	1f 4f       	sbci	r17, 0xFF	; 255
    2374:	bc 01       	movw	r22, r24
    2376:	cd 01       	movw	r24, r26
    2378:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    237c:	dc 01       	movw	r26, r24
    237e:	cb 01       	movw	r24, r22
    2380:	f8 01       	movw	r30, r16
    2382:	91 83       	std	Z+1, r25	; 0x01
    2384:	80 83       	st	Z, r24
    2386:	1f c0       	rjmp	.+62     	; 0x23c6 <main+0xcc2>
    2388:	fe 01       	movw	r30, r28
    238a:	e7 5b       	subi	r30, 0xB7	; 183
    238c:	ff 4f       	sbci	r31, 0xFF	; 255
    238e:	88 ec       	ldi	r24, 0xC8	; 200
    2390:	90 e0       	ldi	r25, 0x00	; 0
    2392:	91 83       	std	Z+1, r25	; 0x01
    2394:	80 83       	st	Z, r24
    2396:	fe 01       	movw	r30, r28
    2398:	e7 5b       	subi	r30, 0xB7	; 183
    239a:	ff 4f       	sbci	r31, 0xFF	; 255
    239c:	80 81       	ld	r24, Z
    239e:	91 81       	ldd	r25, Z+1	; 0x01
    23a0:	01 97       	sbiw	r24, 0x01	; 1
    23a2:	f1 f7       	brne	.-4      	; 0x23a0 <main+0xc9c>
    23a4:	fe 01       	movw	r30, r28
    23a6:	e7 5b       	subi	r30, 0xB7	; 183
    23a8:	ff 4f       	sbci	r31, 0xFF	; 255
    23aa:	91 83       	std	Z+1, r25	; 0x01
    23ac:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    23ae:	de 01       	movw	r26, r28
    23b0:	a5 5b       	subi	r26, 0xB5	; 181
    23b2:	bf 4f       	sbci	r27, 0xFF	; 255
    23b4:	fe 01       	movw	r30, r28
    23b6:	e5 5b       	subi	r30, 0xB5	; 181
    23b8:	ff 4f       	sbci	r31, 0xFF	; 255
    23ba:	80 81       	ld	r24, Z
    23bc:	91 81       	ldd	r25, Z+1	; 0x01
    23be:	01 97       	sbiw	r24, 0x01	; 1
    23c0:	11 96       	adiw	r26, 0x01	; 1
    23c2:	9c 93       	st	X, r25
    23c4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    23c6:	fe 01       	movw	r30, r28
    23c8:	e5 5b       	subi	r30, 0xB5	; 181
    23ca:	ff 4f       	sbci	r31, 0xFF	; 255
    23cc:	80 81       	ld	r24, Z
    23ce:	91 81       	ldd	r25, Z+1	; 0x01
    23d0:	00 97       	sbiw	r24, 0x00	; 0
    23d2:	d1 f6       	brne	.-76     	; 0x2388 <main+0xc84>
    23d4:	27 c0       	rjmp	.+78     	; 0x2424 <main+0xd20>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    23d6:	8e 01       	movw	r16, r28
    23d8:	05 5b       	subi	r16, 0xB5	; 181
    23da:	1f 4f       	sbci	r17, 0xFF	; 255
    23dc:	fe 01       	movw	r30, r28
    23de:	e3 5b       	subi	r30, 0xB3	; 179
    23e0:	ff 4f       	sbci	r31, 0xFF	; 255
    23e2:	60 81       	ld	r22, Z
    23e4:	71 81       	ldd	r23, Z+1	; 0x01
    23e6:	82 81       	ldd	r24, Z+2	; 0x02
    23e8:	93 81       	ldd	r25, Z+3	; 0x03
    23ea:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    23ee:	dc 01       	movw	r26, r24
    23f0:	cb 01       	movw	r24, r22
    23f2:	f8 01       	movw	r30, r16
    23f4:	91 83       	std	Z+1, r25	; 0x01
    23f6:	80 83       	st	Z, r24
    23f8:	de 01       	movw	r26, r28
    23fa:	a9 5b       	subi	r26, 0xB9	; 185
    23fc:	bf 4f       	sbci	r27, 0xFF	; 255
    23fe:	fe 01       	movw	r30, r28
    2400:	e5 5b       	subi	r30, 0xB5	; 181
    2402:	ff 4f       	sbci	r31, 0xFF	; 255
    2404:	80 81       	ld	r24, Z
    2406:	91 81       	ldd	r25, Z+1	; 0x01
    2408:	8d 93       	st	X+, r24
    240a:	9c 93       	st	X, r25
    240c:	fe 01       	movw	r30, r28
    240e:	e9 5b       	subi	r30, 0xB9	; 185
    2410:	ff 4f       	sbci	r31, 0xFF	; 255
    2412:	80 81       	ld	r24, Z
    2414:	91 81       	ldd	r25, Z+1	; 0x01
    2416:	01 97       	sbiw	r24, 0x01	; 1
    2418:	f1 f7       	brne	.-4      	; 0x2416 <main+0xd12>
    241a:	fe 01       	movw	r30, r28
    241c:	e9 5b       	subi	r30, 0xB9	; 185
    241e:	ff 4f       	sbci	r31, 0xFF	; 255
    2420:	91 83       	std	Z+1, r25	; 0x01
    2422:	80 83       	st	Z, r24
	_delay_ms(500);

	LCD_voidDrawSpecialCharachter(kora1,1,1,12);
    2424:	ce 01       	movw	r24, r28
    2426:	8f 53       	subi	r24, 0x3F	; 63
    2428:	9f 4f       	sbci	r25, 0xFF	; 255
    242a:	61 e0       	ldi	r22, 0x01	; 1
    242c:	41 e0       	ldi	r20, 0x01	; 1
    242e:	2c e0       	ldi	r18, 0x0C	; 12
    2430:	0e 94 c8 0a 	call	0x1590	; 0x1590 <LCD_voidDrawSpecialCharachter>
    2434:	fe 01       	movw	r30, r28
    2436:	ed 5b       	subi	r30, 0xBD	; 189
    2438:	ff 4f       	sbci	r31, 0xFF	; 255
    243a:	80 e0       	ldi	r24, 0x00	; 0
    243c:	90 e0       	ldi	r25, 0x00	; 0
    243e:	aa ef       	ldi	r26, 0xFA	; 250
    2440:	b3 e4       	ldi	r27, 0x43	; 67
    2442:	80 83       	st	Z, r24
    2444:	91 83       	std	Z+1, r25	; 0x01
    2446:	a2 83       	std	Z+2, r26	; 0x02
    2448:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    244a:	8e 01       	movw	r16, r28
    244c:	01 5c       	subi	r16, 0xC1	; 193
    244e:	1f 4f       	sbci	r17, 0xFF	; 255
    2450:	fe 01       	movw	r30, r28
    2452:	ed 5b       	subi	r30, 0xBD	; 189
    2454:	ff 4f       	sbci	r31, 0xFF	; 255
    2456:	60 81       	ld	r22, Z
    2458:	71 81       	ldd	r23, Z+1	; 0x01
    245a:	82 81       	ldd	r24, Z+2	; 0x02
    245c:	93 81       	ldd	r25, Z+3	; 0x03
    245e:	20 e0       	ldi	r18, 0x00	; 0
    2460:	30 e0       	ldi	r19, 0x00	; 0
    2462:	4a ef       	ldi	r20, 0xFA	; 250
    2464:	54 e4       	ldi	r21, 0x44	; 68
    2466:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    246a:	dc 01       	movw	r26, r24
    246c:	cb 01       	movw	r24, r22
    246e:	f8 01       	movw	r30, r16
    2470:	80 83       	st	Z, r24
    2472:	91 83       	std	Z+1, r25	; 0x01
    2474:	a2 83       	std	Z+2, r26	; 0x02
    2476:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2478:	fe 01       	movw	r30, r28
    247a:	ff 96       	adiw	r30, 0x3f	; 63
    247c:	60 81       	ld	r22, Z
    247e:	71 81       	ldd	r23, Z+1	; 0x01
    2480:	82 81       	ldd	r24, Z+2	; 0x02
    2482:	93 81       	ldd	r25, Z+3	; 0x03
    2484:	20 e0       	ldi	r18, 0x00	; 0
    2486:	30 e0       	ldi	r19, 0x00	; 0
    2488:	40 e8       	ldi	r20, 0x80	; 128
    248a:	5f e3       	ldi	r21, 0x3F	; 63
    248c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2490:	88 23       	and	r24, r24
    2492:	2c f4       	brge	.+10     	; 0x249e <main+0xd9a>
		__ticks = 1;
    2494:	81 e0       	ldi	r24, 0x01	; 1
    2496:	90 e0       	ldi	r25, 0x00	; 0
    2498:	9e af       	std	Y+62, r25	; 0x3e
    249a:	8d af       	std	Y+61, r24	; 0x3d
    249c:	46 c0       	rjmp	.+140    	; 0x252a <main+0xe26>
	else if (__tmp > 65535)
    249e:	fe 01       	movw	r30, r28
    24a0:	ff 96       	adiw	r30, 0x3f	; 63
    24a2:	60 81       	ld	r22, Z
    24a4:	71 81       	ldd	r23, Z+1	; 0x01
    24a6:	82 81       	ldd	r24, Z+2	; 0x02
    24a8:	93 81       	ldd	r25, Z+3	; 0x03
    24aa:	20 e0       	ldi	r18, 0x00	; 0
    24ac:	3f ef       	ldi	r19, 0xFF	; 255
    24ae:	4f e7       	ldi	r20, 0x7F	; 127
    24b0:	57 e4       	ldi	r21, 0x47	; 71
    24b2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    24b6:	18 16       	cp	r1, r24
    24b8:	64 f5       	brge	.+88     	; 0x2512 <main+0xe0e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    24ba:	fe 01       	movw	r30, r28
    24bc:	ed 5b       	subi	r30, 0xBD	; 189
    24be:	ff 4f       	sbci	r31, 0xFF	; 255
    24c0:	60 81       	ld	r22, Z
    24c2:	71 81       	ldd	r23, Z+1	; 0x01
    24c4:	82 81       	ldd	r24, Z+2	; 0x02
    24c6:	93 81       	ldd	r25, Z+3	; 0x03
    24c8:	20 e0       	ldi	r18, 0x00	; 0
    24ca:	30 e0       	ldi	r19, 0x00	; 0
    24cc:	40 e2       	ldi	r20, 0x20	; 32
    24ce:	51 e4       	ldi	r21, 0x41	; 65
    24d0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    24d4:	dc 01       	movw	r26, r24
    24d6:	cb 01       	movw	r24, r22
    24d8:	bc 01       	movw	r22, r24
    24da:	cd 01       	movw	r24, r26
    24dc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    24e0:	dc 01       	movw	r26, r24
    24e2:	cb 01       	movw	r24, r22
    24e4:	9e af       	std	Y+62, r25	; 0x3e
    24e6:	8d af       	std	Y+61, r24	; 0x3d
    24e8:	0f c0       	rjmp	.+30     	; 0x2508 <main+0xe04>
    24ea:	88 ec       	ldi	r24, 0xC8	; 200
    24ec:	90 e0       	ldi	r25, 0x00	; 0
    24ee:	9c af       	std	Y+60, r25	; 0x3c
    24f0:	8b af       	std	Y+59, r24	; 0x3b
    24f2:	8b ad       	ldd	r24, Y+59	; 0x3b
    24f4:	9c ad       	ldd	r25, Y+60	; 0x3c
    24f6:	01 97       	sbiw	r24, 0x01	; 1
    24f8:	f1 f7       	brne	.-4      	; 0x24f6 <main+0xdf2>
    24fa:	9c af       	std	Y+60, r25	; 0x3c
    24fc:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    24fe:	8d ad       	ldd	r24, Y+61	; 0x3d
    2500:	9e ad       	ldd	r25, Y+62	; 0x3e
    2502:	01 97       	sbiw	r24, 0x01	; 1
    2504:	9e af       	std	Y+62, r25	; 0x3e
    2506:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2508:	8d ad       	ldd	r24, Y+61	; 0x3d
    250a:	9e ad       	ldd	r25, Y+62	; 0x3e
    250c:	00 97       	sbiw	r24, 0x00	; 0
    250e:	69 f7       	brne	.-38     	; 0x24ea <main+0xde6>
    2510:	16 c0       	rjmp	.+44     	; 0x253e <main+0xe3a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2512:	fe 01       	movw	r30, r28
    2514:	ff 96       	adiw	r30, 0x3f	; 63
    2516:	60 81       	ld	r22, Z
    2518:	71 81       	ldd	r23, Z+1	; 0x01
    251a:	82 81       	ldd	r24, Z+2	; 0x02
    251c:	93 81       	ldd	r25, Z+3	; 0x03
    251e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2522:	dc 01       	movw	r26, r24
    2524:	cb 01       	movw	r24, r22
    2526:	9e af       	std	Y+62, r25	; 0x3e
    2528:	8d af       	std	Y+61, r24	; 0x3d
    252a:	8d ad       	ldd	r24, Y+61	; 0x3d
    252c:	9e ad       	ldd	r25, Y+62	; 0x3e
    252e:	9a af       	std	Y+58, r25	; 0x3a
    2530:	89 af       	std	Y+57, r24	; 0x39
    2532:	89 ad       	ldd	r24, Y+57	; 0x39
    2534:	9a ad       	ldd	r25, Y+58	; 0x3a
    2536:	01 97       	sbiw	r24, 0x01	; 1
    2538:	f1 f7       	brne	.-4      	; 0x2536 <main+0xe32>
    253a:	9a af       	std	Y+58, r25	; 0x3a
    253c:	89 af       	std	Y+57, r24	; 0x39
	_delay_ms(500);
	LCD_voidDrawSpecialCharachter(kora2,1,1,12);
    253e:	ce 01       	movw	r24, r28
    2540:	87 53       	subi	r24, 0x37	; 55
    2542:	9f 4f       	sbci	r25, 0xFF	; 255
    2544:	61 e0       	ldi	r22, 0x01	; 1
    2546:	41 e0       	ldi	r20, 0x01	; 1
    2548:	2c e0       	ldi	r18, 0x0C	; 12
    254a:	0e 94 c8 0a 	call	0x1590	; 0x1590 <LCD_voidDrawSpecialCharachter>
    254e:	80 e0       	ldi	r24, 0x00	; 0
    2550:	90 e0       	ldi	r25, 0x00	; 0
    2552:	aa ef       	ldi	r26, 0xFA	; 250
    2554:	b3 e4       	ldi	r27, 0x43	; 67
    2556:	8d ab       	std	Y+53, r24	; 0x35
    2558:	9e ab       	std	Y+54, r25	; 0x36
    255a:	af ab       	std	Y+55, r26	; 0x37
    255c:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    255e:	6d a9       	ldd	r22, Y+53	; 0x35
    2560:	7e a9       	ldd	r23, Y+54	; 0x36
    2562:	8f a9       	ldd	r24, Y+55	; 0x37
    2564:	98 ad       	ldd	r25, Y+56	; 0x38
    2566:	20 e0       	ldi	r18, 0x00	; 0
    2568:	30 e0       	ldi	r19, 0x00	; 0
    256a:	4a ef       	ldi	r20, 0xFA	; 250
    256c:	54 e4       	ldi	r21, 0x44	; 68
    256e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2572:	dc 01       	movw	r26, r24
    2574:	cb 01       	movw	r24, r22
    2576:	89 ab       	std	Y+49, r24	; 0x31
    2578:	9a ab       	std	Y+50, r25	; 0x32
    257a:	ab ab       	std	Y+51, r26	; 0x33
    257c:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    257e:	69 a9       	ldd	r22, Y+49	; 0x31
    2580:	7a a9       	ldd	r23, Y+50	; 0x32
    2582:	8b a9       	ldd	r24, Y+51	; 0x33
    2584:	9c a9       	ldd	r25, Y+52	; 0x34
    2586:	20 e0       	ldi	r18, 0x00	; 0
    2588:	30 e0       	ldi	r19, 0x00	; 0
    258a:	40 e8       	ldi	r20, 0x80	; 128
    258c:	5f e3       	ldi	r21, 0x3F	; 63
    258e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2592:	88 23       	and	r24, r24
    2594:	2c f4       	brge	.+10     	; 0x25a0 <main+0xe9c>
		__ticks = 1;
    2596:	81 e0       	ldi	r24, 0x01	; 1
    2598:	90 e0       	ldi	r25, 0x00	; 0
    259a:	98 ab       	std	Y+48, r25	; 0x30
    259c:	8f a7       	std	Y+47, r24	; 0x2f
    259e:	3f c0       	rjmp	.+126    	; 0x261e <main+0xf1a>
	else if (__tmp > 65535)
    25a0:	69 a9       	ldd	r22, Y+49	; 0x31
    25a2:	7a a9       	ldd	r23, Y+50	; 0x32
    25a4:	8b a9       	ldd	r24, Y+51	; 0x33
    25a6:	9c a9       	ldd	r25, Y+52	; 0x34
    25a8:	20 e0       	ldi	r18, 0x00	; 0
    25aa:	3f ef       	ldi	r19, 0xFF	; 255
    25ac:	4f e7       	ldi	r20, 0x7F	; 127
    25ae:	57 e4       	ldi	r21, 0x47	; 71
    25b0:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    25b4:	18 16       	cp	r1, r24
    25b6:	4c f5       	brge	.+82     	; 0x260a <main+0xf06>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    25b8:	6d a9       	ldd	r22, Y+53	; 0x35
    25ba:	7e a9       	ldd	r23, Y+54	; 0x36
    25bc:	8f a9       	ldd	r24, Y+55	; 0x37
    25be:	98 ad       	ldd	r25, Y+56	; 0x38
    25c0:	20 e0       	ldi	r18, 0x00	; 0
    25c2:	30 e0       	ldi	r19, 0x00	; 0
    25c4:	40 e2       	ldi	r20, 0x20	; 32
    25c6:	51 e4       	ldi	r21, 0x41	; 65
    25c8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    25cc:	dc 01       	movw	r26, r24
    25ce:	cb 01       	movw	r24, r22
    25d0:	bc 01       	movw	r22, r24
    25d2:	cd 01       	movw	r24, r26
    25d4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    25d8:	dc 01       	movw	r26, r24
    25da:	cb 01       	movw	r24, r22
    25dc:	98 ab       	std	Y+48, r25	; 0x30
    25de:	8f a7       	std	Y+47, r24	; 0x2f
    25e0:	0f c0       	rjmp	.+30     	; 0x2600 <main+0xefc>
    25e2:	88 ec       	ldi	r24, 0xC8	; 200
    25e4:	90 e0       	ldi	r25, 0x00	; 0
    25e6:	9e a7       	std	Y+46, r25	; 0x2e
    25e8:	8d a7       	std	Y+45, r24	; 0x2d
    25ea:	8d a5       	ldd	r24, Y+45	; 0x2d
    25ec:	9e a5       	ldd	r25, Y+46	; 0x2e
    25ee:	01 97       	sbiw	r24, 0x01	; 1
    25f0:	f1 f7       	brne	.-4      	; 0x25ee <main+0xeea>
    25f2:	9e a7       	std	Y+46, r25	; 0x2e
    25f4:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    25f6:	8f a5       	ldd	r24, Y+47	; 0x2f
    25f8:	98 a9       	ldd	r25, Y+48	; 0x30
    25fa:	01 97       	sbiw	r24, 0x01	; 1
    25fc:	98 ab       	std	Y+48, r25	; 0x30
    25fe:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2600:	8f a5       	ldd	r24, Y+47	; 0x2f
    2602:	98 a9       	ldd	r25, Y+48	; 0x30
    2604:	00 97       	sbiw	r24, 0x00	; 0
    2606:	69 f7       	brne	.-38     	; 0x25e2 <main+0xede>
    2608:	14 c0       	rjmp	.+40     	; 0x2632 <main+0xf2e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    260a:	69 a9       	ldd	r22, Y+49	; 0x31
    260c:	7a a9       	ldd	r23, Y+50	; 0x32
    260e:	8b a9       	ldd	r24, Y+51	; 0x33
    2610:	9c a9       	ldd	r25, Y+52	; 0x34
    2612:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2616:	dc 01       	movw	r26, r24
    2618:	cb 01       	movw	r24, r22
    261a:	98 ab       	std	Y+48, r25	; 0x30
    261c:	8f a7       	std	Y+47, r24	; 0x2f
    261e:	8f a5       	ldd	r24, Y+47	; 0x2f
    2620:	98 a9       	ldd	r25, Y+48	; 0x30
    2622:	9c a7       	std	Y+44, r25	; 0x2c
    2624:	8b a7       	std	Y+43, r24	; 0x2b
    2626:	8b a5       	ldd	r24, Y+43	; 0x2b
    2628:	9c a5       	ldd	r25, Y+44	; 0x2c
    262a:	01 97       	sbiw	r24, 0x01	; 1
    262c:	f1 f7       	brne	.-4      	; 0x262a <main+0xf26>
    262e:	9c a7       	std	Y+44, r25	; 0x2c
    2630:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(500);
	LCD_voidDrawSpecialCharachter(kora3,1,1,12);
    2632:	ce 01       	movw	r24, r28
    2634:	8f 52       	subi	r24, 0x2F	; 47
    2636:	9f 4f       	sbci	r25, 0xFF	; 255
    2638:	61 e0       	ldi	r22, 0x01	; 1
    263a:	41 e0       	ldi	r20, 0x01	; 1
    263c:	2c e0       	ldi	r18, 0x0C	; 12
    263e:	0e 94 c8 0a 	call	0x1590	; 0x1590 <LCD_voidDrawSpecialCharachter>
    2642:	80 e0       	ldi	r24, 0x00	; 0
    2644:	90 e0       	ldi	r25, 0x00	; 0
    2646:	aa ef       	ldi	r26, 0xFA	; 250
    2648:	b3 e4       	ldi	r27, 0x43	; 67
    264a:	8f a3       	std	Y+39, r24	; 0x27
    264c:	98 a7       	std	Y+40, r25	; 0x28
    264e:	a9 a7       	std	Y+41, r26	; 0x29
    2650:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2652:	6f a1       	ldd	r22, Y+39	; 0x27
    2654:	78 a5       	ldd	r23, Y+40	; 0x28
    2656:	89 a5       	ldd	r24, Y+41	; 0x29
    2658:	9a a5       	ldd	r25, Y+42	; 0x2a
    265a:	20 e0       	ldi	r18, 0x00	; 0
    265c:	30 e0       	ldi	r19, 0x00	; 0
    265e:	4a ef       	ldi	r20, 0xFA	; 250
    2660:	54 e4       	ldi	r21, 0x44	; 68
    2662:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2666:	dc 01       	movw	r26, r24
    2668:	cb 01       	movw	r24, r22
    266a:	8b a3       	std	Y+35, r24	; 0x23
    266c:	9c a3       	std	Y+36, r25	; 0x24
    266e:	ad a3       	std	Y+37, r26	; 0x25
    2670:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    2672:	6b a1       	ldd	r22, Y+35	; 0x23
    2674:	7c a1       	ldd	r23, Y+36	; 0x24
    2676:	8d a1       	ldd	r24, Y+37	; 0x25
    2678:	9e a1       	ldd	r25, Y+38	; 0x26
    267a:	20 e0       	ldi	r18, 0x00	; 0
    267c:	30 e0       	ldi	r19, 0x00	; 0
    267e:	40 e8       	ldi	r20, 0x80	; 128
    2680:	5f e3       	ldi	r21, 0x3F	; 63
    2682:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2686:	88 23       	and	r24, r24
    2688:	2c f4       	brge	.+10     	; 0x2694 <main+0xf90>
		__ticks = 1;
    268a:	81 e0       	ldi	r24, 0x01	; 1
    268c:	90 e0       	ldi	r25, 0x00	; 0
    268e:	9a a3       	std	Y+34, r25	; 0x22
    2690:	89 a3       	std	Y+33, r24	; 0x21
    2692:	3f c0       	rjmp	.+126    	; 0x2712 <main+0x100e>
	else if (__tmp > 65535)
    2694:	6b a1       	ldd	r22, Y+35	; 0x23
    2696:	7c a1       	ldd	r23, Y+36	; 0x24
    2698:	8d a1       	ldd	r24, Y+37	; 0x25
    269a:	9e a1       	ldd	r25, Y+38	; 0x26
    269c:	20 e0       	ldi	r18, 0x00	; 0
    269e:	3f ef       	ldi	r19, 0xFF	; 255
    26a0:	4f e7       	ldi	r20, 0x7F	; 127
    26a2:	57 e4       	ldi	r21, 0x47	; 71
    26a4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    26a8:	18 16       	cp	r1, r24
    26aa:	4c f5       	brge	.+82     	; 0x26fe <main+0xffa>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    26ac:	6f a1       	ldd	r22, Y+39	; 0x27
    26ae:	78 a5       	ldd	r23, Y+40	; 0x28
    26b0:	89 a5       	ldd	r24, Y+41	; 0x29
    26b2:	9a a5       	ldd	r25, Y+42	; 0x2a
    26b4:	20 e0       	ldi	r18, 0x00	; 0
    26b6:	30 e0       	ldi	r19, 0x00	; 0
    26b8:	40 e2       	ldi	r20, 0x20	; 32
    26ba:	51 e4       	ldi	r21, 0x41	; 65
    26bc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    26c0:	dc 01       	movw	r26, r24
    26c2:	cb 01       	movw	r24, r22
    26c4:	bc 01       	movw	r22, r24
    26c6:	cd 01       	movw	r24, r26
    26c8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    26cc:	dc 01       	movw	r26, r24
    26ce:	cb 01       	movw	r24, r22
    26d0:	9a a3       	std	Y+34, r25	; 0x22
    26d2:	89 a3       	std	Y+33, r24	; 0x21
    26d4:	0f c0       	rjmp	.+30     	; 0x26f4 <main+0xff0>
    26d6:	88 ec       	ldi	r24, 0xC8	; 200
    26d8:	90 e0       	ldi	r25, 0x00	; 0
    26da:	98 a3       	std	Y+32, r25	; 0x20
    26dc:	8f 8f       	std	Y+31, r24	; 0x1f
    26de:	8f 8d       	ldd	r24, Y+31	; 0x1f
    26e0:	98 a1       	ldd	r25, Y+32	; 0x20
    26e2:	01 97       	sbiw	r24, 0x01	; 1
    26e4:	f1 f7       	brne	.-4      	; 0x26e2 <main+0xfde>
    26e6:	98 a3       	std	Y+32, r25	; 0x20
    26e8:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    26ea:	89 a1       	ldd	r24, Y+33	; 0x21
    26ec:	9a a1       	ldd	r25, Y+34	; 0x22
    26ee:	01 97       	sbiw	r24, 0x01	; 1
    26f0:	9a a3       	std	Y+34, r25	; 0x22
    26f2:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    26f4:	89 a1       	ldd	r24, Y+33	; 0x21
    26f6:	9a a1       	ldd	r25, Y+34	; 0x22
    26f8:	00 97       	sbiw	r24, 0x00	; 0
    26fa:	69 f7       	brne	.-38     	; 0x26d6 <main+0xfd2>
    26fc:	14 c0       	rjmp	.+40     	; 0x2726 <main+0x1022>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    26fe:	6b a1       	ldd	r22, Y+35	; 0x23
    2700:	7c a1       	ldd	r23, Y+36	; 0x24
    2702:	8d a1       	ldd	r24, Y+37	; 0x25
    2704:	9e a1       	ldd	r25, Y+38	; 0x26
    2706:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    270a:	dc 01       	movw	r26, r24
    270c:	cb 01       	movw	r24, r22
    270e:	9a a3       	std	Y+34, r25	; 0x22
    2710:	89 a3       	std	Y+33, r24	; 0x21
    2712:	89 a1       	ldd	r24, Y+33	; 0x21
    2714:	9a a1       	ldd	r25, Y+34	; 0x22
    2716:	9e 8f       	std	Y+30, r25	; 0x1e
    2718:	8d 8f       	std	Y+29, r24	; 0x1d
    271a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    271c:	9e 8d       	ldd	r25, Y+30	; 0x1e
    271e:	01 97       	sbiw	r24, 0x01	; 1
    2720:	f1 f7       	brne	.-4      	; 0x271e <main+0x101a>
    2722:	9e 8f       	std	Y+30, r25	; 0x1e
    2724:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(500);
	LCD_voidDrawSpecialCharachter(kora4,1,1,12);
    2726:	ce 01       	movw	r24, r28
    2728:	87 52       	subi	r24, 0x27	; 39
    272a:	9f 4f       	sbci	r25, 0xFF	; 255
    272c:	61 e0       	ldi	r22, 0x01	; 1
    272e:	41 e0       	ldi	r20, 0x01	; 1
    2730:	2c e0       	ldi	r18, 0x0C	; 12
    2732:	0e 94 c8 0a 	call	0x1590	; 0x1590 <LCD_voidDrawSpecialCharachter>
    2736:	80 e0       	ldi	r24, 0x00	; 0
    2738:	90 e0       	ldi	r25, 0x00	; 0
    273a:	aa ef       	ldi	r26, 0xFA	; 250
    273c:	b3 e4       	ldi	r27, 0x43	; 67
    273e:	89 8f       	std	Y+25, r24	; 0x19
    2740:	9a 8f       	std	Y+26, r25	; 0x1a
    2742:	ab 8f       	std	Y+27, r26	; 0x1b
    2744:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2746:	69 8d       	ldd	r22, Y+25	; 0x19
    2748:	7a 8d       	ldd	r23, Y+26	; 0x1a
    274a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    274c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    274e:	20 e0       	ldi	r18, 0x00	; 0
    2750:	30 e0       	ldi	r19, 0x00	; 0
    2752:	4a ef       	ldi	r20, 0xFA	; 250
    2754:	54 e4       	ldi	r21, 0x44	; 68
    2756:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    275a:	dc 01       	movw	r26, r24
    275c:	cb 01       	movw	r24, r22
    275e:	8d 8b       	std	Y+21, r24	; 0x15
    2760:	9e 8b       	std	Y+22, r25	; 0x16
    2762:	af 8b       	std	Y+23, r26	; 0x17
    2764:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2766:	6d 89       	ldd	r22, Y+21	; 0x15
    2768:	7e 89       	ldd	r23, Y+22	; 0x16
    276a:	8f 89       	ldd	r24, Y+23	; 0x17
    276c:	98 8d       	ldd	r25, Y+24	; 0x18
    276e:	20 e0       	ldi	r18, 0x00	; 0
    2770:	30 e0       	ldi	r19, 0x00	; 0
    2772:	40 e8       	ldi	r20, 0x80	; 128
    2774:	5f e3       	ldi	r21, 0x3F	; 63
    2776:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    277a:	88 23       	and	r24, r24
    277c:	2c f4       	brge	.+10     	; 0x2788 <main+0x1084>
		__ticks = 1;
    277e:	81 e0       	ldi	r24, 0x01	; 1
    2780:	90 e0       	ldi	r25, 0x00	; 0
    2782:	9c 8b       	std	Y+20, r25	; 0x14
    2784:	8b 8b       	std	Y+19, r24	; 0x13
    2786:	3f c0       	rjmp	.+126    	; 0x2806 <main+0x1102>
	else if (__tmp > 65535)
    2788:	6d 89       	ldd	r22, Y+21	; 0x15
    278a:	7e 89       	ldd	r23, Y+22	; 0x16
    278c:	8f 89       	ldd	r24, Y+23	; 0x17
    278e:	98 8d       	ldd	r25, Y+24	; 0x18
    2790:	20 e0       	ldi	r18, 0x00	; 0
    2792:	3f ef       	ldi	r19, 0xFF	; 255
    2794:	4f e7       	ldi	r20, 0x7F	; 127
    2796:	57 e4       	ldi	r21, 0x47	; 71
    2798:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    279c:	18 16       	cp	r1, r24
    279e:	4c f5       	brge	.+82     	; 0x27f2 <main+0x10ee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    27a0:	69 8d       	ldd	r22, Y+25	; 0x19
    27a2:	7a 8d       	ldd	r23, Y+26	; 0x1a
    27a4:	8b 8d       	ldd	r24, Y+27	; 0x1b
    27a6:	9c 8d       	ldd	r25, Y+28	; 0x1c
    27a8:	20 e0       	ldi	r18, 0x00	; 0
    27aa:	30 e0       	ldi	r19, 0x00	; 0
    27ac:	40 e2       	ldi	r20, 0x20	; 32
    27ae:	51 e4       	ldi	r21, 0x41	; 65
    27b0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    27b4:	dc 01       	movw	r26, r24
    27b6:	cb 01       	movw	r24, r22
    27b8:	bc 01       	movw	r22, r24
    27ba:	cd 01       	movw	r24, r26
    27bc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    27c0:	dc 01       	movw	r26, r24
    27c2:	cb 01       	movw	r24, r22
    27c4:	9c 8b       	std	Y+20, r25	; 0x14
    27c6:	8b 8b       	std	Y+19, r24	; 0x13
    27c8:	0f c0       	rjmp	.+30     	; 0x27e8 <main+0x10e4>
    27ca:	88 ec       	ldi	r24, 0xC8	; 200
    27cc:	90 e0       	ldi	r25, 0x00	; 0
    27ce:	9a 8b       	std	Y+18, r25	; 0x12
    27d0:	89 8b       	std	Y+17, r24	; 0x11
    27d2:	89 89       	ldd	r24, Y+17	; 0x11
    27d4:	9a 89       	ldd	r25, Y+18	; 0x12
    27d6:	01 97       	sbiw	r24, 0x01	; 1
    27d8:	f1 f7       	brne	.-4      	; 0x27d6 <main+0x10d2>
    27da:	9a 8b       	std	Y+18, r25	; 0x12
    27dc:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    27de:	8b 89       	ldd	r24, Y+19	; 0x13
    27e0:	9c 89       	ldd	r25, Y+20	; 0x14
    27e2:	01 97       	sbiw	r24, 0x01	; 1
    27e4:	9c 8b       	std	Y+20, r25	; 0x14
    27e6:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    27e8:	8b 89       	ldd	r24, Y+19	; 0x13
    27ea:	9c 89       	ldd	r25, Y+20	; 0x14
    27ec:	00 97       	sbiw	r24, 0x00	; 0
    27ee:	69 f7       	brne	.-38     	; 0x27ca <main+0x10c6>
    27f0:	14 c0       	rjmp	.+40     	; 0x281a <main+0x1116>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    27f2:	6d 89       	ldd	r22, Y+21	; 0x15
    27f4:	7e 89       	ldd	r23, Y+22	; 0x16
    27f6:	8f 89       	ldd	r24, Y+23	; 0x17
    27f8:	98 8d       	ldd	r25, Y+24	; 0x18
    27fa:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    27fe:	dc 01       	movw	r26, r24
    2800:	cb 01       	movw	r24, r22
    2802:	9c 8b       	std	Y+20, r25	; 0x14
    2804:	8b 8b       	std	Y+19, r24	; 0x13
    2806:	8b 89       	ldd	r24, Y+19	; 0x13
    2808:	9c 89       	ldd	r25, Y+20	; 0x14
    280a:	98 8b       	std	Y+16, r25	; 0x10
    280c:	8f 87       	std	Y+15, r24	; 0x0f
    280e:	8f 85       	ldd	r24, Y+15	; 0x0f
    2810:	98 89       	ldd	r25, Y+16	; 0x10
    2812:	01 97       	sbiw	r24, 0x01	; 1
    2814:	f1 f7       	brne	.-4      	; 0x2812 <main+0x110e>
    2816:	98 8b       	std	Y+16, r25	; 0x10
    2818:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(500);
	LCD_voidDrawSpecialCharachter(ArabicLetterA,2,1,12);
    281a:	ce 01       	movw	r24, r28
    281c:	87 55       	subi	r24, 0x57	; 87
    281e:	9f 4f       	sbci	r25, 0xFF	; 255
    2820:	62 e0       	ldi	r22, 0x02	; 2
    2822:	41 e0       	ldi	r20, 0x01	; 1
    2824:	2c e0       	ldi	r18, 0x0C	; 12
    2826:	0e 94 c8 0a 	call	0x1590	; 0x1590 <LCD_voidDrawSpecialCharachter>
    282a:	80 e0       	ldi	r24, 0x00	; 0
    282c:	90 e0       	ldi	r25, 0x00	; 0
    282e:	a8 ec       	ldi	r26, 0xC8	; 200
    2830:	b2 e4       	ldi	r27, 0x42	; 66
    2832:	8b 87       	std	Y+11, r24	; 0x0b
    2834:	9c 87       	std	Y+12, r25	; 0x0c
    2836:	ad 87       	std	Y+13, r26	; 0x0d
    2838:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    283a:	6b 85       	ldd	r22, Y+11	; 0x0b
    283c:	7c 85       	ldd	r23, Y+12	; 0x0c
    283e:	8d 85       	ldd	r24, Y+13	; 0x0d
    2840:	9e 85       	ldd	r25, Y+14	; 0x0e
    2842:	20 e0       	ldi	r18, 0x00	; 0
    2844:	30 e0       	ldi	r19, 0x00	; 0
    2846:	4a ef       	ldi	r20, 0xFA	; 250
    2848:	54 e4       	ldi	r21, 0x44	; 68
    284a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    284e:	dc 01       	movw	r26, r24
    2850:	cb 01       	movw	r24, r22
    2852:	8f 83       	std	Y+7, r24	; 0x07
    2854:	98 87       	std	Y+8, r25	; 0x08
    2856:	a9 87       	std	Y+9, r26	; 0x09
    2858:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    285a:	6f 81       	ldd	r22, Y+7	; 0x07
    285c:	78 85       	ldd	r23, Y+8	; 0x08
    285e:	89 85       	ldd	r24, Y+9	; 0x09
    2860:	9a 85       	ldd	r25, Y+10	; 0x0a
    2862:	20 e0       	ldi	r18, 0x00	; 0
    2864:	30 e0       	ldi	r19, 0x00	; 0
    2866:	40 e8       	ldi	r20, 0x80	; 128
    2868:	5f e3       	ldi	r21, 0x3F	; 63
    286a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    286e:	88 23       	and	r24, r24
    2870:	2c f4       	brge	.+10     	; 0x287c <main+0x1178>
		__ticks = 1;
    2872:	81 e0       	ldi	r24, 0x01	; 1
    2874:	90 e0       	ldi	r25, 0x00	; 0
    2876:	9e 83       	std	Y+6, r25	; 0x06
    2878:	8d 83       	std	Y+5, r24	; 0x05
    287a:	3f c0       	rjmp	.+126    	; 0x28fa <main+0x11f6>
	else if (__tmp > 65535)
    287c:	6f 81       	ldd	r22, Y+7	; 0x07
    287e:	78 85       	ldd	r23, Y+8	; 0x08
    2880:	89 85       	ldd	r24, Y+9	; 0x09
    2882:	9a 85       	ldd	r25, Y+10	; 0x0a
    2884:	20 e0       	ldi	r18, 0x00	; 0
    2886:	3f ef       	ldi	r19, 0xFF	; 255
    2888:	4f e7       	ldi	r20, 0x7F	; 127
    288a:	57 e4       	ldi	r21, 0x47	; 71
    288c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2890:	18 16       	cp	r1, r24
    2892:	4c f5       	brge	.+82     	; 0x28e6 <main+0x11e2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2894:	6b 85       	ldd	r22, Y+11	; 0x0b
    2896:	7c 85       	ldd	r23, Y+12	; 0x0c
    2898:	8d 85       	ldd	r24, Y+13	; 0x0d
    289a:	9e 85       	ldd	r25, Y+14	; 0x0e
    289c:	20 e0       	ldi	r18, 0x00	; 0
    289e:	30 e0       	ldi	r19, 0x00	; 0
    28a0:	40 e2       	ldi	r20, 0x20	; 32
    28a2:	51 e4       	ldi	r21, 0x41	; 65
    28a4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    28a8:	dc 01       	movw	r26, r24
    28aa:	cb 01       	movw	r24, r22
    28ac:	bc 01       	movw	r22, r24
    28ae:	cd 01       	movw	r24, r26
    28b0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    28b4:	dc 01       	movw	r26, r24
    28b6:	cb 01       	movw	r24, r22
    28b8:	9e 83       	std	Y+6, r25	; 0x06
    28ba:	8d 83       	std	Y+5, r24	; 0x05
    28bc:	0f c0       	rjmp	.+30     	; 0x28dc <main+0x11d8>
    28be:	88 ec       	ldi	r24, 0xC8	; 200
    28c0:	90 e0       	ldi	r25, 0x00	; 0
    28c2:	9c 83       	std	Y+4, r25	; 0x04
    28c4:	8b 83       	std	Y+3, r24	; 0x03
    28c6:	8b 81       	ldd	r24, Y+3	; 0x03
    28c8:	9c 81       	ldd	r25, Y+4	; 0x04
    28ca:	01 97       	sbiw	r24, 0x01	; 1
    28cc:	f1 f7       	brne	.-4      	; 0x28ca <main+0x11c6>
    28ce:	9c 83       	std	Y+4, r25	; 0x04
    28d0:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    28d2:	8d 81       	ldd	r24, Y+5	; 0x05
    28d4:	9e 81       	ldd	r25, Y+6	; 0x06
    28d6:	01 97       	sbiw	r24, 0x01	; 1
    28d8:	9e 83       	std	Y+6, r25	; 0x06
    28da:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    28dc:	8d 81       	ldd	r24, Y+5	; 0x05
    28de:	9e 81       	ldd	r25, Y+6	; 0x06
    28e0:	00 97       	sbiw	r24, 0x00	; 0
    28e2:	69 f7       	brne	.-38     	; 0x28be <main+0x11ba>
    28e4:	14 c0       	rjmp	.+40     	; 0x290e <main+0x120a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    28e6:	6f 81       	ldd	r22, Y+7	; 0x07
    28e8:	78 85       	ldd	r23, Y+8	; 0x08
    28ea:	89 85       	ldd	r24, Y+9	; 0x09
    28ec:	9a 85       	ldd	r25, Y+10	; 0x0a
    28ee:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    28f2:	dc 01       	movw	r26, r24
    28f4:	cb 01       	movw	r24, r22
    28f6:	9e 83       	std	Y+6, r25	; 0x06
    28f8:	8d 83       	std	Y+5, r24	; 0x05
    28fa:	8d 81       	ldd	r24, Y+5	; 0x05
    28fc:	9e 81       	ldd	r25, Y+6	; 0x06
    28fe:	9a 83       	std	Y+2, r25	; 0x02
    2900:	89 83       	std	Y+1, r24	; 0x01
    2902:	89 81       	ldd	r24, Y+1	; 0x01
    2904:	9a 81       	ldd	r25, Y+2	; 0x02
    2906:	01 97       	sbiw	r24, 0x01	; 1
    2908:	f1 f7       	brne	.-4      	; 0x2906 <main+0x1202>
    290a:	9a 83       	std	Y+2, r25	; 0x02
    290c:	89 83       	std	Y+1, r24	; 0x01
_delay_ms(100);
LCD_voidSendCommand(0b00000001);
    290e:	81 e0       	ldi	r24, 0x01	; 1
    2910:	0e 94 a5 08 	call	0x114a	; 0x114a <LCD_voidSendCommand>

LCD_voidSendString("GOAL!!!!!");
    2914:	89 e7       	ldi	r24, 0x79	; 121
    2916:	90 e0       	ldi	r25, 0x00	; 0
    2918:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_voidSendString>
    LCD_voidDrawSpecialCharachter(ArabicLetterY,7,0,5);

	 */


}
    291c:	c9 50       	subi	r28, 0x09	; 9
    291e:	df 4f       	sbci	r29, 0xFF	; 255
    2920:	0f b6       	in	r0, 0x3f	; 63
    2922:	f8 94       	cli
    2924:	de bf       	out	0x3e, r29	; 62
    2926:	0f be       	out	0x3f, r0	; 63
    2928:	cd bf       	out	0x3d, r28	; 61
    292a:	cf 91       	pop	r28
    292c:	df 91       	pop	r29
    292e:	1f 91       	pop	r17
    2930:	0f 91       	pop	r16
    2932:	08 95       	ret

00002934 <__udivmodsi4>:
    2934:	a1 e2       	ldi	r26, 0x21	; 33
    2936:	1a 2e       	mov	r1, r26
    2938:	aa 1b       	sub	r26, r26
    293a:	bb 1b       	sub	r27, r27
    293c:	fd 01       	movw	r30, r26
    293e:	0d c0       	rjmp	.+26     	; 0x295a <__udivmodsi4_ep>

00002940 <__udivmodsi4_loop>:
    2940:	aa 1f       	adc	r26, r26
    2942:	bb 1f       	adc	r27, r27
    2944:	ee 1f       	adc	r30, r30
    2946:	ff 1f       	adc	r31, r31
    2948:	a2 17       	cp	r26, r18
    294a:	b3 07       	cpc	r27, r19
    294c:	e4 07       	cpc	r30, r20
    294e:	f5 07       	cpc	r31, r21
    2950:	20 f0       	brcs	.+8      	; 0x295a <__udivmodsi4_ep>
    2952:	a2 1b       	sub	r26, r18
    2954:	b3 0b       	sbc	r27, r19
    2956:	e4 0b       	sbc	r30, r20
    2958:	f5 0b       	sbc	r31, r21

0000295a <__udivmodsi4_ep>:
    295a:	66 1f       	adc	r22, r22
    295c:	77 1f       	adc	r23, r23
    295e:	88 1f       	adc	r24, r24
    2960:	99 1f       	adc	r25, r25
    2962:	1a 94       	dec	r1
    2964:	69 f7       	brne	.-38     	; 0x2940 <__udivmodsi4_loop>
    2966:	60 95       	com	r22
    2968:	70 95       	com	r23
    296a:	80 95       	com	r24
    296c:	90 95       	com	r25
    296e:	9b 01       	movw	r18, r22
    2970:	ac 01       	movw	r20, r24
    2972:	bd 01       	movw	r22, r26
    2974:	cf 01       	movw	r24, r30
    2976:	08 95       	ret

00002978 <__prologue_saves__>:
    2978:	2f 92       	push	r2
    297a:	3f 92       	push	r3
    297c:	4f 92       	push	r4
    297e:	5f 92       	push	r5
    2980:	6f 92       	push	r6
    2982:	7f 92       	push	r7
    2984:	8f 92       	push	r8
    2986:	9f 92       	push	r9
    2988:	af 92       	push	r10
    298a:	bf 92       	push	r11
    298c:	cf 92       	push	r12
    298e:	df 92       	push	r13
    2990:	ef 92       	push	r14
    2992:	ff 92       	push	r15
    2994:	0f 93       	push	r16
    2996:	1f 93       	push	r17
    2998:	cf 93       	push	r28
    299a:	df 93       	push	r29
    299c:	cd b7       	in	r28, 0x3d	; 61
    299e:	de b7       	in	r29, 0x3e	; 62
    29a0:	ca 1b       	sub	r28, r26
    29a2:	db 0b       	sbc	r29, r27
    29a4:	0f b6       	in	r0, 0x3f	; 63
    29a6:	f8 94       	cli
    29a8:	de bf       	out	0x3e, r29	; 62
    29aa:	0f be       	out	0x3f, r0	; 63
    29ac:	cd bf       	out	0x3d, r28	; 61
    29ae:	09 94       	ijmp

000029b0 <__epilogue_restores__>:
    29b0:	2a 88       	ldd	r2, Y+18	; 0x12
    29b2:	39 88       	ldd	r3, Y+17	; 0x11
    29b4:	48 88       	ldd	r4, Y+16	; 0x10
    29b6:	5f 84       	ldd	r5, Y+15	; 0x0f
    29b8:	6e 84       	ldd	r6, Y+14	; 0x0e
    29ba:	7d 84       	ldd	r7, Y+13	; 0x0d
    29bc:	8c 84       	ldd	r8, Y+12	; 0x0c
    29be:	9b 84       	ldd	r9, Y+11	; 0x0b
    29c0:	aa 84       	ldd	r10, Y+10	; 0x0a
    29c2:	b9 84       	ldd	r11, Y+9	; 0x09
    29c4:	c8 84       	ldd	r12, Y+8	; 0x08
    29c6:	df 80       	ldd	r13, Y+7	; 0x07
    29c8:	ee 80       	ldd	r14, Y+6	; 0x06
    29ca:	fd 80       	ldd	r15, Y+5	; 0x05
    29cc:	0c 81       	ldd	r16, Y+4	; 0x04
    29ce:	1b 81       	ldd	r17, Y+3	; 0x03
    29d0:	aa 81       	ldd	r26, Y+2	; 0x02
    29d2:	b9 81       	ldd	r27, Y+1	; 0x01
    29d4:	ce 0f       	add	r28, r30
    29d6:	d1 1d       	adc	r29, r1
    29d8:	0f b6       	in	r0, 0x3f	; 63
    29da:	f8 94       	cli
    29dc:	de bf       	out	0x3e, r29	; 62
    29de:	0f be       	out	0x3f, r0	; 63
    29e0:	cd bf       	out	0x3d, r28	; 61
    29e2:	ed 01       	movw	r28, r26
    29e4:	08 95       	ret

000029e6 <_exit>:
    29e6:	f8 94       	cli

000029e8 <__stop_program>:
    29e8:	ff cf       	rjmp	.-2      	; 0x29e8 <__stop_program>
